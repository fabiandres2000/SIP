(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[2],{

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=script&lang=js&":
/*!******************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=script&lang=js& ***!
  \******************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Servicios/caracterizacion_servicios */ "./resources/js/Servicios/caracterizacion_servicios.js");
/* harmony import */ var _Servicios_barrios_servicios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Servicios/barrios_servicios */ "./resources/js/Servicios/barrios_servicios.js");
/* harmony import */ var _Servicios_colegios_servicios__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Servicios/colegios_servicios */ "./resources/js/Servicios/colegios_servicios.js");
/* harmony import */ var vuejs_datepicker__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vuejs-datepicker */ "./node_modules/vuejs-datepicker/dist/vuejs-datepicker.esm.js");
/* harmony import */ var vuejs_datepicker_dist_locale__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! vuejs-datepicker/dist/locale */ "./node_modules/vuejs-datepicker/dist/locale/index.js");
/* harmony import */ var vuejs_datepicker_dist_locale__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(vuejs_datepicker_dist_locale__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! vuelidate/lib/validators */ "./node_modules/vuelidate/lib/validators/index.js");
/* harmony import */ var vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }






var isPhoneNumber = vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["helpers"].regex("numeric", /^3[0-9]{9}$/);
var alpha = vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["helpers"].regex("alpha", /^[a-zA-Z]*$/);
var alphaNumAndDotValidator = vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["helpers"].regex("alphaNumAndDot", /^[a-z\d.]*$/i);

var entero = function entero(value) {
  return /^[0-9]*$/.test(value);
};


/* harmony default export */ __webpack_exports__["default"] = ({
  components: {
    Datepicker: vuejs_datepicker__WEBPACK_IMPORTED_MODULE_4__["default"]
  },
  mounted: function mounted() {
    this.nuevo();
    this.hoy = moment();
    $('.selectBus').select2();
  },
  filters: {
    moneda: function moneda(val) {
      var number = +val.replace(/[^\d.]/g, "");
      return isNaN(number) ? 0 : number;
    },
    moment: function (_moment) {
      function moment(_x) {
        return _moment.apply(this, arguments);
      }

      moment.toString = function () {
        return _moment.toString();
      };

      return moment;
    }(function (date) {
      return moment(date).format("YYYY-MM-DD");
    })
  },
  data: function data() {
    return {
      hoy: "",
      csrf: document.querySelector('meta[name="csrf-token"]').getAttribute("content"),
      dpto_options: [],
      muni_options: {},
      corregi_options: {},
      barrio_options: {},
      parentesco_options: {},
      estado_options: {},
      escolaridad_options: {},
      ocupacion_options: {},
      etnia_options: {},
      admini_options: {},
      clasifi_options: {},
      vereda_options: {},
      grados_option: {},
      morbilidadNacer_options: {},
      morbilidad_options: {},
      metodos_options: {},
      motivos_options: {},
      grupos_options: {},
      enfcro_options: {},
      enfinf_options: {},
      religion_options: {},
      colegio_options: {},
      opciones1: [{
        value: 1,
        texto: "Ninguno"
      }, {
        value: 2,
        texto: "1 Celular"
      }, {
        value: 3,
        texto: "2 Celulares"
      }, {
        value: 4,
        texto: "Tiene 3 Celulares"
      }, {
        value: 5,
        texto: "Tiene 4 o mas Celulares"
      }],
      opciones2: [{
        value: 1,
        texto: "No Tiene"
      }, {
        value: 2,
        texto: "1 Tv"
      }, {
        value: 3,
        texto: "2 Tv"
      }, {
        value: 4,
        texto: "3 o mas tv"
      }],
      opciones3: [{
        value: 1,
        texto: "No tene Vehiculos"
      }, {
        value: 2,
        texto: "1 Vehiculo"
      }, {
        value: 3,
        texto: "2 Vehiculos"
      }, {
        value: 4,
        texto: "3 o mas Vehiculos"
      }],
      opciones4: [{
        value: 1,
        texto: "Sin estudios"
      }, {
        value: 2,
        texto: "Primaria incompleta"
      }, {
        value: 3,
        texto: "Prmaria Completa"
      }, {
        value: 4,
        texto: "Secundaria Incompleta"
      }, {
        value: 5,
        texto: "Secundaria completa"
      }, {
        value: 6,
        texto: "Educación superior incompleta"
      }, {
        value: 7,
        texto: "Educación superior completa"
      }, {
        value: 8,
        texto: "Posgrado"
      }],
      opciones5: [{
        value: 1,
        texto: "Entre $0  y $500.000 pesos"
      }, {
        value: 2,
        texto: "Entre $500.001 Y $1.100.000 pesos"
      }, {
        value: 3,
        texto: "Entre $1.100.001 a $2.069.000"
      }, {
        value: 4,
        texto: "Entre $2.070.000 y $3.269.000"
      }, {
        value: 5,
        texto: "Entre $3.270.000 y $4.780.000"
      }, {
        value: 6,
        texto: "Entre $4,780.001 y $5.150.000"
      }, {
        value: 7,
        texto: "Más de $5.150.000"
      }, {
        value: 8,
        texto: "No aplica"
      }],
      opciones6: [{
        value: 1,
        texto: "Entre $ 0 y $ 980.000"
      }, {
        value: 2,
        texto: "Entre $981.000  y $ 1.890.000"
      }, {
        value: 3,
        texto: "Entre $1.890,001  y $3.305.000"
      }, {
        value: 4,
        texto: "Entre $ 3.305.001  y  $ 5.050.000"
      }, {
        value: 5,
        texto: "Entre $ 5.050.001 y  $ 7.650.000"
      }, {
        value: 6,
        texto: "Entre $ 7.650.001 y $ 10.170.000"
      }, {
        value: 7,
        texto: "Mas de $ 10.170.001"
      }, {
        value: 8,
        texto: "No aplica"
      }],
      hogar: {
        id: 0,
        id_dpto: "",
        id_mun: "",
        id_corre: "",
        id_vereda: "",
        id_barrio: "",
        id_zona: "",
        tenencia_vivienda: "",
        numero_hogares: "",
        poblacion_especial: "",
        vias_acceso: "",
        servicios_publicos: "",
        direccion: ""
      },
      caracData: {
        id: 0,
        id_hogar: 0,
        telefono: "",
        puntaje_sisben: "",
        afiliacion_entidad: "",
        otra_eps: "",
        tipo_id: "",
        identificacion: "",
        sexo: "",
        parentesco: "",
        pnom: "",
        snom: "",
        pape: "",
        sape: "",
        salario: "",
        id_compania: "",
        estado: "",
        estado_civil: "",
        fecha_nacimiento: "",
        tipo_afiliacion: "",
        embarazo: "",
        embarazo_multiple: "",
        discapacidad: "",
        nivel_escolaridad: "",
        ocupacion: "",
        colegio: "",
        grado: "",
        etnia: "",
        clasificacion: "",
        entiende: "",
        pyp: "",
        migrante: "",
        edad: ""
      },
      CA1: {
        id: 0,
        tipo_id: "0",
        identificacion: "",
        sexo: "0",
        parentesco: "0",
        pnom: "",
        snom: "",
        pape: "",
        sape: "",
        estado_civil: "0",
        fecha_nac: "",
        edad: 0,
        puntaje_sisben: "",
        afi_entidad: "0",
        otra_eps: "",
        tipo_afiliacion: "0",
        embarazo: "0",
        embarazo_multiple: "0",
        discapacidad: "0",
        escolaridad: "0",
        ocupacion: "0",
        colegio: "",
        grado: "0",
        entiende: "0",
        migrante: "0",
        pyp: "0",
        etnia: "0",
        clasificacion: "0",
        id_hogar: 0,
        jefe: "0"
      },
      viviendaData: {
        id: 0,
        id_hogar: 0,
        tipo_vivienda: "",
        tipo_estructura: "",
        otro_tipo_estructura: "",
        numero_cuartos: "",
        personas_por_cuartos: "",
        material_predominante: "",
        tipo_cubierta: "",
        otro_tipo_cubierta: "",
        actividad_economica: "",
        cual_actividad_economica: "",
        evento_afecta_vivienda: "",
        familias_accion: "",
        promedio_ingresos: "",
        promedio_gastos: "",
        fuente_agua: "",
        energia_electrica: "",
        gas_natural: "",
        acueducto: "",
        alcantarillado: "",
        telefono_fijo: "",
        aseo: "",
        internet_subsidiado: "",
        internet_privado: "",
        cual_fuente: "",
        donde_almacena_agua: "",
        otro_almacena_agua: "",
        ubicacion_tanque: "",
        tipo_tratamiento_agua: "",
        destino_final_basura: "",
        otro_destino_final_basura: "",
        porquerizas: "",
        plagas: "",
        industrias: "",
        malos_olores: "",
        rellenos: "",
        contaminacion_a: "",
        contaminacion_v: "",
        rio: "",
        otro_cerca: "",
        cual_cerca: "",
        aereopuertos: "",
        avenidas_transitadas: "",
        lotes_abandonados: "",
        servicio_sanitario: "",
        donde_sanitario: "",
        excretas: "",
        otro_depositan_excretas: "",
        cocina: "",
        dormitorio_a: "",
        sala: "",
        dormitorio_n: "",
        sanitario: "",
        lavadero: "",
        iluminacion_adecuada: "",
        techo_adecuado: "",
        ventilacion_adecuada: "",
        pisos_adecuado: "",
        paredes_adecuadas: "",
        gasolina: "",
        plaguicidas: "",
        detergentes: "",
        plaguicidas_insectos: "",
        envases_vacios: "",
        otro_envases_vacios: "",
        elementos_protecion: "",
        otro_elementos_protecion: "",
        metodos_coccion: "",
        otro_metodos_coccion: "",
        lugares_preparan_alimentos: "",
        lugares_almacenan_alimentos: "",
        otro_lugares_almacenan_alimentos: "",
        lava_frutas: "",
        tipo_explotacion: "",
        otro_tipo_explotacion: "",
        flora_afectados: "",
        fauna_afectados: "",
        suelo_afectados: "",
        aire_afectados: "",
        agua_afectados: "",
        residuos_solidos_genera: "",
        aguas_servidas_genera: "",
        desechos_cocina_genera: "",
        heces_animales_genera: "",
        quimicos_genera: "",
        otros_genera: "",
        cual_genera: "",
        tipo_combustible: "",
        mantenimiento_red: "",
        zona_alto_riesgo: "",
        almacenamiento_residuos: "",
        fuente_contaminacion: "",
        aguas_negras: "",
        zonas_verdes: "",
        desplazamientos: "",
        rotacion_cultivo: "",
        emplea_fertilizantes: "",
        suministro_energia_ilegal: "",
        quema_cultivo: "",
        mantenimiento_preventivo: "",
        veces_inundaciones: "",
        fachada: "",
        cuantos_baños: "",
        estado_conservacion_baños: "",
        acabados_externos: "",
        estado_conservacion_estructuras: "",
        mobiliario_cocina: "",
        andenes: ""
      },
      estratificacionData: {
        cuenta_internet: "",
        tiene_pc_escritorio: "",
        tiene_pc_portatil: "",
        cuantos_celulares: "",
        tiene_equipo_sonido: "",
        cuantos_tv_color: "",
        cuantos_vehiculos: "",
        nivel_instruccion: "",
        afiliacion_salud_privada: "",
        ingresos_zona_rural: "",
        ingresos_ciudad: "",
        id_jefe: "0"
      },
      animalesData: [],
      estratificacion: [],
      animal: "",
      nombreAnimal: "",
      cuantosAnimal: "",
      vacunadoAnimal: "0",
      mOTE: false,
      mOTC: false,
      mOAE: false,
      mOFA: false,
      mODA: false,
      mOFB: false,
      mOOC: false,
      mOEV: false,
      mOEP: false,
      mOMC: false,
      mOAA: false,
      mODH: false,
      mOES: false,
      mOOG: false,
      mOEPS1: false,
      mOEPS2: false,
      mOCOL1: false,
      mOCOL2: false,
      format: "yyyy-MM-dd",
      lenguaje: vuejs_datepicker_dist_locale__WEBPACK_IMPORTED_MODULE_5__["es"],
      claseAyuda: "form-control",
      datos: [],
      datosJefe: [],
      Men1A: [],
      De1A5: [],
      De6A11: [],
      De10A59: [],
      ParPost: [],
      De12A17: [],
      De18A28: [],
      De29A59: [],
      De60: [],
      EnCro: [],
      EnInf: [],
      Migra: [],
      vectorJefes: [],
      vectorIntegrante: [],
      vectorAyuda: [],
      factores: [],
      GIDEN: false,
      GVIVI: false,
      GCARXCI: false,
      GADOLE: false,
      GADULT: false,
      GMIGRA: false,
      IDHOGAR: 0
    };
  },
  validations: {
    viviendaData: {
      tipo_vivienda: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      tipo_estructura: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      numero_cuartos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"],
        numeric: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["numeric"]
      },
      personas_por_cuartos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"],
        numeric: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["numeric"]
      },
      material_predominante: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      tipo_cubierta: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      actividad_economica: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      evento_afecta_vivienda: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      familias_accion: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      promedio_ingresos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      promedio_gastos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      fuente_agua: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      energia_electrica: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      gas_natural: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      acueducto: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      alcantarillado: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      telefono_fijo: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      aseo: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      internet_subsidiado: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      internet_privado: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      donde_almacena_agua: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      ubicacion_tanque: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      tipo_tratamiento_agua: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      destino_final_basura: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      porquerizas: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      plagas: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      industrias: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      malos_olores: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      rellenos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      contaminacion_a: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      contaminacion_v: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      rio: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      otro_cerca: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      aereopuertos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      avenidas_transitadas: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      lotes_abandonados: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      servicio_sanitario: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      donde_sanitario: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      excretas: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      cocina: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      dormitorio_a: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      sala: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      dormitorio_n: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      sanitario: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      lavadero: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      iluminacion_adecuada: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      techo_adecuado: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      ventilacion_adecuada: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      pisos_adecuado: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      paredes_adecuadas: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      gasolina: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      plaguicidas: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      detergentes: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      plaguicidas_insectos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      envases_vacios: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      elementos_protecion: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      metodos_coccion: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      lugares_preparan_alimentos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      lugares_almacenan_alimentos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      lava_frutas: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      tipo_explotacion: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      flora_afectados: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      fauna_afectados: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      suelo_afectados: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      aire_afectados: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      agua_afectados: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      residuos_solidos_genera: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      aguas_servidas_genera: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      desechos_cocina_genera: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      heces_animales_genera: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      quimicos_genera: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      otros_genera: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      tipo_combustible: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      mantenimiento_red: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      zona_alto_riesgo: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      almacenamiento_residuos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      fuente_contaminacion: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      aguas_negras: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      zonas_verdes: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      desplazamientos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      rotacion_cultivo: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      emplea_fertilizantes: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      suministro_energia_ilegal: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      quema_cultivo: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      mantenimiento_preventivo: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      veces_inundaciones: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      fachada: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      cuantos_baños: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      estado_conservacion_baños: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      acabados_externos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      estado_conservacion_estructuras: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      mobiliario_cocina: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      },
      andenes: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_6__["required"]
      }
    } // hogar: {
    //   id_dpto: { required },
    //   id_mun: { required },
    //   tenencia_vivienda: { required },
    //   numero_hogares: { required, numeric },
    //   poblacion_especial: { required },
    //   vias_acceso: { required },
    //   servicios_publicos: { required },
    //   direccion: { required }
    // }

  },
  computed: {
    calEdad: function calEdad() {
      var nacimiento = moment(this.CA1.fecha_nac);
      var hoy = moment();
      var edad = 0;

      if (nacimiento < hoy) {
        edad = hoy.diff(nacimiento, "years"); //Calculamos la diferencia en años
      } // console.info(hoy);


      return edad;
    },
    calEdad2: function calEdad2() {
      var nacimiento = moment(this.caracData.fecha_nacimiento);
      var hoy = moment();
      var edad = 0;

      if (nacimiento < hoy) {
        edad = hoy.diff(nacimiento, "years"); //Calculamos la diferencia en años
      }

      this.caracData.edad = edad;
      return edad;
    },
    wrongNumber: function wrongNumber() {
      return this.isNumeric(this.number) === false;
    },
    inputDisabled: function inputDisabled() {
      if (this.CA1.sexo === "MASCULINO") {
        this.CA1.embarazo = "NOAPLICA";
        this.CA1.embarazo_multiple = "NOAPLICA";
      } else {
        // this.CA1.embarazo = "0";
        // this.CA1.embarazo_multiple = "0";
        if (this.CA1.embarazo === "NO") {
          this.CA1.embarazo_multiple = "NO";
        } else {
          // this.caracData.embarazo = "0";
          this.CA1.embarazo_multiple = "0";
        }
      }

      return this.CA1.sexo === "MASCULINO";
    },
    inputDisabled2: function inputDisabled2() {
      if (this.caracData.sexo === "MASCULINO") {
        this.caracData.embarazo = "NOAPLICA";
        this.caracData.embarazo_multiple = "NOAPLICA";
      } else {
        // this.caracData.embarazo = "";
        // this.caracData.embarazo_multiple = "";
        if (this.caracData.embarazo === "NO") {
          this.caracData.embarazo_multiple = "NO";
        } else {
          // this.caracData.embarazo = "0";
          this.caracData.embarazo_multiple = "";
        }
      }

      return this.caracData.sexo === "MASCULINO";
    },
    soloNum: function soloNum() {// alert(this.Men1A.peso_nacer);
      // return this.Men1A.peso_nacer.replace( /[^\d]/g, '' ).trim();
    },
    calHoy: function calHoy() {
      var hoy = moment();
      return hoy;
    }
  },
  methods: {
    Actualizar: function Actualizar() {
      var _this = this;

      return _asyncToGenerator(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {
        var id, opcion, parametros;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                id = 0;
                opcion = "";

                if (_this.hogar.id_corre != "") {
                  opcion = "CORRE";
                  id = _this.hogar.id_corre;
                } else {
                  opcion = "MUN";
                  id = _this.hogar.id_mun;
                }

                parametros = {
                  _token: _this.csrf,
                  id: id,
                  opcion: opcion
                };
                _context.prev = 4;
                _context.next = 7;
                return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["actualizar"](parametros).then(function (respuesta) {
                  _this.corregi_options = respuesta.data.arrayCorregi;
                  _this.vereda_options = respuesta.data.arrayVeredas;
                  _this.parentesco_options = respuesta.data.arrayParentesco;
                  _this.estado_options = respuesta.data.arrayEstado;
                  _this.escolaridad_options = respuesta.data.arrayEscolaridad;
                  _this.ocupacion_options = respuesta.data.arrayOcupacion;
                  _this.etnia_options = respuesta.data.arrayEtnia;
                  _this.admini_options = respuesta.data.arrayAdmini;
                  _this.clasifi_options = respuesta.data.arrayCLasifi;
                  _this.morbilidadNacer_options = respuesta.data.arrayMorbilidadNacer;
                  _this.morbilidad_options = respuesta.data.arrayMorbilidad;
                  _this.metodos_options = respuesta.data.arrayMetodos;
                  _this.motivos_options = respuesta.data.arrayMotivos;
                  _this.grupos_options = respuesta.data.arrayGrupos;
                  _this.enfcro_options = respuesta.data.arrayEnfCro;
                  _this.enfinf_options = respuesta.data.arrayEnfInf;
                  _this.religion_options = respuesta.data.arrayReligion;
                  _this.colegio_options = respuesta.data.arrayColegios;
                  _this.barrio_options = respuesta.data.arrayBarrios;
                });

              case 7:
                _context.next = 18;
                break;

              case 9:
                _context.prev = 9;
                _context.t0 = _context["catch"](4);
                _context.t1 = _context.t0.response.status;
                _context.next = _context.t1 === 422 ? 14 : 16;
                break;

              case 14:
                _this.$swal("Error...!", "Ocurrio un error!", "error");

                return _context.abrupt("break", 18);

              case 16:
                _this.$swal("Error...!", "Ocurrio un error!", "error");

                return _context.abrupt("break", 18);

              case 18:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, null, [[4, 9]]);
      }))();
    },
    cambiarTab2: function cambiarTab2(opcion) {
      if (this.GIDEN === false) {
        // $('.nav-tabs a[href="#' + opcion + '"]').tab('show');
        $('.nav-tabs a[href="#tabIdentificacion"]').tab('show');
        return false;
      } else {}
    },
    cambiarTab1: function cambiarTab1(opcion, actual) {
      var _this2 = this;

      return _asyncToGenerator(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2() {
        var bandera, resul, i, val, iden, _resul, _i, val1, iden1, _resul2, parametros, isInvalid, _parametros, auxi, _resul3, _resul4, _resul5, _resul6, _resul7, _parametros2, _auxi, _resul8, _resul9, _resul10, _parametros3, _auxi2, _resul11, _resul12, _resul13, _parametros4, _auxi3, _resul14, _parametros5;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                bandera = false;

                if (!(actual === "tabIdentificacion")) {
                  _context2.next = 93;
                  break;
                }

                if (!(_this2.GIDEN === false)) {
                  _context2.next = 92;
                  break;
                }

                if (!(_this2.hogar.id_dpto === "")) {
                  _context2.next = 7;
                  break;
                }

                _this2.$refs.id_dpto.focus();

                _this2.$swal("Error...!", "Por favor seleccione el departamento!", "error");

                return _context2.abrupt("return");

              case 7:
                if (!(_this2.hogar.id_mun === "")) {
                  _context2.next = 11;
                  break;
                }

                _this2.$refs.id_mun.focus();

                _this2.$swal("Error...!", "Por favor seleccione el municipio!", "error");

                return _context2.abrupt("return");

              case 11:
                if (!(_this2.hogar.tenencia_vivienda === "")) {
                  _context2.next = 15;
                  break;
                }

                _this2.$refs.tenencia_vivienda.focus();

                _this2.$swal("Error...!", "Por favor seleccione la tenencia de vivienda!", "error");

                return _context2.abrupt("return");

              case 15:
                if (!(_this2.allLetter(_this2.hogar.numero_hogares) === false)) {
                  _context2.next = 20;
                  break;
                }

                _this2.$refs.numero_hogares.focus();

                _this2.hogar.numero_hogares = "";

                _this2.$swal("Error...!", "Por favor digite solo numero en el numero de hogares!", "error");

                return _context2.abrupt("return");

              case 20:
                if (!(_this2.hogar.numero_hogares === "")) {
                  _context2.next = 24;
                  break;
                }

                _this2.$refs.numero_hogares.focus();

                _this2.$swal("Error...!", "Por favor digite el numero de hogares!", "error");

                return _context2.abrupt("return");

              case 24:
                if (!(_this2.hogar.poblacion_especial === "")) {
                  _context2.next = 28;
                  break;
                }

                _this2.$refs.poblacion_especial.focus();

                _this2.$swal("Error...!", "Por favor seleccione la población especial!", "error");

                return _context2.abrupt("return");

              case 28:
                if (!(_this2.hogar.vias_acceso === "")) {
                  _context2.next = 32;
                  break;
                }

                _this2.$refs.vias_acceso.focus();

                _this2.$swal("Error...!", "Por favor seleccione si la comunidad presenta vías de acceso!", "error");

                return _context2.abrupt("return");

              case 32:
                if (!(_this2.hogar.servicios_publicos === "")) {
                  _context2.next = 36;
                  break;
                }

                _this2.$refs.servicios_publicos.focus();

                _this2.$swal("Error...!", "Por favor seleccione si presenta acceso fácil a los servicios públicos!", "error");

                return _context2.abrupt("return");

              case 36:
                if (!(_this2.hogar.direccion === "")) {
                  _context2.next = 40;
                  break;
                }

                _this2.$refs.direccion.focus();

                _this2.$swal("Error...!", "Por favor digite la dirección!", "error");

                return _context2.abrupt("return");

              case 40:
                if (!(_this2.datosJefe.length <= 0)) {
                  _context2.next = 45;
                  break;
                }

                _this2.$swal("Error...!", "Por favor agregue por lo menos un jefe de hogar", "error");

                return _context2.abrupt("return");

              case 45:
                resul = _this2.valJef1();

                if (!resul) {
                  _context2.next = 50;
                  break;
                }

                bandera = true;
                _context2.next = 51;
                break;

              case 50:
                return _context2.abrupt("return", false);

              case 51:
                _this2.vectorAyuda = [];
                _context2.next = 54;
                return _this2.valJef2();

              case 54:
                if (_this2.vectorAyuda.length > 0) {
                  for (i = 0; i < _this2.vectorAyuda.length; i++) {
                    if (_this2.vectorAyuda[i].error === "ERROR1") {
                      val = (_this2.vectorAyuda[i].identificacion / 1).toFixed(0).replace(".", ",");
                      iden = val.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

                      _this2.$swal("Validar...!", "El Documento <b>" + iden + "</b> De La Fila <b>" + (i + 1) + "</b> Se Encuentra Registrado", "warning");

                      bandera = false;
                    }
                  }
                } else {
                  bandera = true;
                }

              case 55:
                if (!(_this2.datos.length > 0)) {
                  _context2.next = 66;
                  break;
                }

                _resul = _this2.valInt1();

                if (!_resul) {
                  _context2.next = 61;
                  break;
                }

                bandera = true;
                _context2.next = 62;
                break;

              case 61:
                return _context2.abrupt("return", false);

              case 62:
                _this2.vectorAyuda = [];
                _context2.next = 65;
                return _this2.valInt2();

              case 65:
                if (_this2.vectorAyuda.length > 0) {
                  for (_i = 0; _i < _this2.vectorAyuda.length; _i++) {
                    if (_this2.vectorAyuda[_i].error === "ERROR1") {
                      val1 = (_this2.vectorAyuda[_i].identificacion / 1).toFixed(0).replace(".", ",");
                      iden1 = val1.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

                      _this2.$swal("Validar...!", "El Documento <b>" + iden1 + "</b> De La Fila <b>" + (_i + 1) + "</b> Se Encuentra Registrado En Los Integrantes", "warning");

                      bandera = false;
                    }
                  }
                } else {
                  bandera = true;
                }

              case 66:
                if (!(_this2.factores.length > 0)) {
                  _context2.next = 73;
                  break;
                }

                _resul2 = _this2.valFactores();

                if (!_resul2) {
                  _context2.next = 72;
                  break;
                }

                bandera = true;
                _context2.next = 73;
                break;

              case 72:
                return _context2.abrupt("return", false);

              case 73:
                //VALIDAR LA TABLA FACTORES
                //GUARDAR DATOS
                parametros = {
                  _token: _this2.csrf,
                  hogar: _this2.hogar,
                  caracterizacion: _this2.datosJefe,
                  integrantes: _this2.datos,
                  factores: _this2.factores,
                  opcion: "GUARDAR",
                  opc: "GUAINDEN"
                };
                _context2.prev = 74;
                _context2.next = 77;
                return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["guardar"](parametros).then(function (respuesta) {
                  if (respuesta.data.OPC == "SI") {
                    _this2.GIDEN = true;
                    _this2.IDHOGAR = respuesta.data.IDHOGAR;
                  }
                })["catch"](function (error) {
                  _this2.errorDevuelto = error.response.data.errors;
                  _this2.entrarPorError = true;

                  _this2.$swal("Error...!", "No se pudo guardar los datos de la pestaña investigación", "error");

                  return;
                });

              case 77:
                _context2.next = 90;
                break;

              case 79:
                _context2.prev = 79;
                _context2.t0 = _context2["catch"](74);
                _context2.t1 = _context2.t0.response.status;
                _context2.next = _context2.t1 === 419 ? 84 : _context2.t1 === 422 ? 86 : 88;
                break;

              case 84:
                _this2.$swal("Error...!", "Ocurrio un error!", "error");

                return _context2.abrupt("break", 90);

              case 86:
                _this2.$swal("Error...!", "Ocurrio un error!", "error");

                return _context2.abrupt("break", 90);

              case 88:
                _this2.$swal("Error...!", "Ocurrio un error!", "error");

                return _context2.abrupt("break", 90);

              case 90:
                _context2.next = 93;
                break;

              case 92:
                bandera = true;

              case 93:
                if (!(actual === "tabVivienda")) {
                  _context2.next = 129;
                  break;
                }

                bandera = true;

                if (!(_this2.GIDEN === false)) {
                  _context2.next = 98;
                  break;
                }

                _this2.$swal("Error...!", "Por Favor Complete Los Campos Obligatorios de la Pestaña Hogar", "error");

                return _context2.abrupt("return", false);

              case 98:
                _this2.$v.$touch();

                isInvalid = _this2.$v.$invalid;

                if (!isInvalid) {
                  _context2.next = 105;
                  break;
                }

                _this2.$swal("Error...!", "Por Favor Complete Los Campos Obligatorios de la Pestaña Vivienda", "error");

                return _context2.abrupt("return", false);

              case 105:
                if (!(_this2.GVIVI === false && _this2.GIDEN === true && _this2.IDHOGAR !== 0)) {
                  _context2.next = 128;
                  break;
                }

                if (!(_this2.estratificacion.length <= 0)) {
                  _context2.next = 109;
                  break;
                }

                _this2.$swal("Error...!", "Por favor agregue por lo menos una estratificación", "error");

                return _context2.abrupt("return");

              case 109:
                //GUARDAR DATOS
                _parametros = {
                  _token: _this2.csrf,
                  vivienda: _this2.viviendaData,
                  estratificacion: _this2.estratificacion,
                  Animales: _this2.animalesData,
                  opcion: "GUARDAR",
                  opc: "GUAVIVI",
                  IDHOGAR: _this2.IDHOGAR
                };
                _context2.prev = 110;
                _context2.next = 113;
                return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["guardar"](_parametros).then(function (respuesta) {
                  if (respuesta.data.OPC == "SI") {
                    _this2.GVIVI = true;
                    bandera = true;
                  }
                })["catch"](function (error) {
                  _this2.errorDevuelto = error.response.data.errors;
                  _this2.entrarPorError = true;

                  _this2.$swal("Error...!", "No se pudo guardar los datos de la pestaña vivienda", "error");

                  return;
                });

              case 113:
                _context2.next = 126;
                break;

              case 115:
                _context2.prev = 115;
                _context2.t2 = _context2["catch"](110);
                _context2.t3 = _context2.t2.response.status;
                _context2.next = _context2.t3 === 419 ? 120 : _context2.t3 === 422 ? 122 : 124;
                break;

              case 120:
                _this2.$swal("Error...!", "Ocurrio un error!", "error");

                return _context2.abrupt("break", 126);

              case 122:
                _this2.$swal("Error...!", "Ocurrio un error!", "error");

                return _context2.abrupt("break", 126);

              case 124:
                _this2.$swal("Error...!", "Ocurrio un error!", "error");

                return _context2.abrupt("break", 126);

              case 126:
                _context2.next = 129;
                break;

              case 128:
                bandera = true;

              case 129:
                if (!(actual === "cartxciclo")) {
                  _context2.next = 203;
                  break;
                }

                bandera = true;

                if (!(_this2.GIDEN === false)) {
                  _context2.next = 134;
                  break;
                }

                _this2.$swal("Error...!", "Por Favor Complete Los Campos Obligatorios de la Pestaña Hogar", "error");

                return _context2.abrupt("return", false);

              case 134:
                if (!(_this2.GVIVI === false)) {
                  _context2.next = 137;
                  break;
                }

                _this2.$swal("Error...!", "Por Favor Complete Los Campos Obligatorios de la Pestaña Vivienda", "error");

                return _context2.abrupt("return", false);

              case 137:
                if (!(_this2.GCARXCI === false && _this2.GIDEN === true && _this2.GVIVI === true)) {
                  _context2.next = 202;
                  break;
                }

                auxi = false; //VALIDAR LA TABLA MENORES DE 1 AÑO

                if (!(_this2.Men1A.length > 0)) {
                  _context2.next = 147;
                  break;
                }

                _resul3 = _this2.valMen1();

                if (!_resul3) {
                  _context2.next = 146;
                  break;
                }

                bandera = true;
                auxi = true;
                _context2.next = 147;
                break;

              case 146:
                return _context2.abrupt("return", false);

              case 147:
                if (!(_this2.De1A5.length > 0)) {
                  _context2.next = 155;
                  break;
                }

                _resul4 = _this2.valDe1A5();

                if (!_resul4) {
                  _context2.next = 154;
                  break;
                }

                bandera = true;
                auxi = true;
                _context2.next = 155;
                break;

              case 154:
                return _context2.abrupt("return", false);

              case 155:
                if (!(_this2.De6A11.length > 0)) {
                  _context2.next = 163;
                  break;
                }

                _resul5 = _this2.valDe6A11();

                if (!_resul5) {
                  _context2.next = 162;
                  break;
                }

                bandera = true;
                auxi = true;
                _context2.next = 163;
                break;

              case 162:
                return _context2.abrupt("return", false);

              case 163:
                if (!(_this2.De10A59.length > 0)) {
                  _context2.next = 171;
                  break;
                }

                _resul6 = _this2.valDe10A59();

                if (!_resul6) {
                  _context2.next = 170;
                  break;
                }

                bandera = true;
                auxi = true;
                _context2.next = 171;
                break;

              case 170:
                return _context2.abrupt("return", false);

              case 171:
                if (!(_this2.ParPost.length > 0)) {
                  _context2.next = 179;
                  break;
                }

                _resul7 = _this2.valParPost();

                if (!_resul7) {
                  _context2.next = 178;
                  break;
                }

                bandera = true;
                auxi = true;
                _context2.next = 179;
                break;

              case 178:
                return _context2.abrupt("return", false);

              case 179:
                if (!auxi) {
                  _context2.next = 199;
                  break;
                }

                //GUARDAR DATOS
                _parametros2 = {
                  _token: _this2.csrf,
                  Men1A: _this2.Men1A,
                  De1A5: _this2.De1A5,
                  De6A11: _this2.De6A11,
                  De10A59: _this2.De10A59,
                  ParPost: _this2.ParPost,
                  opcion: "GUARDAR",
                  opc: "GUACARCI",
                  IDHOGAR: _this2.IDHOGAR
                };
                _context2.prev = 181;
                _context2.next = 184;
                return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["guardar"](_parametros2).then(function (respuesta) {
                  if (respuesta.data.OPC == "SI") {
                    _this2.GCARXCI = true;
                    bandera = true;
                  }
                })["catch"](function (error) {
                  _this2.errorDevuelto = error.response.data.errors;
                  _this2.entrarPorError = true;

                  _this2.$swal("Error...!", "No se pudo guardar los datos de la pestaña ciclos", "error");

                  return;
                });

              case 184:
                _context2.next = 197;
                break;

              case 186:
                _context2.prev = 186;
                _context2.t4 = _context2["catch"](181);
                _context2.t5 = _context2.t4.response.status;
                _context2.next = _context2.t5 === 419 ? 191 : _context2.t5 === 422 ? 193 : 195;
                break;

              case 191:
                _this2.$swal("Error...!", "Ocurrio un error!", "error");

                return _context2.abrupt("break", 197);

              case 193:
                _this2.$swal("Error...!", "Ocurrio un error!", "error");

                return _context2.abrupt("break", 197);

              case 195:
                _this2.$swal("Error...!", "Ocurrio un error!", "error");

                return _context2.abrupt("break", 197);

              case 197:
                _context2.next = 200;
                break;

              case 199:
                bandera = true;

              case 200:
                _context2.next = 203;
                break;

              case 202:
                bandera = true;

              case 203:
                if (!(actual === "adolescente")) {
                  _context2.next = 265;
                  break;
                }

                bandera = true;
                _auxi = false;

                if (!(_this2.GIDEN === false)) {
                  _context2.next = 209;
                  break;
                }

                _this2.$swal("Error...!", "Por Favor Complete Los Campos Obligatorios de la Pestaña Hogar", "error");

                return _context2.abrupt("return", false);

              case 209:
                if (!(_this2.GVIVI === false)) {
                  _context2.next = 212;
                  break;
                }

                _this2.$swal("Error...!", "Por Favor Complete Los Campos Obligatorios de la Pestaña Vivienda", "error");

                return _context2.abrupt("return", false);

              case 212:
                if (!(_this2.Men1A.length > 0 || _this2.De1A5.length > 0 || _this2.De6A11.length > 0 || _this2.De10A59.length > 0 || _this2.ParPost.length > 0)) {
                  _context2.next = 216;
                  break;
                }

                if (!(_this2.GCARXCI === false)) {
                  _context2.next = 216;
                  break;
                }

                _this2.$swal("Error...!", "Por Favor Guarde Los Datos de la Pestaña Cart. X ciclo", "error");

                return _context2.abrupt("return", false);

              case 216:
                if (!(_this2.GADOLE === false && _this2.GIDEN === true && _this2.GVIVI === true)) {
                  _context2.next = 264;
                  break;
                }

                if (!(_this2.De12A17.length > 0)) {
                  _context2.next = 225;
                  break;
                }

                _resul8 = _this2.valDe12A17();

                if (!_resul8) {
                  _context2.next = 224;
                  break;
                }

                bandera = true;
                _auxi = true;
                _context2.next = 225;
                break;

              case 224:
                return _context2.abrupt("return", false);

              case 225:
                if (!(_this2.De18A28.length > 0)) {
                  _context2.next = 233;
                  break;
                }

                _resul9 = _this2.valDe18A28();

                if (!_resul9) {
                  _context2.next = 232;
                  break;
                }

                bandera = true;
                _auxi = true;
                _context2.next = 233;
                break;

              case 232:
                return _context2.abrupt("return", false);

              case 233:
                if (!(_this2.De29A59.length > 0)) {
                  _context2.next = 241;
                  break;
                }

                _resul10 = _this2.valDe29A59();

                if (!_resul10) {
                  _context2.next = 240;
                  break;
                }

                bandera = true;
                _auxi = true;
                _context2.next = 241;
                break;

              case 240:
                return _context2.abrupt("return", false);

              case 241:
                if (!_auxi) {
                  _context2.next = 261;
                  break;
                }

                //GUARDAR DATOS
                _parametros3 = {
                  _token: _this2.csrf,
                  De12A17: _this2.De12A17,
                  De18A28: _this2.De18A28,
                  De29A59: _this2.De29A59,
                  opcion: "GUARDAR",
                  opc: "GUADOLE",
                  IDHOGAR: _this2.IDHOGAR
                };
                _context2.prev = 243;
                _context2.next = 246;
                return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["guardar"](_parametros3).then(function (respuesta) {
                  if (respuesta.data.OPC == "SI") {
                    _this2.GADOLE = true;
                    bandera = true;
                  }
                })["catch"](function (error) {
                  _this2.errorDevuelto = error.response.data.errors;
                  _this2.entrarPorError = true;

                  _this2.$swal("Error...!", "No se pudo guardar los datos de la pestaña adolescentes", "error");

                  return;
                });

              case 246:
                _context2.next = 259;
                break;

              case 248:
                _context2.prev = 248;
                _context2.t6 = _context2["catch"](243);
                _context2.t7 = _context2.t6.response.status;
                _context2.next = _context2.t7 === 419 ? 253 : _context2.t7 === 422 ? 255 : 257;
                break;

              case 253:
                _this2.$swal("Error...!", "Ocurrio un error!", "error");

                return _context2.abrupt("break", 259);

              case 255:
                _this2.$swal("Error...!", "Ocurrio un error!", "error");

                return _context2.abrupt("break", 259);

              case 257:
                _this2.$swal("Error...!", "Ocurrio un error!", "error");

                return _context2.abrupt("break", 259);

              case 259:
                _context2.next = 262;
                break;

              case 261:
                bandera = true;

              case 262:
                _context2.next = 265;
                break;

              case 264:
                bandera = true;

              case 265:
                if (!(actual === "adultomayor")) {
                  _context2.next = 330;
                  break;
                }

                _auxi2 = false;

                if (!(_this2.GIDEN === false)) {
                  _context2.next = 270;
                  break;
                }

                _this2.$swal("Error...!", "Por Favor Complete Los Campos Obligatorios de la Pestaña Hogar", "error");

                return _context2.abrupt("return", false);

              case 270:
                if (!(_this2.GVIVI === false)) {
                  _context2.next = 273;
                  break;
                }

                _this2.$swal("Error...!", "Por Favor Complete Los Campos Obligatorios de la Pestaña Vivienda", "error");

                return _context2.abrupt("return", false);

              case 273:
                if (!(_this2.Men1A.length > 0 || _this2.De1A5.length > 0 || _this2.De6A11.length > 0 || _this2.De10A59.length > 0 || _this2.ParPost.length > 0)) {
                  _context2.next = 277;
                  break;
                }

                if (!(_this2.GCARXCI === false)) {
                  _context2.next = 277;
                  break;
                }

                _this2.$swal("Error...!", "Por Favor Guarde Los Datos de la Pestaña Cart. X ciclo", "error");

                return _context2.abrupt("return", false);

              case 277:
                if (!(_this2.De12A17.length > 0 || _this2.De18A28.length > 0 || _this2.De29A59.length > 0)) {
                  _context2.next = 281;
                  break;
                }

                if (!(_this2.GADOLE === false)) {
                  _context2.next = 281;
                  break;
                }

                _this2.$swal("Error...!", "Por Favor Complete Los Campos Obligatorios de la Pestaña Adolecentes/Jovenes", "error");

                return _context2.abrupt("return", false);

              case 281:
                if (!(_this2.GADULT === false)) {
                  _context2.next = 329;
                  break;
                }

                if (!(_this2.De60.length > 0)) {
                  _context2.next = 290;
                  break;
                }

                _resul11 = _this2.valDe60();

                if (!_resul11) {
                  _context2.next = 289;
                  break;
                }

                bandera = true;
                _auxi2 = true;
                _context2.next = 290;
                break;

              case 289:
                return _context2.abrupt("return", false);

              case 290:
                if (!(_this2.EnCro.length > 0)) {
                  _context2.next = 298;
                  break;
                }

                _resul12 = _this2.valEnCro();

                if (!_resul12) {
                  _context2.next = 297;
                  break;
                }

                bandera = true;
                _auxi2 = true;
                _context2.next = 298;
                break;

              case 297:
                return _context2.abrupt("return", false);

              case 298:
                if (!(_this2.EnInf.length > 0)) {
                  _context2.next = 306;
                  break;
                }

                _resul13 = _this2.valEnInf();

                if (!_resul13) {
                  _context2.next = 305;
                  break;
                }

                bandera = true;
                _auxi2 = true;
                _context2.next = 306;
                break;

              case 305:
                return _context2.abrupt("return", false);

              case 306:
                if (!_auxi2) {
                  _context2.next = 326;
                  break;
                }

                //GUARDAR DATOS
                _parametros4 = {
                  _token: _this2.csrf,
                  De60: _this2.De60,
                  EnCro: _this2.EnCro,
                  EnInf: _this2.EnInf,
                  opcion: "GUARDAR",
                  opc: "GUADULT",
                  IDHOGAR: _this2.IDHOGAR
                };
                _context2.prev = 308;
                _context2.next = 311;
                return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["guardar"](_parametros4).then(function (respuesta) {
                  if (respuesta.data.OPC == "SI") {
                    console.log("SI GUARDE");
                    _this2.GADULT = true;
                    bandera = true;
                  }
                })["catch"](function (error) {
                  _this2.errorDevuelto = error.response.data.errors;
                  _this2.entrarPorError = true;

                  _this2.$swal("Error...!", "No se pudo guardar los datos de la pestaña adultos", "error");

                  return;
                });

              case 311:
                _context2.next = 324;
                break;

              case 313:
                _context2.prev = 313;
                _context2.t8 = _context2["catch"](308);
                _context2.t9 = _context2.t8.response.status;
                _context2.next = _context2.t9 === 419 ? 318 : _context2.t9 === 422 ? 320 : 322;
                break;

              case 318:
                _this2.$swal("Error...!", "Ocurrio un error!", "error");

                return _context2.abrupt("break", 324);

              case 320:
                _this2.$swal("Error...!", "Ocurrio un error!", "error");

                return _context2.abrupt("break", 324);

              case 322:
                _this2.$swal("Error...!", "Ocurrio un error!", "error");

                return _context2.abrupt("break", 324);

              case 324:
                _context2.next = 327;
                break;

              case 326:
                bandera = true;

              case 327:
                _context2.next = 330;
                break;

              case 329:
                bandera = true;

              case 330:
                if (!(actual === "migrante")) {
                  _context2.next = 386;
                  break;
                }

                _auxi3 = false;

                if (!(_this2.GIDEN === false)) {
                  _context2.next = 335;
                  break;
                }

                _this2.$swal("Error...!", "Por Favor Complete Los Campos Obligatorios de la Pestaña Hogar", "error");

                return _context2.abrupt("return", false);

              case 335:
                if (!(_this2.GVIVI === false)) {
                  _context2.next = 338;
                  break;
                }

                _this2.$swal("Error...!", "Por Favor Complete Los Campos Obligatorios de la Pestaña Vivienda", "error");

                return _context2.abrupt("return", false);

              case 338:
                if (!(_this2.Men1A.length > 0 || _this2.De1A5.length > 0 || _this2.De6A11.length > 0 || _this2.De10A59.length > 0 || _this2.ParPost.length > 0)) {
                  _context2.next = 342;
                  break;
                }

                if (!(_this2.GCARXCI === false)) {
                  _context2.next = 342;
                  break;
                }

                _this2.$swal("Error...!", "Por Favor Guarde Los Datos de la Pestaña Cart. X ciclo", "error");

                return _context2.abrupt("return", false);

              case 342:
                if (!(_this2.De12A17.length > 0 || _this2.De18A28.length > 0 || _this2.De29A59.length > 0)) {
                  _context2.next = 346;
                  break;
                }

                if (!(_this2.GADOLE === false)) {
                  _context2.next = 346;
                  break;
                }

                _this2.$swal("Error...!", "Por Favor Complete Los Campos Obligatorios de la Pestaña Adolecentes/Jovenes", "error");

                return _context2.abrupt("return", false);

              case 346:
                if (!(_this2.De60.length > 0 || _this2.EnCro.length > 0 || _this2.EnInf.length > 0)) {
                  _context2.next = 350;
                  break;
                }

                if (!(_this2.GADULT === false)) {
                  _context2.next = 350;
                  break;
                }

                _this2.$swal("Error...!", "Por Favor Complete Los Campos Obligatorios de la Pestaña Adulto mayor", "error");

                return _context2.abrupt("return", false);

              case 350:
                if (!(_this2.GMIGRA === false)) {
                  _context2.next = 384;
                  break;
                }

                if (!(_this2.Migra.length > 0)) {
                  _context2.next = 359;
                  break;
                }

                _resul14 = _this2.valMigra();

                if (!_resul14) {
                  _context2.next = 358;
                  break;
                }

                bandera = true;
                _auxi3 = true;
                _context2.next = 359;
                break;

              case 358:
                return _context2.abrupt("return", false);

              case 359:
                if (!_auxi3) {
                  _context2.next = 379;
                  break;
                }

                _parametros5 = {
                  _token: _this2.csrf,
                  Migra: _this2.Migra,
                  opcion: "GUARDAR",
                  opc: "GUAMIGRA",
                  IDHOGAR: _this2.IDHOGAR
                };
                _context2.prev = 361;
                _context2.next = 364;
                return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["guardar"](_parametros5).then(function (respuesta) {
                  if (respuesta.data.OPC == "SI") {
                    _this2.$swal("Guardar...!", "Datos Guardados Exitosamente!", "success");

                    _this2.$router.push("/gestion");
                  }
                })["catch"](function (error) {
                  _this2.errorDevuelto = error.response.data.errors;
                  _this2.entrarPorError = true;

                  _this2.$swal("Error...!", "No se pudo guardar los datos de la pestaña migrantes", "error");

                  return;
                });

              case 364:
                _context2.next = 377;
                break;

              case 366:
                _context2.prev = 366;
                _context2.t10 = _context2["catch"](361);
                _context2.t11 = _context2.t10.response.status;
                _context2.next = _context2.t11 === 419 ? 371 : _context2.t11 === 422 ? 373 : 375;
                break;

              case 371:
                _this2.$swal("Error...!", "Ocurrio un error!", "error");

                return _context2.abrupt("break", 377);

              case 373:
                _this2.$swal("Error...!", "Ocurrio un error!", "error");

                return _context2.abrupt("break", 377);

              case 375:
                _this2.$swal("Error...!", "Ocurrio un error!", "error");

                return _context2.abrupt("break", 377);

              case 377:
                _context2.next = 382;
                break;

              case 379:
                bandera = true;

                _this2.$swal("Guardar...!", "Datos Guardados Exitosamente!", "success");

                _this2.$router.push("/gestion");

              case 382:
                _context2.next = 386;
                break;

              case 384:
                _this2.$swal("Guardar...!", "Datos Guardados Exitosamente!", "success");

                _this2.$router.push("/gestion");

              case 386:
                if (bandera) {
                  bandera = false;
                  $('.nav-tabs a[href="#' + opcion + '"]').tab("show");
                }

              case 387:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, null, [[74, 79], [110, 115], [181, 186], [243, 248], [308, 313], [361, 366]]);
      }))();
    },
    //VALIDACIONES
    valJef1: function valJef1() {
      for (var i = 0; i < this.datosJefe.length; i++) {
        if (this.datosJefe[i].tipo_id === "") {
          this.$swal("Error...!", "Por favor seleccione un <b>tipo de identificación</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].identificacion === "") {
          this.$swal("Error...!", "Por favor digite una <b>identificación</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].pnom === "") {
          this.$swal("Error...!", "Por favor digite el <b>primer nombre</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].pape === "") {
          this.$swal("Error...!", "Por favor digite el <b>primer apellido</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].sexo === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>sexo</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].parentesco === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>parentesco</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].estado_civil === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>estado civil</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].fecha_nacimiento === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>fecha de nacimiento</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].afiliacion_entidad === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>eps</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].tipo_afiliacion === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>tipo de afiliación</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].nivel_escolaridad === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>nivel de escolaridad</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].ocupacion === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>ocupación</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].etnia === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>etnia</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].clasificacion === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>clasificacion de la etnia</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].salario === "") {
          this.$swal("Error...!", "Por favor digite el <b>salario</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        } // VERIFICAR SI ESTA EN LA TABLA


        var resultado = this.buscarIguales(this.datosJefe, this.datosJefe[i].identificacion); // VERIFICAR SI ESTA EN LA TABLA

        if (resultado > 1) {
          this.$swal("Validar...!", "El Documento <b>" + this.datosJefe[i].identificacion + "</b> De La Fila <b>" + (i + 1) + "</b>  Se Encuentra Agregado En La Tabla de Jefes de Hogar", "warning");
          return false;
        }
      }

      return true;
    },
    buscarIguales: function buscarIguales(vector, busqueda) {
      var contador = 0;

      for (var i = 0; i < vector.length; i++) {
        if (vector[i].identificacion === busqueda) {
          contador++;
        }
      }

      return contador;
    },
    valJef2: function () {
      var _valJef = _asyncToGenerator(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3() {
        var _this3 = this;

        var _loop, i;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _loop =
                /*#__PURE__*/
                _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _loop(i) {
                  var parametros;
                  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _loop$(_context3) {
                    while (1) {
                      switch (_context3.prev = _context3.next) {
                        case 0:
                          parametros = {
                            _token: _this3.csrf,
                            identificacion: _this3.datosJefe[i].identificacion
                          };
                          _context3.prev = 1;
                          _context3.next = 4;
                          return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["validarJefe"](parametros).then(function (respuesta) {
                            if (respuesta.data.OPC == "EXISTE") {
                              _this3.vectorAyuda.push({
                                identificacion: respuesta.data.identificacion,
                                fila: i + 1,
                                error: "ERROR1"
                              });

                              return false;
                            } else {}
                          })["catch"](function (error) {});

                        case 4:
                          _context3.next = 8;
                          break;

                        case 6:
                          _context3.prev = 6;
                          _context3.t0 = _context3["catch"](1);

                        case 8:
                        case "end":
                          return _context3.stop();
                      }
                    }
                  }, _loop, null, [[1, 6]]);
                });
                i = 0;

              case 2:
                if (!(i < this.datosJefe.length)) {
                  _context4.next = 7;
                  break;
                }

                return _context4.delegateYield(_loop(i), "t0", 4);

              case 4:
                i++;
                _context4.next = 2;
                break;

              case 7:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee3, this);
      }));

      function valJef2() {
        return _valJef.apply(this, arguments);
      }

      return valJef2;
    }(),
    valInt1: function valInt1() {
      for (var i = 0; i < this.datos.length; i++) {
        if (this.datos[i].tipo_id === "0") {
          this.$swal("Error...!", "Por favor seleccione un <b>tipo de identificación</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].identificacion === "") {
          this.$swal("Error...!", "Por favor digite una <b>identificación</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].pnom === "") {
          this.$swal("Error...!", "Por favor digite el <b>primer nombre</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].pape === "") {
          this.$swal("Error...!", "Por favor digite el <b>primer apellido</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].sexo === "0") {
          this.$swal("Error...!", "Por favor seleccione el <b>sexo</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].parentesco === "0") {
          this.$swal("Error...!", "Por favor seleccione el <b>parentesco</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].estado_civil === "0") {
          this.$swal("Error...!", "Por favor seleccione el <b>estado civil</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].fecha_nac === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>fecha de nacimiento</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].afi_entidad === "0") {
          this.$swal("Error...!", "Por favor seleccione la <b>eps</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].tipo_afiliacion === "0") {
          this.$swal("Error...!", "Por favor seleccione el <b>tipo de afiliación</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].escolaridad === "0") {
          this.$swal("Error...!", "Por favor seleccione el <b>nivel de escolaridad</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].ocupacion === "0") {
          this.$swal("Error...!", "Por favor seleccione la <b>ocupación</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].etnia === "0") {
          this.$swal("Error...!", "Por favor seleccione la <b>etnia</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].clasificacion === "0") {
          this.$swal("Error...!", "Por favor seleccione la <b>clasificacion de la etnia</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].jefe === "0") {
          this.$swal("Error...!", "Por favor seleccione el <b>jefe de hogar</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        } // VERIFICAR SI ESTA EN LA TABLA


        var resultado = this.buscarIguales(this.datos, this.datos[i].identificacion); // VERIFICAR SI ESTA EN LA TABLA

        if (resultado > 1) {
          this.$swal("Validar...!", "El Documento <b>" + this.datos[i].identificacion + "</b> De La Fila <b>" + (i + 1) + "</b>  Se Encuentra Agregado En La Tabla de Integrantes", "warning"); // item.identificacion="";

          return false;
        }
      }

      return true;
    },
    valInt2: function () {
      var _valInt = _asyncToGenerator(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee4() {
        var _this4 = this;

        var _loop2, i;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee4$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                _loop2 =
                /*#__PURE__*/
                _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _loop2(i) {
                  var parametros;
                  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _loop2$(_context5) {
                    while (1) {
                      switch (_context5.prev = _context5.next) {
                        case 0:
                          parametros = {
                            _token: _this4.csrf,
                            identificacion: _this4.datos[i].identificacion
                          };
                          _context5.prev = 1;
                          _context5.next = 4;
                          return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["validar"](parametros).then(function (respuesta) {
                            if (respuesta.data.OPC == "EXISTE") {
                              _this4.vectorAyuda.push({
                                identificacion: respuesta.data.identificacion,
                                fila: i + 1,
                                error: "ERROR1"
                              });

                              return false;
                            } else {}
                          })["catch"](function (error) {});

                        case 4:
                          _context5.next = 8;
                          break;

                        case 6:
                          _context5.prev = 6;
                          _context5.t0 = _context5["catch"](1);

                        case 8:
                        case "end":
                          return _context5.stop();
                      }
                    }
                  }, _loop2, null, [[1, 6]]);
                });
                i = 0;

              case 2:
                if (!(i < this.datos.length)) {
                  _context6.next = 7;
                  break;
                }

                return _context6.delegateYield(_loop2(i), "t0", 4);

              case 4:
                i++;
                _context6.next = 2;
                break;

              case 7:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee4, this);
      }));

      function valInt2() {
        return _valInt.apply(this, arguments);
      }

      return valInt2;
    }(),
    valFactores: function valFactores() {
      for (var i = 0; i < this.factores.length; i++) {
        if (this.factores[i].dialogos === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Dialogos</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].sancion === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Sanción ó Supresión</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].castigo_verbal === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Castigo Verbal</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].castigo_fisico === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Castigo Fisico</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].alcohol === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Alcohol</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].tabaco === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Tabaco</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].sustancias_psico === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Sustancias Psicoactivas</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].apuestas === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Apuestas</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].violencia_fisica === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Violencia Fisica</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].violencia_psico === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Violencia Psicologica</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].violencia_economica === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Violencia Economica</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].abuso_sexual === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Abuso Sexual</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].actividad_fisica === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Actividad Fisica</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].consumo_frutas === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Consumo de Frutas y Verduras</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].religiosos === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Religiosos</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].sociales === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Sociales</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].culturales === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Culturales</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].recreativos === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Recreativos</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }
      }

      return true;
    },
    //VALIDACIONES DE LOS CICLOS
    valMen1: function valMen1() {
      for (var i = 0; i < this.Men1A.length; i++) {
        if (this.Men1A[i].lugar_nacimiento === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>lugar de nacimiento</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].hemoclasificacion === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>hemoclasificacion</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].compli_parto === "") {
          this.$swal("Error...!", "Por favor seleccione <b>complicaciones en el parto</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].via_parto === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>via del parto</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].cyc === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>control de CyC</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].valoracion_23 === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>valoración integral de 2 a 3 meses</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].valoracion_68 === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>valoración integral de 6 a 8 meses</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].valoracion_911 === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>valoración integral de 9 a 11 meses</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].lactancia === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>lactancia exclusiva</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].peso_nacer === "") {
          this.$swal("Error...!", "Por favor digite el <b>peso al nacer</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].peso_actual === "") {
          this.$swal("Error...!", "Por favor digite el <b>peso actual</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].longitud_nacer === "") {
          this.$swal("Error...!", "Por favor digite la <b>longitud al nacer</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].longitud_actual === "") {
          this.$swal("Error...!", "Por favor digite la <b>longitud actual</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].longitud_actual === "") {
          this.$swal("Error...!", "Por favor digite la <b>longitud actual</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].cinta === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>cinta</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].edemas === "") {
          this.$swal("Error...!", "Por favor seleccione <b>edemas</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].lenguaje === "") {
          this.$swal("Error...!", "Por favor seleccione de la valoración del desarrollo el <b>lenguaje</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].motora === "") {
          this.$swal("Error...!", "Por favor seleccione de la valoración del desarrollo la opcion <b>motora</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].conducta === "") {
          this.$swal("Error...!", "Por favor seleccione de la valoración del desarrollo la <b>conducta</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].visuales === "") {
          this.$swal("Error...!", "Por favor seleccione si tiene problemas <b>visuales</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].auditivos === "") {
          this.$swal("Error...!", "Por favor seleccione si tiene problemas <b>auditivos</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].carnet === "") {
          this.$swal("Error...!", "Por favor seleccione de la vacunación si tiene <b>CARNET(PAI)</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].bcg === "") {
          this.$swal("Error...!", "Por favor seleccione de la vacunación si tiene la vacuna <b>BCG</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].hepb === "") {
          this.$swal("Error...!", "Por favor seleccione de la vacunación si tiene la vacuna <b>HEP-B</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].polio === "") {
          this.$swal("Error...!", "Por favor seleccione de la vacunación si tiene la vacuna <b>POLIO</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].pentavalente === "") {
          this.$swal("Error...!", "Por favor seleccione de la vacunación si tiene la vacuna <b>PENTAVALENTE</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].maltrato === "") {
          this.$swal("Error...!", "Por favor seleccione si sufre de <b>maltrato</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].morbilidad === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>morbilidad</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].tsh === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>TSH</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }
      }

      return true;
    },
    valDe1A5: function valDe1A5() {
      for (var i = 0; i < this.De1A5.length; i++) {
        if (this.De1A5[i].beneficiario === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>Beneficiario de un Programa</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].cyc === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>Control de CyC</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].valoracion_1823 === "") {
          this.$swal("Error...!", "Por favor seleccione de la Valoración Integral <b>18-23 meses</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].valoracion_3035 === "") {
          this.$swal("Error...!", "Por favor seleccione de la Valoración Integral <b>30-35 meses</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].valoracion_4 === "") {
          this.$swal("Error...!", "Por favor seleccione de la Valoración Integral <b>4 años</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].peso === "") {
          this.$swal("Error...!", "Por favor digite en la Valoración Nutricional el <b>peso</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].talla === "") {
          this.$swal("Error...!", "Por favor digite en la Valoración Nutricional la <b>talla</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].imc === "") {
          this.$swal("Error...!", "Por favor digite en la Valoración Nutricional el <b>IMC</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].pb === "") {
          this.$swal("Error...!", "Por favor digite en la Valoración Nutricional el <b>P.B</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].pt === "") {
          this.$swal("Error...!", "Por favor digite en la Valoración Nutricional el <b>P/T</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].te === "") {
          this.$swal("Error...!", "Por favor digite en la Valoración Nutricional el <b>T/E</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].lenguaje === "") {
          this.$swal("Error...!", "Por favor seleccione de la Valoración Del Desarrollo el <b>Lenguaje</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].motora === "") {
          this.$swal("Error...!", "Por favor seleccione de la Valoración Del Desarrollo <b>Motora</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].conducta === "") {
          this.$swal("Error...!", "Por favor seleccione de la Valoración Del Desarrollo La <b>Conducta</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].visuales === "") {
          this.$swal("Error...!", "Por favor seleccione de Problemas Los <b>Visuales</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].auditivos === "") {
          this.$swal("Error...!", "Por favor seleccione de Problemas Los <b>Auditivos</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].caries === "") {
          this.$swal("Error...!", "Por favor seleccione de Salud Oral Las <b>Caries</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].nocepillado === "") {
          this.$swal("Error...!", "Por favor digite en Salud Oral El <b>No. Cepillado Dia</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].consultaodon === "") {
          this.$swal("Error...!", "Por favor seleccione de Salud Oral La <b>Consulta Odontologica</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].carnet === "") {
          this.$swal("Error...!", "Por favor seleccione de Vacunación el <b>Carnet (PAI)</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].bcg === "") {
          this.$swal("Error...!", "Por favor seleccione de Vacunación el <b>BCG</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].polio === "") {
          this.$swal("Error...!", "Por favor seleccione de Vacunación el <b>POLIO</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].dpt === "") {
          this.$swal("Error...!", "Por favor seleccione de Vacunación el <b>DPT</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].fiebrea === "") {
          this.$swal("Error...!", "Por favor seleccione de Vacunación la <b>Fiebre Amarilla</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].tripleviral === "") {
          this.$swal("Error...!", "Por favor seleccione de Vacunación la <b>Triple Viral</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].pentavalente === "") {
          this.$swal("Error...!", "Por favor seleccione de Vacunación la <b>Pentavalente</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].desparacitado === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Desparacitado</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].maltrato === "") {
          this.$swal("Error...!", "Por favor seleccione las <b> Señales de Maltrato</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].enfermedad === "") {
          this.$swal("Error...!", "Por favor seleccione la <b> Enfermedad</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].medicamento === "") {
          this.$swal("Error...!", "Por favor seleccione el <b> Medicamento</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }
      }

      return true;
    },
    valDe6A11: function valDe6A11() {
      for (var i = 0; i < this.De6A11.length; i++) {
        if (this.De6A11[i].cyc === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>Control de CyC</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].atencion === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>Atencion Por</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].peso === "") {
          this.$swal("Error...!", "Por favor digite el <b>Peso</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].talla === "") {
          this.$swal("Error...!", "Por favor digite la <b>Talla</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].imc === "") {
          this.$swal("Error...!", "Por favor digite el <b>IMC/E</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].pb === "") {
          this.$swal("Error...!", "Por favor digite el <b>P.B</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].pt === "") {
          this.$swal("Error...!", "Por favor digite el <b>P/T</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].te === "") {
          this.$swal("Error...!", "Por favor digite el <b>T/E</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].conducta === "") {
          this.$swal("Error...!", "Por favor seleccione de problemas la <b>Conducta</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].visuales === "") {
          this.$swal("Error...!", "Por favor seleccione de problemas <b>Visuales</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].auditivos === "") {
          this.$swal("Error...!", "Por favor seleccione de problemas <b>Auditivos</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].dientes_sanos === "") {
          this.$swal("Error...!", "Por favor seleccione de salud oral <b>Dientes Sanos</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].consultaodon === "") {
          this.$swal("Error...!", "Por favor seleccione de salud oral la <b>Consulta Odontologica</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].nofluor === "") {
          this.$swal("Error...!", "Por favor seleccione de salud oral el <b>No. Aplicacion Fluor</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].nocepillado === "") {
          this.$swal("Error...!", "Por favor seleccione de salud oral el <b>No. Cepillado Dia</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].maltrato === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Señales Maltrato ó Abuso</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].sustanciaspsico === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Sustancias Psicoactivas</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].desparacitado === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Desparacitado</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].enfermedad === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Enfermedad</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].medicamento === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Medicamento</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].padre === "") {
          this.$swal("Error...!", "Por favor seleccione Relación Familiar <b>Padre</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].madre === "") {
          this.$swal("Error...!", "Por favor seleccione Relación Familiar <b>Madre</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].hermanos === "") {
          this.$swal("Error...!", "Por favor seleccione Relación Familiar <b>Hermanos</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].conyuge === "") {
          this.$swal("Error...!", "Por favor seleccione Relación Familiar <b>Conyuge</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }
      }

      return true;
    },
    valDe10A59: function valDe10A59() {
      for (var i = 0; i < this.De10A59.length; i++) {
        if (this.De10A59[i].primera_mes === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>Edad Primera Mestruación</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].flujo_vaginal === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>Flujo Vaginal</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].flujo_uretral === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>Flujo Uretral</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].relaciones_sexuales === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Relaciones Sexuales</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].compa_sexuales === "") {
          this.$swal("Error...!", "Por favor digite el <b>No. Compañeros Sexuales</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].usa_condon === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Usa Condon</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].abortos_seis === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Abortos Antes de 6 Meses</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].embarazo_adolecentes === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Embarazo en Adolecentes</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].metodo === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>Metodo</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].tiempo_metodo === "") {
          this.$swal("Error...!", "Por favor digite el <b>Tiempo de Metodo</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].controles === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Controles Ultimo Año</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].motivo === "") {
          this.$swal("Error...!", "Por favor seleccione en No Planifica el <b>Motivo</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].citologia === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Citologia Cervico Vaginal</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].colposcopia === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Colposcopia</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].examen_seno === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Examen de seno</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].violencia === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Violencia Intrafamiliar</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].tdit === "") {
          this.$swal("Error...!", "Por favor seleccione en Vacunación la <b>TD/IT</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].tripleviral === "") {
          this.$swal("Error...!", "Por favor seleccione en Vacunación la <b>Triple Viral</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].nacidos_vivos === "") {
          this.$swal("Error...!", "Por favor digite los <b>Hijos Nacidos Vivos</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].abortos === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Abortos</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].examen_prostata === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Examen de Prostata</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].biposia_prostata === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Biposia de Prostata</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }
      }

      return true;
    },
    valParPost: function valParPost() {
      for (var i = 0; i < this.ParPost.length; i++) {
        if (this.ParPost[i].aceptacion === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>Aceptación del Embarazo</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].control_prenatal === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>Control Prenatal</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].atencion_parto === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>Atención del Parto</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].carnet === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>Carnet de Control Prenatal</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].fecha_ultima === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>Fecha Ultima Mestruación</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].fecha_probable === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>Fecha Probable Parto</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].peso === "") {
          this.$swal("Error...!", "Por favor digite el <b>Peso</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].talla === "") {
          this.$swal("Error...!", "Por favor digite la <b>Talla</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].imc === "") {
          this.$swal("Error...!", "Por favor digite el <b>IMC</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].semanas_ges === "") {
          this.$swal("Error...!", "Por favor digite las <b>Semanas de Gestación</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].num_controles === "") {
          this.$swal("Error...!", "Por favor digite el <b>No. Controles Prenatales</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].vih === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>Vih</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].toxoplasma === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>Toxoplasma</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].vdrl === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>V.D.R.L</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].odontologia === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Odontologia</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].vacunaciontdit === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Vacunación TD/IT</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].fecha_ultimo_parto === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Fecha Ultimo Parto</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].suplementacion === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Suplementación con Hierro</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].enfermedades_cronicas === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Enfermedades Cronicas</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].sedentarismo === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Sedentarismo</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].fuma === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Fuma</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].consumo === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Consumo SPA</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].bebidas === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Consume Bebidas Alcoholicas</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].tipo_parto === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Tipo de Parto</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].atencion_institucional === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Atención Institucional</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].cc18 === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Consulta de Control 8 Dias</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].morgestacion === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Gestación</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].morparto === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Parto</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].morposparto === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Postparto</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }
      }

      return true;
    },
    valDe12A17: function valDe12A17() {
      for (var i = 0; i < this.De12A17.length; i++) {
        if (this.De12A17[i].peso === "") {
          this.$swal("Error...!", "Por favor digite el <b>Peso</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].talla === "") {
          this.$swal("Error...!", "Por favor digite la <b>Talla</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].imc === "") {
          this.$swal("Error...!", "Por favor digite el <b>IMC</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].pb === "") {
          this.$swal("Error...!", "Por favor digite la <b>PB</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].visuales === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Visuales</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].auditivos === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Auditivos</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].conducta === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>De Conducta</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].enfermedades_cronicas === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Enfermedad Cronica</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].dientes_sanos === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Dientes Sanos</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].consultaodon === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Consulta Odontologica</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].nocepillado === "") {
          this.$swal("Error...!", "Por favor digite la opcion <b>No. Cepillado Dia</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].maltrato === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Señales de Maltrato</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].alcohol === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Alcohol</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].fuma === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Fuma</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].spa === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>SPA</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].desparacitado === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Desparacitado</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].empleo === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Empleo</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].religion === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Religión</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].queesvih === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Sabe que es VIH</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].queescancerutero === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Sabe que es Cancer de Utero</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].queespapiloma === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Sabe que es el Papiloma</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].queescancerseno === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Sabe que es el Cancer de Seno</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].padre === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Padre</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].madre === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Madre</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].hermanos === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Hermanos</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].conyuge === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Conyuge</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }
      }

      return true;
    },
    valDe18A28: function valDe18A28() {
      for (var i = 0; i < this.De18A28.length; i++) {
        if (this.De18A28[i].peso === "") {
          this.$swal("Error...!", "Por favor digite el <b>Peso</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].talla === "") {
          this.$swal("Error...!", "Por favor digite la <b>Talla</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].imc === "") {
          this.$swal("Error...!", "Por favor digite el <b>IMC</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].pcintura === "") {
          this.$swal("Error...!", "Por favor digite la opcion <b>P. Cintura</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].pb === "") {
          this.$swal("Error...!", "Por favor digite la opcion <b>PB</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].visuales === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Visuales</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].auditivos === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Auditivos</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].conducta === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>De Conducta</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].enfermedades_cronicas === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Enfermedad Cronica</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].dientes_sanos === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Dientes Sanos</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].consultaodon === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Consulta Odontologica</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].nocepillado === "") {
          this.$swal("Error...!", "Por favor digite la opcion <b>No. Cepillado Dia</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].maltrato === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Señales de Maltrato</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].alcohol === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Alcohol</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].fuma === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Fuma</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].spa === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>SPA</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].desparacitado === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Desparacitado</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].empleo === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Empleo</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].religion === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Religión</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].queesvih === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Sabe que es VIH</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].queescancerutero === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Sabe que es Cancer de Utero</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].queespapiloma === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Sabe que es el Papiloma</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }
      }

      return true;
    },
    valDe29A59: function valDe29A59() {
      for (var i = 0; i < this.De29A59.length; i++) {
        if (this.De29A59[i].peso === "") {
          this.$swal("Error...!", "Por favor digite el <b>Peso</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].talla === "") {
          this.$swal("Error...!", "Por favor digite la <b>Talla</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].imc === "") {
          this.$swal("Error...!", "Por favor digite el <b>IMC</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].pcintura === "") {
          this.$swal("Error...!", "Por favor digite la opcion <b>P. Cintura</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].pb === "") {
          this.$swal("Error...!", "Por favor digite la opcion <b>PB</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].visuales === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Visuales</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].auditivos === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Auditivos</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].conducta === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>De Conducta</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].enfermedades_cronicas === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Enfermedad Cronica</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].dientes_sanos === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Dientes Sanos</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].consultaodon === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Consulta Odontologica</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].nocepillado === "") {
          this.$swal("Error...!", "Por favor digite la opcion <b>No. Cepillado Dia</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].maltrato === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Señales de Maltrato</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].alcohol === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Alcohol</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].fuma === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Fuma</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].spa === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>SPA</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].desparacitado === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Desparacitado</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].empleo === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Empleo</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].examen_prostata === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Examen de Prostata</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].citologia === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Citologias</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].examen_mama === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Examen de MAMA</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].religion === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Religión</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].queesvih === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Sabe que es VIH</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].queescancerutero === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Sabe que es Cancer de Utero</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].queespapiloma === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Sabe que es el Papiloma</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }
      }

      return true;
    },
    valDe60: function valDe60() {
      for (var i = 0; i < this.De60.length; i++) {
        if (this.De60[i].grupo_ayudas === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Grupo de Ayudas</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }

        if (this.De60[i].peso === "") {
          this.$swal("Error...!", "Por favor digite la opcion <b>Peso</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }

        if (this.De60[i].talla === "") {
          this.$swal("Error...!", "Por favor digite la opcion <b>Talla</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }

        if (this.De60[i].imc === "") {
          this.$swal("Error...!", "Por favor digite la opcion <b>IMC</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }

        if (this.De60[i].pa === "") {
          this.$swal("Error...!", "Por favor digite la opcion <b>PA</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        } // if (this.De60[i].glicemia === "") {
        //   this.$swal(
        //     "Error...!",
        //     "Por favor seleccione la opcion <b>Glicemia</b> en la fila " +
        //       (i + 1) +
        //       " de la tabla adulto mayor hombres y mujeres de 60 años y mas",
        //     "error"
        //   );
        //   return false;
        // }


        if (this.De60[i].cigarrillo === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Cigarrillo ó Tabaco</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }

        if (this.De60[i].alcohol === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Consumo de Alcohol</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }

        if (this.De60[i].actividad_fisica === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Actividad Fisica Recreativa</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }

        if (this.De60[i].sintomatico === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Sintomático Respiratorio</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }

        if (this.De60[i].examen_seno === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Examen de Seno</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }

        if (this.De60[i].citologia === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Citologia Cervico Vaginal</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }

        if (this.De60[i].colposcopia === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Colposcopia</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }

        if (this.De60[i].examen_prostata === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Examen de Prostata</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }

        if (this.De60[i].biposia_prostata === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Biposia de Prostata</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }

        if (this.De60[i].agudeza_visual === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Examen de Agudeza Visual</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }

        if (this.De60[i].subsidio === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Subsidio de Entidad del Estado</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }

        if (this.De60[i].enfermedades_cronicas === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Enfermedades Cronicas</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }

        if (this.De60[i].enfermedades_infecciosas === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Enfermedades Infecciosas</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }
      }

      return true;
    },
    valEnCro: function valEnCro() {
      for (var i = 0; i < this.EnCro.length; i++) {
        if (this.EnCro[i].enfermedad === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Nombre de la Enfermedad</b> en la fila " + (i + 1) + " de la tabla enfermedades cronicas", "error");
          return false;
        }

        if (this.EnCro[i].tiempo === "") {
          this.$swal("Error...!", "Por favor digite la opcion <b>Diagnosticado Hace cuanto tiempo</b> en la fila " + (i + 1) + " de la tabla enfermedades cronicas", "error");
          return false;
        }

        if (this.EnCro[i].tratamiento === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Está en Tratamiento</b> en la fila " + (i + 1) + " de la tabla enfermedades cronicas", "error");
          return false;
        }

        if (this.EnCro[i].complicaciones === "") {
          this.$swal("Error...!", "Por favor digite la opcion <b>Complicaciones</b> en la fila " + (i + 1) + " de la tabla enfermedades cronicas", "error");
          return false;
        }
      }

      return true;
    },
    valEnInf: function valEnInf() {
      for (var i = 0; i < this.EnInf.length; i++) {
        if (this.EnInf[i].enfermedad === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Nombre de la Enfermedad</b> en la fila " + (i + 1) + " de la tabla enfermedades infecciosas", "error");
          return false;
        }

        if (this.EnInf[i].tiempo === "") {
          this.$swal("Error...!", "Por favor digite la opcion <b>Diagnosticado Hace cuanto tiempo</b> en la fila " + (i + 1) + " de la tabla enfermedades infecciosas", "error");
          return false;
        }

        if (this.EnInf[i].tratamiento === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Está en Tratamiento</b> en la fila " + (i + 1) + " de la tabla enfermedades infecciosas", "error");
          return false;
        }

        if (this.EnInf[i].complicaciones === "") {
          this.$swal("Error...!", "Por favor digite la opcion <b>Complicaciones</b> en la fila " + (i + 1) + " de la tabla enfermedades infecciosas", "error");
          return false;
        }
      }

      return true;
    },
    valMigra: function valMigra() {
      for (var i = 0; i < this.Migra.length; i++) {
        if (this.Migra[i].pais === "") {
          this.$swal("Error...!", "Por favor digite la opción <b>Pais de Origen</b> en la fila " + (i + 1) + " de la tabla migrante", "error");
          return false;
        }

        if (this.Migra[i].registrado === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Registrado Como Migrante</b> en la fila " + (i + 1) + " de la tabla migrantes", "error");
          return false;
        }

        if (this.Migra[i].cuantollego === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Hace Cuanto Llego Al Pais</b> en la fila " + (i + 1) + " de la tabla migrantes", "error");
          return false;
        }

        if (this.Migra[i].futuro === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>En el Futuro Usted Piensa</b> en la fila " + (i + 1) + " de la tabla migrantes", "error");
          return false;
        }

        if (this.Migra[i].recibido === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Usted a Recibido Ayudas del Gobierno</b> en la fila " + (i + 1) + " de la tabla migrantes", "error");
          return false;
        }

        if (this.Migra[i].necesidad === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Principal Necesidad en Estos Momnetos</b> en la fila " + (i + 1) + " de la tabla migrantes", "error");
          return false;
        }

        if (this.Migra[i].dependen === "") {
          this.$swal("Error...!", "Por favor digite la opción <b>Personas Que Dependen de Usted</b> en la fila " + (i + 1) + " de la tabla migrante", "error");
          return false;
        }

        if (this.Migra[i].ingreso === "") {
          this.$swal("Error...!", "Por favor digite la opción <b>Ingreso Mensual Actualmente</b> en la fila " + (i + 1) + " de la tabla migrante", "error");
          return false;
        }
      }

      return true;
    },
    //VALIDACIONES DE LOS CICLOS
    //VALIDACIONES
    allLetter: function allLetter(valor) {
      var letters = /^([0-9])*$/;

      if (valor === "") {
        console.log("vacio");
        return false;
      } else {
        if (valor.match(letters)) {
          console.log("no hay letras");
          return true;
        } else {
          console.log("hay letras");
          return false;
        }
      }
    },
    isNumeric: function isNumeric(n) {
      return !isNaN(parseFloat(n)) && isFinite(n);
    },
    nuevo: function () {
      var _nuevo = _asyncToGenerator(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee5() {
        var _this5 = this;

        var parametros;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee5$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                parametros = {
                  _token: this.csrf
                };
                _context7.prev = 1;
                _context7.next = 4;
                return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["nuevaCaracterizacion"](parametros).then(function (respuesta) {
                  _this5.dpto_options = respuesta.data.arrayDpto;
                  _this5.muni_options = respuesta.data.arrayMuni;
                  _this5.corregi_options = respuesta.data.arrayCorregi;
                  _this5.vereda_options = respuesta.data.arrayVeredas; // this.barrio_options = respuesta.data.arrayBarrios;

                  _this5.parentesco_options = respuesta.data.arrayParentesco;
                  _this5.estado_options = respuesta.data.arrayEstado;
                  _this5.escolaridad_options = respuesta.data.arrayEscolaridad;
                  _this5.ocupacion_options = respuesta.data.arrayOcupacion;
                  _this5.etnia_options = respuesta.data.arrayEtnia;
                  _this5.admini_options = respuesta.data.arrayAdmini;
                  _this5.clasifi_options = respuesta.data.arrayCLasifi;
                  _this5.grados_option = respuesta.data.arrayGrados;
                  _this5.morbilidadNacer_options = respuesta.data.arrayMorbilidadNacer;
                  _this5.morbilidad_options = respuesta.data.arrayMorbilidad;
                  _this5.metodos_options = respuesta.data.arrayMetodos;
                  _this5.motivos_options = respuesta.data.arrayMotivos;
                  _this5.grupos_options = respuesta.data.arrayGrupos;
                  _this5.enfcro_options = respuesta.data.arrayEnfCro;
                  _this5.enfinf_options = respuesta.data.arrayEnfInf;
                  _this5.religion_options = respuesta.data.arrayReligion;
                });

              case 4:
                _context7.next = 15;
                break;

              case 6:
                _context7.prev = 6;
                _context7.t0 = _context7["catch"](1);
                _context7.t1 = _context7.t0.response.status;
                _context7.next = _context7.t1 === 422 ? 11 : 13;
                break;

              case 11:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context7.abrupt("break", 15);

              case 13:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context7.abrupt("break", 15);

              case 15:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee5, this, [[1, 6]]);
      }));

      function nuevo() {
        return _nuevo.apply(this, arguments);
      }

      return nuevo;
    }(),
    agregar: function () {
      var _agregar = _asyncToGenerator(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee6() {
        var _this6 = this;

        var parametros;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee6$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                if (!(this.CA1.tipo_id == "0")) {
                  _context8.next = 3;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione un tipo de identificación!", "error");
                return _context8.abrupt("return");

              case 3:
                if (!(this.CA1.identificacion == "")) {
                  _context8.next = 6;
                  break;
                }

                this.$swal("Error...!", "Por favor digite el documento de identificación!", "error");
                return _context8.abrupt("return");

              case 6:
                if (!(this.CA1.sexo == "0")) {
                  _context8.next = 9;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione el sexo!", "error");
                return _context8.abrupt("return");

              case 9:
                if (!(this.CA1.parentesco == "0")) {
                  _context8.next = 12;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione el parentesco!", "error");
                return _context8.abrupt("return");

              case 12:
                if (!(this.CA1.pnom == "0")) {
                  _context8.next = 15;
                  break;
                }

                this.$swal("Error...!", "Por favor digite el primer nombre!", "error");
                return _context8.abrupt("return");

              case 15:
                if (!(this.CA1.pape == "0")) {
                  _context8.next = 18;
                  break;
                }

                this.$swal("Error...!", "Por favor digite el primer apellido!", "error");
                return _context8.abrupt("return");

              case 18:
                if (!(this.CA1.estado_civil == "0")) {
                  _context8.next = 21;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione el estado civil!", "error");
                return _context8.abrupt("return");

              case 21:
                if (!(this.CA1.fecha_nac == "")) {
                  _context8.next = 24;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione la fecha de nacimiento!", "error");
                return _context8.abrupt("return");

              case 24:
                if (!(this.CA1.escolaridad == "0")) {
                  _context8.next = 27;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione el nivel de escolaridad!", "error");
                return _context8.abrupt("return");

              case 27:
                if (!(this.CA1.ocupacion == "0")) {
                  _context8.next = 30;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione la ocupación!", "error");
                return _context8.abrupt("return");

              case 30:
                if (!(this.CA1.etnia == "0")) {
                  _context8.next = 33;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione la etnia!", "error");
                return _context8.abrupt("return");

              case 33:
                if (!(this.CA1.clasificacion == "0")) {
                  _context8.next = 36;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione la clasificacion de la etnia!", "error");
                return _context8.abrupt("return");

              case 36:
                if (!(this.CA1.entiende == "0")) {
                  _context8.next = 39;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione la opción entiende español!", "error");
                return _context8.abrupt("return");

              case 39:
                if (!(this.CA1.pyp == "0")) {
                  _context8.next = 42;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione la opción PYP!", "error");
                return _context8.abrupt("return");

              case 42:
                if (!(this.CA1.migrante == "0")) {
                  _context8.next = 45;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione la opción migrante!", "error");
                return _context8.abrupt("return");

              case 45:
                if (!(this.CA1.jefe == "0")) {
                  _context8.next = 48;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione el un jefe de hogar!", "error");
                return _context8.abrupt("return");

              case 48:
                // VALIDAR SI EL INTEGRANTE SE ENCUENTRA AGREGADO
                this.CA1.identificacion = this.CA1.identificacion.replace(/[.*+\-?^${}()|[\]\\]/g, "");
                parametros = {
                  _token: this.csrf,
                  identificacion: this.CA1.identificacion
                };
                _context8.prev = 50;
                _context8.next = 53;
                return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["validar"](parametros).then(function (respuesta) {
                  if (respuesta.data.OPC == "EXISTE") {
                    var val = (respuesta.data.identificacion / 1).toFixed(0).replace(".", ",");
                    var iden = val.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

                    _this6.$swal("Validar...!", "El Documento <b>" + iden + "</b> Se Encuentra Registrado", "warning");

                    return false;
                  } else {
                    // VERIFICAR SI ESTA EN LA TABLA
                    var resultado = _this6.datos.filter(function (identi) {
                      return identi.identificacion.includes(_this6.CA1.identificacion);
                    }); // VERIFICAR SI ESTA EN LA TABLA


                    if (resultado.length > 0) {
                      _this6.$swal("Validar...!", "El Documento <b>" + _this6.CA1.identificacion + "</b> Se Encuentra Agregado", "warning");

                      return false;
                    } else {
                      var nacimiento = moment(_this6.CA1.fecha_nac);
                      var hoy = moment();
                      var edad = 0;

                      if (nacimiento < hoy) {
                        edad = hoy.diff(nacimiento, "years"); //Calculamos la diferencia en años
                      }

                      _this6.datos.push({
                        id: 0,
                        tipo_id: _this6.CA1.tipo_id,
                        identificacion: _this6.CA1.identificacion,
                        sexo: _this6.CA1.sexo,
                        parentesco: _this6.CA1.parentesco,
                        textoParentesco: _this6.showText(_this6.CA1.parentesco, _this6.parentesco_options),
                        pnom: _this6.CA1.pnom,
                        snom: _this6.CA1.snom,
                        pape: _this6.CA1.pape,
                        sape: _this6.CA1.sape,
                        estado_civil: _this6.CA1.estado_civil,
                        textoEstado: _this6.showText(_this6.CA1.estado_civil, _this6.estado_options),
                        fecha_nac: _this6.CA1.fecha_nac,
                        edad: edad,
                        afi_entidad: _this6.CA1.afi_entidad,
                        otra_eps: _this6.CA1.otra_eps,
                        tipo_afiliacion: _this6.CA1.tipo_afiliacion,
                        embarazo: _this6.CA1.embarazo,
                        embarazo_multiple: _this6.CA1.embarazo_multiple,
                        discapacidad: _this6.CA1.discapacidad,
                        escolaridad: _this6.CA1.escolaridad,
                        textoEscolaridad: _this6.showText(_this6.CA1.escolaridad, _this6.escolaridad_options),
                        ocupacion: _this6.CA1.ocupacion,
                        textoOcupacion: _this6.showText(_this6.CA1.ocupacion, _this6.ocupacion_options),
                        colegio: _this6.CA1.colegio,
                        grado: _this6.CA1.grado,
                        entiende: _this6.CA1.entiende,
                        migrante: _this6.CA1.migrante,
                        pyp: _this6.CA1.pyp,
                        etnia: _this6.CA1.etnia,
                        textoEtnia: _this6.showText(_this6.CA1.etnia, _this6.etnia_options),
                        clasificacion: _this6.CA1.clasificacion,
                        puntaje_sisben: _this6.CA1.puntaje_sisben,
                        jefe: _this6.CA1.jefe
                      });

                      var indice = _this6.datos.findIndex(function (identi) {
                        return identi.identificacion === _this6.CA1.identificacion;
                      });

                      _this6.vectorIntegrante.push({
                        index: indice,
                        identificacion: _this6.CA1.identificacion
                      });

                      _this6.CA1.id = "INTE"; // AGREGAR NIÑOS MENORES DE 1 AÑO

                      if (edad <= 0) {
                        _this6.Amenores1Anio(_this6.CA1);
                      } // AGREGAR NIÑOS MENORES DE 1 AÑO
                      // AGREGAR DE 1 A 5 AÑOS


                      if (edad >= 1 && edad <= 5) {
                        _this6.Ade1a5Anio(_this6.CA1, edad);
                      } // AGREGAR DE 1 A 5 AÑOS
                      // AGREGAR DE 6 A 11 AÑOS


                      if (edad >= 6 && edad <= 11) {
                        _this6.Ade6a11Anio(_this6.CA1, edad);
                      } // AGREGAR DE 6 A 11 AÑOS
                      // AGREGAR DE 10 A 59 AÑOS


                      if (edad >= 10 && edad <= 59) {
                        _this6.Ade10a59Anio(_this6.CA1, edad);
                      } // AGREGAR DE 10 A 59 AÑOS
                      // AGREGAR PARTO POSTPARTO
                      // alert(this.CA1.embarazo_multiple);


                      if (_this6.CA1.embarazo === "SI") {
                        _this6.AParPost(_this6.CA1, edad);
                      } // AGREGAR PARTO POSTPARTO
                      // AGREGAR DE 12 A 17 AÑOS


                      if (edad >= 12 && edad <= 17) {
                        _this6.Ade12a17Anio(_this6.CA1, edad);
                      } // AGREGAR DE 12 A 17 AÑOS
                      // AGREGAR DE 18 A 28 AÑOS


                      if (edad >= 18 && edad <= 28) {
                        _this6.Ade18a28Anio(_this6.CA1, edad);
                      } // AGREGAR DE 18 A 28 AÑOS
                      // AGREGAR DE 29 A 59 AÑOS


                      if (edad >= 29 && edad <= 59) {
                        _this6.Ade29a59Anio(_this6.CA1, edad);
                      } // AGREGAR DE 29 A 59 AÑOS
                      // AGREGAR DE 60 ó MAS AÑOS


                      if (edad >= 60) {
                        _this6.Ade60Anio(_this6.CA1, edad);
                      } // AGREGAR DE 60 ó MAS AÑOS
                      // AGREGAR MIGRANTES


                      if (_this6.CA1.migrante === "SI") {
                        _this6.AMigra(_this6.CA1, edad);
                      } // AGREGAR MIGRANTES


                      _this6.limpiar();
                    }
                  }
                })["catch"](function (error) {
                  _this6.errorDevuelto = error.response.data.errors;
                  _this6.entrarPorError = true;
                });

              case 53:
                _context8.next = 66;
                break;

              case 55:
                _context8.prev = 55;
                _context8.t0 = _context8["catch"](50);
                _context8.t1 = _context8.t0.response.status;
                _context8.next = _context8.t1 === 419 ? 60 : _context8.t1 === 422 ? 62 : 64;
                break;

              case 60:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context8.abrupt("break", 66);

              case 62:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context8.abrupt("break", 66);

              case 64:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context8.abrupt("break", 66);

              case 66:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee6, this, [[50, 55]]);
      }));

      function agregar() {
        return _agregar.apply(this, arguments);
      }

      return agregar;
    }(),
    agregarJefe: function () {
      var _agregarJefe = _asyncToGenerator(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee7() {
        var _this7 = this;

        var parametros;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee7$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                if (!(this.checkForm() === true)) {
                  _context9.next = 12;
                  break;
                }

                // VALIDAR SI EL JEFE DE HOGAR SE ENCUENTRA AGREGADO
                this.caracData.identificacion = this.caracData.identificacion.replace(/[.*+\-?^${}()|[\]\\]/g, "");
                parametros = {
                  _token: this.csrf,
                  identificacion: this.caracData.identificacion
                };
                _context9.prev = 3;
                _context9.next = 6;
                return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["validarJefe"](parametros).then(function (respuesta) {
                  if (respuesta.data.OPC == "EXISTE") {
                    var val = (respuesta.data.identificacion / 1).toFixed(0).replace(".", ",");
                    var iden = val.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

                    _this7.$swal("Validar...!", "El Documento <b>" + iden + "</b> Se Encuentra Registrado", "warning");

                    return false;
                  } else {
                    // VERIFICAR SI ESTA EN LA TABLA
                    var resultado = _this7.datosJefe.filter(function (identi) {
                      return identi.identificacion.includes(_this7.caracData.identificacion);
                    }); // VERIFICAR SI ESTA EN LA TABLA


                    if (resultado.length) {
                      _this7.$swal("Validar...!", "El Documento <b>" + _this7.caracData.identificacion + "</b> Se Encuentra Agregado", "warning");

                      return false;
                    } else {
                      var nacimiento = moment(_this7.caracData.fecha_nacimiento);
                      var hoy = moment();
                      var edad = 0;

                      if (nacimiento < hoy) {
                        edad = hoy.diff(nacimiento, "years"); //Calculamos la diferencia en años
                      }

                      if (edad < 14) {
                        _this7.$swal("Validar...!", "El Valor de la edad introducido no es aceptable, debe ser mayor ó igual a 14 años", "warning");

                        return false;
                      }

                      _this7.datosJefe.push({
                        id: 0,
                        id_hogar: 0,
                        telefono: _this7.caracData.telefono,
                        puntaje_sisben: _this7.caracData.puntaje_sisben,
                        afiliacion_entidad: _this7.caracData.afiliacion_entidad,
                        otra_eps: _this7.caracData.otra_eps,
                        tipo_id: _this7.caracData.tipo_id,
                        identificacion: _this7.caracData.identificacion,
                        sexo: _this7.caracData.sexo,
                        parentesco: _this7.caracData.parentesco,
                        textoParentesco: _this7.showText(_this7.caracData.parentesco, _this7.parentesco_options),
                        pnom: _this7.caracData.pnom,
                        snom: _this7.caracData.snom,
                        pape: _this7.caracData.pape,
                        sape: _this7.caracData.sape,
                        salario: _this7.caracData.salario,
                        estado_civil: _this7.caracData.estado_civil,
                        textoEstado: _this7.showText(_this7.caracData.estado_civil, _this7.estado_options),
                        fecha_nacimiento: _this7.caracData.fecha_nacimiento,
                        tipo_afiliacion: _this7.caracData.tipo_afiliacion,
                        embarazo: _this7.caracData.embarazo,
                        embarazo_multiple: _this7.caracData.embarazo_multiple,
                        discapacidad: _this7.caracData.discapacidad,
                        nivel_escolaridad: _this7.caracData.nivel_escolaridad,
                        ocupacion: _this7.caracData.ocupacion,
                        textoOcupacion: _this7.showText(_this7.caracData.ocupacion, _this7.ocupacion_options),
                        colegio: _this7.caracData.colegio,
                        grado: _this7.caracData.grado,
                        entiende: _this7.caracData.entiende,
                        migrante: _this7.caracData.migrante,
                        pyp: _this7.caracData.pyp,
                        etnia: _this7.caracData.etnia,
                        textoEtnia: _this7.showText(_this7.caracData.etnia, _this7.etnia_options),
                        clasificacion: _this7.caracData.clasificacion,
                        edad: _this7.caracData.edad
                      });

                      var indice = _this7.datosJefe.findIndex(function (identi) {
                        return identi.identificacion === _this7.caracData.identificacion;
                      });

                      _this7.vectorJefes.push({
                        index: indice,
                        identificacion: _this7.caracData.identificacion
                      }); // AGREGAR FACTORES


                      _this7.AFactores(_this7.caracData, edad); // AGREGAR FACTORES


                      _this7.caracData.id = "JEFE"; // AGREGAR DE 10 A 59 AÑOS

                      if (edad >= 10 && edad <= 59) {
                        _this7.Ade10a59Anio(_this7.caracData, edad);
                      } // AGREGAR DE 10 A 59 AÑOS
                      // AGREGAR PARTO POSTPARTO
                      // alert(this.CA1.embarazo_multiple);


                      if (_this7.caracData.embarazo === "SI") {
                        _this7.AParPost(_this7.caracData, edad);
                      } // AGREGAR PARTO POSTPARTO
                      // AGREGAR DE 12 A 17 AÑOS


                      if (edad >= 12 && edad <= 17) {
                        _this7.Ade12a17Anio(_this7.caracData, edad);
                      } // AGREGAR DE 12 A 17 AÑOS
                      // AGREGAR DE 18 A 28 AÑOS


                      if (edad >= 18 && edad <= 28) {
                        _this7.Ade18a28Anio(_this7.caracData, edad);
                      } // AGREGAR DE 18 A 28 AÑOS
                      // AGREGAR DE 29 A 59 AÑOS


                      if (edad >= 29 && edad <= 59) {
                        _this7.Ade29a59Anio(_this7.caracData, edad);
                      } // AGREGAR DE 29 A 59 AÑOS
                      // AGREGAR DE 60 ó MAS AÑOS


                      if (edad >= 60) {
                        _this7.Ade60Anio(_this7.caracData, edad);
                      } // AGREGAR DE 60 ó MAS AÑOS
                      // AGREGAR MIGRANTES


                      if (_this7.caracData.migrante === "SI") {
                        _this7.AMigra(_this7.caracData, edad);
                      } // AGREGAR MIGRANTES


                      _this7.limpiar2();
                    }
                  }
                })["catch"](function (error) {
                  _this7.errorDevuelto = error.response.data.errors;
                  _this7.entrarPorError = true;
                });

              case 6:
                _context9.next = 12;
                break;

              case 8:
                _context9.prev = 8;
                _context9.t0 = _context9["catch"](3);
                this.errorDevuelto = _context9.t0.response.data.errors;
                this.entrarPorError = true;

              case 12:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee7, this, [[3, 8]]);
      }));

      function agregarJefe() {
        return _agregarJefe.apply(this, arguments);
      }

      return agregarJefe;
    }(),
    checkForm: function checkForm(e) {
      var bande = true;

      if (this.caracData.tipo_id === "") {
        this.$refs.tipo_id.focus();
        bande = false;
        this.$swal("Error...!", "Por favor seleccione un tipo de identificación!", "error");
        return;
      }

      if (this.caracData.identificacion === "") {
        this.$refs.identificacion.focus();
        bande = false;
        this.$swal("Error...!", "Por favor digite una identificación!", "error");
        return;
      }

      if (this.caracData.sexo === "") {
        this.$refs.sexo.focus();
        bande = false;
        this.$swal("Error...!", "Por favor seleccione el sexo!", "error");
        return;
      }

      if (this.caracData.parentesco === "") {
        this.$refs.parentesco.focus();
        bande = false;
        this.$swal("Error...!", "Por favor seleccione el parentesco!", "error");
        return;
      }

      if (this.caracData.pnom === "") {
        this.$refs.pnom.focus();
        bande = false;
        this.$swal("Error...!", "Por favor digite el primer nombre!", "error");
        return;
      }

      if (this.caracData.pape === "") {
        this.$refs.pape.focus();
        bande = false;
        this.$swal("Error...!", "Por favor digite el primer apellido!", "error");
        return;
      }

      if (this.caracData.estado_civil === "") {
        this.$refs.estado_civil.focus();
        bande = false;
        this.$swal("Error...!", "Por favor seleccione el estado civil!", "error");
        return;
      }

      if (this.caracData.fecha_nacimiento === "") {
        this.$refs.fecha_nacimiento.focus();
        bande = false;
        this.$swal("Error...!", "Por favor seleccione la fecha de nacimiento!", "error");
        return;
      }

      if (this.caracData.afiliacion_entidad === "") {
        this.$refs.afiliacion_entidad.focus();
        bande = false;
        this.$swal("Error...!", "Por favor seleccione la eps!", "error");
        return;
      }

      if (this.caracData.ocupacion === "") {
        this.$refs.ocupacion.focus();
        bande = false;
        this.$swal("Error...!", "Por favor seleccione la ocupación!", "error");
        return;
      }

      if (this.caracData.etnia === "") {
        this.$refs.etnia.focus();
        bande = false;
        this.$swal("Error...!", "Por favor seleccione la etnia!", "error");
        return;
      }

      if (this.caracData.clasificacion === "") {
        this.$refs.clasificacion.focus();
        bande = false;
        this.$swal("Error...!", "Por favor seleccione la clasificacion de la etnia!", "error");
        return;
      }

      if (this.caracData.salario === "") {
        this.$refs.salario.focus();
        bande = false;
        this.$swal("Error...!", "Por favor digite el salario!", "error");
        return;
      }

      return bande;
      e.preventDefault();
    },
    showText: function showText(val, vectorAux) {
      for (var i = 0; i < vectorAux.length; i++) {
        if (vectorAux[i].value === val) {
          return vectorAux[i].texto;
        }
      }

      return "";
    },
    eliminarItem: function eliminarItem(index, item) {
      this.datos.splice(index, 1);
      this.vectorIntegrante.splice(index, 1);
      var identificacion = item.identificacion;
      this.Men1A = this.Men1A.filter(function (men) {
        return men.identificacion != identificacion;
      });
      this.De1A5 = this.De1A5.filter(function (men) {
        return men.identificacion != identificacion;
      });
      this.De6A11 = this.De6A11.filter(function (men) {
        return men.identificacion != identificacion;
      });
      this.De10A59 = this.De10A59.filter(function (men) {
        return men.identificacion != identificacion;
      });
      this.ParPost = this.ParPost.filter(function (men) {
        return men.identificacion != identificacion;
      });
      this.De12A17 = this.De12A17.filter(function (men) {
        return men.identificacion != identificacion;
      });
      this.De18A28 = this.De18A28.filter(function (men) {
        return men.identificacion != identificacion;
      });
      this.De29A59 = this.De29A59.filter(function (men) {
        return men.identificacion != identificacion;
      });
      this.De60 = this.De60.filter(function (men) {
        return men.identificacion != identificacion;
      });
      this.Migra = this.Migra.filter(function (men) {
        return men.identificacion != identificacion;
      });
    },
    eliminarItemJefe: function eliminarItemJefe(index, item) {
      this.datosJefe.splice(index, 1);
      this.vectorJefes.splice(index, 1);
      var identificacion = item.identificacion;
      this.factores = this.factores.filter(function (men) {
        return men.identificacion != identificacion;
      });
      this.Men1A = this.Men1A.filter(function (men) {
        return men.identificacion != identificacion;
      });
      this.De1A5 = this.De1A5.filter(function (men) {
        return men.identificacion != identificacion;
      });
      this.De6A11 = this.De6A11.filter(function (men) {
        return men.identificacion != identificacion;
      });
      this.De10A59 = this.De10A59.filter(function (men) {
        return men.identificacion != identificacion;
      });
      this.ParPost = this.ParPost.filter(function (men) {
        return men.identificacion != identificacion;
      });
      this.De12A17 = this.De12A17.filter(function (men) {
        return men.identificacion != identificacion;
      });
      this.De18A28 = this.De18A28.filter(function (men) {
        return men.identificacion != identificacion;
      });
      this.De29A59 = this.De29A59.filter(function (men) {
        return men.identificacion != identificacion;
      });
      this.De60 = this.De60.filter(function (men) {
        return men.identificacion != identificacion;
      });
      this.Migra = this.Migra.filter(function (men) {
        return men.identificacion != identificacion;
      });
    },
    validarTablaIntegrantes: function () {
      var _validarTablaIntegrantes = _asyncToGenerator(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee8() {
        var _this8 = this;

        var _loop3, i;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee8$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                _loop3 =
                /*#__PURE__*/
                _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _loop3(i) {
                  var parametros;
                  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _loop3$(_context10) {
                    while (1) {
                      switch (_context10.prev = _context10.next) {
                        case 0:
                          parametros = {
                            _token: _this8.csrf,
                            identificacion: _this8.datos[i].identificacion
                          };
                          _context10.prev = 1;
                          _context10.next = 4;
                          return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["validarJefe"](parametros).then(function (respuesta) {
                            if (respuesta.data.OPC == "EXISTE") {
                              var val = (respuesta.data.identificacion / 1).toFixed(0).replace(".", ",");
                              var iden = val.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

                              _this8.$swal("Validar...!", "El Documento <b>" + iden + "</b> De La Fila <b>" + (i + 1) + "</b> Se Encuentra Registrado", "warning"); // item.identificacion="";


                              return false;
                            } else {
                              // VERIFICAR SI ESTA EN LA TABLA
                              var resultado = _this8.datos.filter(function (identi) {
                                return identi.identificacion.includes(_this8.datos[i].identificacion);
                              }); // VERIFICAR SI ESTA EN LA TABLA


                              if (resultado.length > 1) {
                                _this8.$swal("Validar...!", "El Documento <b>" + _this8.datos[i].identificacion + "</b> De La Fila <b>" + (i + 1) + "</b>  Se Encuentra Agregado En La Tabla de Integrantes", "warning"); // item.identificacion="";


                                return false;
                              } else {
                                if (_this8.datos[i].tipo_id === "0") {
                                  _this8.$swal("Error...!", "Por favor seleccione un <b>tipo de identificación</b> en la fila " + (i + 1) + " de los integrantes", "error");

                                  return false;
                                }

                                if (_this8.datos[i].identificacion === "") {
                                  _this8.$swal("Error...!", "Por favor digite una <b>identificación</b> en la fila " + (i + 1) + " de los integrantes", "error");

                                  return false;
                                }

                                if (_this8.datos[i].pnom === "") {
                                  _this8.$swal("Error...!", "Por favor digite el <b>primer nombre</b> en la fila " + (i + 1) + " de los integrantes", "error");

                                  return false;
                                }

                                if (_this8.datos[i].pape === "") {
                                  _this8.$swal("Error...!", "Por favor digite el <b>primer apellido</b> en la fila " + (i + 1) + " de los integrantes", "error");

                                  return false;
                                }

                                if (_this8.datos[i].sexo === "0") {
                                  _this8.$swal("Error...!", "Por favor seleccione el <b>sexo</b> en la fila " + (i + 1) + " de los integrantes", "error");

                                  return false;
                                }

                                if (_this8.datos[i].parentesco === "0") {
                                  _this8.$swal("Error...!", "Por favor seleccione el <b>parentesco</b> en la fila " + (i + 1) + " de los integrantes", "error");

                                  return false;
                                }

                                if (_this8.datos[i].estado_civil === "0") {
                                  _this8.$swal("Error...!", "Por favor seleccione el <b>estado civil</b> en la fila " + (i + 1) + " de los integrantes", "error");

                                  return false;
                                }

                                if (_this8.datos[i].fecha_nac === "") {
                                  _this8.$swal("Error...!", "Por favor seleccione la <b>fecha de nacimiento</b> en la fila " + (i + 1) + " de los integrantes", "error");

                                  return false;
                                }

                                if (_this8.datos[i].afi_entidad === "0") {
                                  _this8.$swal("Error...!", "Por favor seleccione la <b>eps</b> en la fila " + (i + 1) + " de los integrantes", "error");

                                  return false;
                                }

                                if (_this8.datos[i].tipo_afiliacion === "0") {
                                  _this8.$swal("Error...!", "Por favor seleccione el <b>tipo de afiliación</b> en la fila " + (i + 1) + " de los integrantes", "error");

                                  return false;
                                }

                                if (_this8.datos[i].escolaridad === "0") {
                                  _this8.$swal("Error...!", "Por favor seleccione el <b>nivel de escolaridad</b> en la fila " + (i + 1) + " de los integrantes", "error");

                                  return false;
                                }

                                if (_this8.datos[i].ocupacion === "0") {
                                  _this8.$swal("Error...!", "Por favor seleccione la <b>ocupación</b> en la fila " + (i + 1) + " de los integrantes", "error");

                                  return false;
                                }

                                if (_this8.datos[i].etnia === "0") {
                                  _this8.$swal("Error...!", "Por favor seleccione la <b>etnia</b> en la fila " + (i + 1) + " de los integrantes", "error");

                                  return false;
                                }

                                if (_this8.datos[i].clasificacion === "0") {
                                  _this8.$swal("Error...!", "Por favor seleccione la <b>clasificacion de la etnia</b> en la fila " + (i + 1) + " de los integrantes", "error");

                                  return false;
                                }

                                if (_this8.datos[i].jefe === "0") {
                                  _this8.$swal("Error...!", "Por favor seleccione el <b>jefe de hogar</b> en la fila " + (i + 1) + " de los integrantes", "error");

                                  return false;
                                }

                                return true;
                              }
                            }
                          })["catch"](function (error) {});

                        case 4:
                          _context10.next = 8;
                          break;

                        case 6:
                          _context10.prev = 6;
                          _context10.t0 = _context10["catch"](1);

                        case 8:
                        case "end":
                          return _context10.stop();
                      }
                    }
                  }, _loop3, null, [[1, 6]]);
                });
                i = 0;

              case 2:
                if (!(i < this.datos.length)) {
                  _context11.next = 7;
                  break;
                }

                return _context11.delegateYield(_loop3(i), "t0", 4);

              case 4:
                i++;
                _context11.next = 2;
                break;

              case 7:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee8, this);
      }));

      function validarTablaIntegrantes() {
        return _validarTablaIntegrantes.apply(this, arguments);
      }

      return validarTablaIntegrantes;
    }(),
    validarTablaJefes: function () {
      var _validarTablaJefes = _asyncToGenerator(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee9() {
        var _this9 = this;

        var _loop4, i;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee9$(_context13) {
          while (1) {
            switch (_context13.prev = _context13.next) {
              case 0:
                _loop4 =
                /*#__PURE__*/
                _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _loop4(i) {
                  var parametros;
                  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _loop4$(_context12) {
                    while (1) {
                      switch (_context12.prev = _context12.next) {
                        case 0:
                          parametros = {
                            _token: _this9.csrf,
                            identificacion: _this9.datosJefe[i].identificacion
                          };
                          _context12.prev = 1;
                          _context12.next = 4;
                          return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["validarJefe"](parametros).then(function (respuesta) {
                            if (respuesta.data.OPC == "EXISTE") {
                              var val = (respuesta.data.identificacion / 1).toFixed(0).replace(".", ",");
                              var iden = val.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

                              _this9.$swal("Validar...!", "El Documento <b>" + iden + "</b> De La Fila <b>" + (i + 1) + "</b> Se Encuentra Registrado", "warning"); // item.identificacion="";


                              return false;
                            } else {
                              // VERIFICAR SI ESTA EN LA TABLA
                              var resultado = _this9.datosJefe.filter(function (identi) {
                                return identi.identificacion.includes(_this9.datosJefe[i].identificacion);
                              }); // VERIFICAR SI ESTA EN LA TABLA


                              if (resultado.length > 1) {
                                _this9.$swal("Validar...!", "El Documento <b>" + _this9.datosJefe[i].identificacion + "</b> De La Fila <b>" + (i + 1) + "</b>  Se Encuentra Agregado En La Tabla de Jefes de Hogar", "warning"); // item.identificacion="";


                                return false;
                              } else {
                                if (_this9.datosJefe[i].tipo_id === "") {
                                  _this9.$swal("Error...!", "Por favor seleccione un <b>tipo de identificación</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");

                                  return false;
                                }

                                if (_this9.datosJefe[i].identificacion === "") {
                                  _this9.$swal("Error...!", "Por favor digite una <b>identificación</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");

                                  return false;
                                }

                                if (_this9.datosJefe[i].pnom === "") {
                                  _this9.$swal("Error...!", "Por favor digite el <b>primer nombre</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");

                                  return false;
                                }

                                if (_this9.datosJefe[i].pape === "") {
                                  _this9.$swal("Error...!", "Por favor digite el <b>primer apellido</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");

                                  return false;
                                }

                                if (_this9.datosJefe[i].sexo === "") {
                                  _this9.$swal("Error...!", "Por favor seleccione el <b>sexo</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");

                                  return false;
                                }

                                if (_this9.datosJefe[i].parentesco === "") {
                                  _this9.$swal("Error...!", "Por favor seleccione el <b>parentesco</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");

                                  return false;
                                }

                                if (_this9.datosJefe[i].estado_civil === "") {
                                  _this9.$swal("Error...!", "Por favor seleccione el <b>estado civil</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");

                                  return false;
                                }

                                if (_this9.datosJefe[i].fecha_nacimiento === "") {
                                  _this9.$swal("Error...!", "Por favor seleccione la <b>fecha de nacimiento</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");

                                  return false;
                                }

                                if (_this9.datosJefe[i].afiliacion_entidad === "") {
                                  _this9.$swal("Error...!", "Por favor seleccione la <b>eps</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");

                                  return false;
                                }

                                if (_this9.datosJefe[i].tipo_afiliacion === "") {
                                  _this9.$swal("Error...!", "Por favor seleccione el <b>tipo de afiliación</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");

                                  return false;
                                }

                                if (_this9.datosJefe[i].nivel_escolaridad === "") {
                                  _this9.$swal("Error...!", "Por favor seleccione el <b>nivel de escolaridad</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");

                                  return false;
                                }

                                if (_this9.datosJefe[i].ocupacion === "") {
                                  _this9.$swal("Error...!", "Por favor seleccione la <b>ocupación</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");

                                  return false;
                                }

                                if (_this9.datosJefe[i].etnia === "") {
                                  _this9.$swal("Error...!", "Por favor seleccione la <b>etnia</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");

                                  return false;
                                }

                                if (_this9.datosJefe[i].clasificacion === "") {
                                  _this9.$swal("Error...!", "Por favor seleccione la <b>clasificacion de la etnia</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");

                                  return false;
                                }

                                if (_this9.datosJefe[i].salario === "") {
                                  _this9.$swal("Error...!", "Por favor digite el <b>salario</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");

                                  return false;
                                }

                                return true;
                              }
                            }
                          })["catch"](function (error) {});

                        case 4:
                          _context12.next = 8;
                          break;

                        case 6:
                          _context12.prev = 6;
                          _context12.t0 = _context12["catch"](1);

                        case 8:
                        case "end":
                          return _context12.stop();
                      }
                    }
                  }, _loop4, null, [[1, 6]]);
                });
                i = 0;

              case 2:
                if (!(i < this.datosJefe.length)) {
                  _context13.next = 7;
                  break;
                }

                return _context13.delegateYield(_loop4(i), "t0", 4);

              case 4:
                i++;
                _context13.next = 2;
                break;

              case 7:
              case "end":
                return _context13.stop();
            }
          }
        }, _callee9, this);
      }));

      function validarTablaJefes() {
        return _validarTablaJefes.apply(this, arguments);
      }

      return validarTablaJefes;
    }(),
    Guardar: function () {
      var _Guardar = _asyncToGenerator(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee10() {
        var _this10 = this;

        var isInvalid, parametros;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee10$(_context14) {
          while (1) {
            switch (_context14.prev = _context14.next) {
              case 0:
                this.$v.$touch();
                isInvalid = this.$v.$invalid;

                if (!isInvalid) {
                  _context14.next = 6;
                  break;
                }

                // display error message
                this.$swal("Error...!", "Por Favor Complete Los Campos Obligatorios", "error");
                _context14.next = 33;
                break;

              case 6:
                // console.log("Form is correct");
                // submit to server
                this.entrarPorError = false;
                this.errores = [];

                if (!(this.datosJefe.length <= 0)) {
                  _context14.next = 11;
                  break;
                }

                this.$swal("Error...!", "Por favor agregue por lo menos un jefe de hogar", "error");
                return _context14.abrupt("return");

              case 11:
                if (!(this.estratificacion.length <= 0)) {
                  _context14.next = 14;
                  break;
                }

                this.$swal("Error...!", "Por favor agregue por lo menos una estratificación", "error");
                return _context14.abrupt("return");

              case 14:
                //VALIDAR LOS CAMPOS DEL VECTOR JEFES DE HOGAR
                this.validarTablaJefes(); //VALIDAR LOS CAMPOS DEL VECTOR JEFES DE HOGAR
                //VALIDAR LOS CAMPOS DEL VECTOR INTEGRANTES

                this.validarTablaIntegrantes(); //VALIDAR LOS CAMPOS DEL VECTOR INTEGRANTES

                parametros = {
                  _token: this.csrf,
                  hogar: this.hogar,
                  caracterizacion: this.datosJefe,
                  integrantes: this.datos,
                  vivienda: this.viviendaData,
                  estratificacion: this.estratificacion,
                  Men1A: this.Men1A,
                  De1A5: this.De1A5,
                  De6A11: this.De6A11,
                  De10A59: this.De10A59,
                  ParPost: this.ParPost,
                  De12A17: this.De12A17,
                  De18A28: this.De18A28,
                  De29A59: this.De29A59,
                  De60: this.De60,
                  EnCro: this.EnCro,
                  EnInf: this.EnInf,
                  Migra: this.Migra,
                  Animales: this.animalesData,
                  opcion: "GUARDAR"
                };
                _context14.prev = 17;
                _context14.next = 20;
                return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["guardar"](parametros).then(function (respuesta) {
                  console.info(respuesta.data);

                  if (respuesta.data.OPC == "SI") {
                    _this10.datos = [];

                    _this10.$swal("Guardar...!", "Datos Guardados Exitosamente!", "success");

                    _this10.$router.push("/gestion");
                  }

                  if (respuesta.data.OPC == "VALIDAR") {
                    var val = (respuesta.data.identificacion / 1).toFixed(0).replace(".", ",");
                    var iden = val.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

                    _this10.$swal("Validar...!", "El Documento <b>" + iden + "</b> Se Encuentra Registrado", "success");
                  }
                })["catch"](function (error) {
                  _this10.errorDevuelto = error.response.data.errors;
                  _this10.entrarPorError = true;
                });

              case 20:
                _context14.next = 33;
                break;

              case 22:
                _context14.prev = 22;
                _context14.t0 = _context14["catch"](17);
                _context14.t1 = _context14.t0.response.status;
                _context14.next = _context14.t1 === 419 ? 27 : _context14.t1 === 422 ? 29 : 31;
                break;

              case 27:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context14.abrupt("break", 33);

              case 29:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context14.abrupt("break", 33);

              case 31:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context14.abrupt("break", 33);

              case 33:
              case "end":
                return _context14.stop();
            }
          }
        }, _callee10, this, [[17, 22]]);
      }));

      function Guardar() {
        return _Guardar.apply(this, arguments);
      }

      return Guardar;
    }(),
    SoloNumeros: function SoloNumeros(event) {
      if (event.keyCode < 48 || event.keyCode > 57) {
        return false; // this.caracData.salario = 0;
      }
    },
    cambiarCombo: function () {
      var _cambiarCombo = _asyncToGenerator(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee11(caja) {
        var _this11 = this;

        var parametros, _parametros6;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee11$(_context15) {
          while (1) {
            switch (_context15.prev = _context15.next) {
              case 0:
                if (caja === "dpto") {
                  this.hogar.id_mun = "";
                  this.hogar.id_corre = "";
                  this.hogar.id_vereda = "";
                  this.hogar.id_barrio = "";
                }

                if (!(caja === "muni")) {
                  _context15.next = 34;
                  break;
                }

                this.hogar.id_corre = "";
                this.hogar.id_vereda = "";
                this.hogar.id_barrio = "";
                parametros = {
                  _token: this.csrf,
                  id: this.hogar.id_mun,
                  opcion: "MUN"
                };
                _context15.prev = 6;
                _context15.next = 9;
                return _Servicios_barrios_servicios__WEBPACK_IMPORTED_MODULE_2__["comboBarrios"](parametros).then(function (respuesta) {
                  _this11.barrio_options = respuesta.data.arrayBarrios;
                });

              case 9:
                _context15.next = 20;
                break;

              case 11:
                _context15.prev = 11;
                _context15.t0 = _context15["catch"](6);
                _context15.t1 = _context15.t0.response.status;
                _context15.next = _context15.t1 === 422 ? 16 : 18;
                break;

              case 16:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context15.abrupt("break", 20);

              case 18:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context15.abrupt("break", 20);

              case 20:
                _context15.prev = 20;
                _context15.next = 23;
                return _Servicios_colegios_servicios__WEBPACK_IMPORTED_MODULE_3__["combo"](parametros).then(function (respuesta) {
                  _this11.colegio_options = respuesta.data.arrayColegios;
                });

              case 23:
                _context15.next = 34;
                break;

              case 25:
                _context15.prev = 25;
                _context15.t2 = _context15["catch"](20);
                _context15.t3 = _context15.t2.response.status;
                _context15.next = _context15.t3 === 422 ? 30 : 32;
                break;

              case 30:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context15.abrupt("break", 34);

              case 32:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context15.abrupt("break", 34);

              case 34:
                if (!(caja === "corregi")) {
                  _context15.next = 67;
                  break;
                }

                this.hogar.id_vereda = "";
                this.hogar.id_barrio = "";

                if (!(this.hogar.id_corre !== "0")) {
                  _context15.next = 67;
                  break;
                }

                _parametros6 = {
                  _token: this.csrf,
                  id: this.hogar.id_corre,
                  opcion: "CORRE"
                };
                _context15.prev = 39;
                _context15.next = 42;
                return _Servicios_barrios_servicios__WEBPACK_IMPORTED_MODULE_2__["comboBarrios"](_parametros6).then(function (respuesta) {
                  _this11.barrio_options = respuesta.data.arrayBarrios;
                });

              case 42:
                _context15.next = 53;
                break;

              case 44:
                _context15.prev = 44;
                _context15.t4 = _context15["catch"](39);
                _context15.t5 = _context15.t4.response.status;
                _context15.next = _context15.t5 === 422 ? 49 : 51;
                break;

              case 49:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context15.abrupt("break", 53);

              case 51:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context15.abrupt("break", 53);

              case 53:
                _context15.prev = 53;
                _context15.next = 56;
                return _Servicios_colegios_servicios__WEBPACK_IMPORTED_MODULE_3__["combo"](_parametros6).then(function (respuesta) {
                  _this11.colegio_options = respuesta.data.arrayColegios;
                });

              case 56:
                _context15.next = 67;
                break;

              case 58:
                _context15.prev = 58;
                _context15.t6 = _context15["catch"](53);
                _context15.t7 = _context15.t6.response.status;
                _context15.next = _context15.t7 === 422 ? 63 : 65;
                break;

              case 63:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context15.abrupt("break", 67);

              case 65:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context15.abrupt("break", 67);

              case 67:
                if (caja === "etnia") {
                  this.CA1.clasificacion = "0";
                }

              case 68:
              case "end":
                return _context15.stop();
            }
          }
        }, _callee11, this, [[6, 11], [20, 25], [39, 44], [53, 58]]);
      }));

      function cambiarCombo(_x2) {
        return _cambiarCombo.apply(this, arguments);
      }

      return cambiarCombo;
    }(),
    validarNumHog: function validarNumHog() {
      if (this.hogar.numero_hogares <= 0) {
        this.hogar.numero_hogares = "";
      }
    },
    formato: function formato(caja) {
      if (caja == "id1") {
        if (this.caracData.tipo_id == "CC") {
          this.caracData.identificacion = this.caracData.identificacion.replace(/[.*+\-?^${}()|[\]\\]/g, "");
          var val = (this.caracData.identificacion / 1).toFixed(0).replace(".", ",");
          this.caracData.identificacion = val.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

          if (this.caracData.identificacion == "NaN") {
            this.caracData.identificacion = "";
          }

          if (this.caracData.identificacion == "0") {
            this.caracData.identificacion = "";
          }
        }
      }

      if (caja == "salario") {
        this.caracData.salario = this.caracData.salario.replace(/[.*+\-?^${}()|[\]\\]/g, "");

        var _val = (this.caracData.salario / 1).toFixed(0).replace(".", ",");

        this.caracData.salario = _val.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

        if (this.caracData.salario == "NaN") {
          this.caracData.salario = "";
        }

        if (this.caracData.salario == "0") {
          this.caracData.salario = "";
        }
      }

      if (caja == "tipoid") {
        if (this.caracData.tipo_id != "CC") {
          this.caracData.identificacion = this.caracData.identificacion.replace(/[.*+\-?^${}()|[\]\\]/g, "");
        } else {
          if (this.caracData.tipo_id == "CC") {
            this.caracData.identificacion = this.caracData.identificacion.replace(/[.*+\-?^${}()|[\]\\]/g, "");

            var _val2 = (this.caracData.identificacion / 1).toFixed(0).replace(".", ",");

            this.caracData.identificacion = _val2.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

            if (this.caracData.identificacion == "NaN") {
              this.caracData.identificacion = "";
            }

            if (this.caracData.identificacion == "0") {
              this.caracData.identificacion = "";
            }
          }
        }
      }

      if (caja == "id2") {
        if (this.CA1.tipo_id == "CC") {
          this.CA1.identificacion = this.CA1.identificacion.replace(/[.*+\-?^${}()|[\]\\]/g, "");

          var _val3 = (this.CA1.identificacion / 1).toFixed(0).replace(".", ",");

          this.CA1.identificacion = _val3.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

          if (this.CA1.identificacion == "NaN") {
            this.CA1.identificacion = "";
          }

          if (this.CA1.identificacion == "0") {
            this.CA1.identificacion = "";
          }
        }
      }

      if (caja == "tipoid2") {
        if (this.CA1.tipo_id != "CC") {
          this.CA1.identificacion = this.CA1.identificacion.replace(/[.*+\-?^${}()|[\]\\]/g, "");
        } else {
          if (this.CA1.tipo_id == "CC") {
            this.CA1.identificacion = this.CA1.identificacion.replace(/[.*+\-?^${}()|[\]\\]/g, "");

            var _val4 = (this.CA1.identificacion / 1).toFixed(0).replace(".", ",");

            this.CA1.identificacion = _val4.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

            if (this.CA1.identificacion == "NaN") {
              this.CA1.identificacion = "";
            }

            if (this.CA1.identificacion == "0") {
              this.CA1.identificacion = "";
            }
          }
        }
      }

      if (caja == "telefono1") {
        this.caracData.telefono = this.caracData.telefono.replace(/[^.\d]/g, "").trim();

        if (this.caracData.telefono == "NaN") {
          this.caracData.telefono = "";
        }

        if (this.caracData.telefono == "0") {
          this.caracData.telefono = "";
        }
      }

      if (caja == "puntaje") {
        this.CA1.puntaje_sisben = this.CA1.puntaje_sisben.replace(/[^.\d]/g, "").trim();

        if (this.CA1.puntaje_sisben == "NaN") {
          this.CA1.puntaje_sisben = "";
        }

        if (this.CA1.puntaje_sisben == "0") {
          this.CA1.puntaje_sisben = "";
        }
      }

      if (caja == "puntaje1") {
        this.caracData.puntaje_sisben = this.caracData.puntaje_sisben.replace(/[^.\d]/g, "").trim();

        if (this.caracData.puntaje_sisben == "NaN") {
          this.caracData.puntaje_sisben = "";
        }

        if (this.caracData.puntaje_sisben == "0") {
          this.caracData.puntaje_sisben = "";
        }
      }
    },
    volver: function volver() {
      this.$router.push("/gestion");
    },
    limpiar: function limpiar() {
      this.CA1.tipo_id = "0";
      this.CA1.identificacion = "";
      this.CA1.sexo = "0";
      this.CA1.parentesco = "0";
      this.CA1.pnom = "";
      this.CA1.snom = "";
      this.CA1.pape = "";
      this.CA1.sape = "";
      this.CA1.estado_civil = "0";
      this.CA1.fecha_nac = "";
      this.CA1.edad = 0;
      this.CA1.afi_entidad = "0";
      this.CA1.tipo_afiliacion = "0";
      this.CA1.otra_eps = "";
      this.CA1.embarazo = "0";
      this.CA1.embarazo_multiple = "0";
      this.CA1.discapacidad = "0";
      this.CA1.escolaridad = "0";
      this.CA1.ocupacion = "0";
      this.CA1.colegio = "";
      this.CA1.grado = "0";
      this.CA1.entiende = "0";
      this.CA1.migrante = "0";
      this.CA1.pyp = "0";
      this.CA1.etnia = "0";
      this.CA1.clasificacion = "0";
      this.CA1.puntaje_sisben = "";
      this.CA1.jefe = "0";
    },
    limpiar2: function limpiar2() {
      this.caracData.tipo_id = "";
      this.caracData.identificacion = "";
      this.caracData.sexo = "";
      this.caracData.parentesco = "";
      this.caracData.pnom = "";
      this.caracData.snom = "";
      this.caracData.pape = "";
      this.caracData.sape = "";
      this.caracData.estado_civil = "";
      this.caracData.fecha_nacimiento = "";
      this.caracData.salario = "";
      this.caracData.telefono = "";
      this.caracData.edad = 0;
      this.caracData.afiliacion_entidad = "";
      this.caracData.otra_eps = "";
      this.caracData.tipo_afiliacion = "";
      this.caracData.embarazo = "";
      this.caracData.embarazo_multiple = "";
      this.caracData.discapacidad = "";
      this.caracData.nivel_escolaridad = "";
      this.caracData.ocupacion = "";
      this.caracData.colegio = "";
      this.caracData.grado = "";
      this.caracData.entiende = "";
      this.caracData.migrante = "";
      this.caracData.pyp = "";
      this.caracData.etnia = "";
      this.caracData.clasificacion = "";
      this.caracData.puntaje_sisben = "";
    },
    mostrarOtro: function mostrarOtro(tipo) {
      if (tipo === "TE") {
        if (this.viviendaData.tipo_estructura === "5") {
          this.mOTE = true;
        } else {
          this.mOTE = false;
        }

        this.viviendaData.otro_tipo_estructura = "";
      }

      if (tipo === "TC") {
        if (this.viviendaData.tipo_cubierta === "9") {
          this.mOTC = true;
        } else {
          this.mOTC = false;
        }

        this.viviendaData.otro_tipo_cubierta = "";
      }

      if (tipo === "AE") {
        if (this.viviendaData.actividad_economica === "CUAL") {
          this.mOAE = true;
        } else {
          this.mOAE = false;
        }

        this.viviendaData.cual_actividad_economica = "";
      }

      if (tipo === "FA") {
        if (this.viviendaData.fuente_agua === "9") {
          this.mOFA = true;
        } else {
          this.mOFA = false;
        }

        this.viviendaData.cual_fuente = "";
      }

      if (tipo === "DA") {
        if (this.viviendaData.donde_almacena_agua === "5") {
          this.mODA = true;
        } else {
          this.mODA = false;
        }

        this.viviendaData.otro_almacena_agua = "";
      }

      if (tipo === "FB") {
        if (this.viviendaData.destino_final_basura === "5") {
          this.mOFB = true;
        } else {
          this.mOFB = false;
        }

        this.viviendaData.otro_destino_final_basura = "";
      }

      if (tipo === "OC") {
        if (this.viviendaData.otro_cerca === "SI") {
          this.mOOC = true;
        } else {
          this.mOOC = false;
        }

        this.viviendaData.cual_cerca = "";
      }

      if (tipo === "EV") {
        if (this.viviendaData.envases_vacios === "7") {
          this.mOEV = true;
        } else {
          this.mOEV = false;
        }

        this.viviendaData.otro_envases_vacios = "";
      }

      if (tipo === "EP") {
        if (this.viviendaData.elementos_protecion === "5") {
          this.mOEP = true;
        } else {
          this.mOEP = false;
        }

        this.viviendaData.otro_elementos_protecion = "";
      }

      if (tipo === "MC") {
        if (this.viviendaData.metodos_coccion === "6") {
          this.mOMC = true;
        } else {
          this.mOMC = false;
        }

        this.viviendaData.otro_metodos_coccion = "";
      }

      if (tipo === "AA") {
        if (this.viviendaData.lugares_almacenan_alimentos === "6") {
          this.mOAA = true;
        } else {
          this.mOAA = false;
        }

        this.viviendaData.otro_lugares_almacenan_alimentos = "";
      }

      if (tipo === "DH") {
        if (this.viviendaData.excretas === "7") {
          this.mODH = true;
        } else {
          this.mODH = false;
        }

        this.viviendaData.otro_depositan_excretas = "";
      }

      if (tipo === "ES") {
        if (this.viviendaData.tipo_explotacion === "5") {
          this.mOES = true;
        } else {
          this.mOES = false;
        }

        this.viviendaData.otro_tipo_explotacion = "";
      }

      if (tipo === "OG") {
        if (this.viviendaData.otros_genera === "SI") {
          this.mOOG = true;
        } else {
          this.mOOG = false;
        }

        this.viviendaData.cual_genera = "";
      }

      if (tipo === "OEPS1") {
        if (this.caracData.afiliacion_entidad === "OTRA") {
          this.mOEPS1 = true;
        } else {
          this.mOEPS1 = false;
        }

        this.caracData.otra_eps = "";
      }

      if (tipo === "OEPS2") {
        if (this.CA1.afi_entidad === "OTRA") {
          this.mOEPS2 = true;
        } else {
          this.mOEPS2 = false;
        }

        this.CA1.otra_eps = "";
      }

      if (tipo === "mOCOL1") {
        if (this.caracData.nivel_escolaridad === 3 || this.caracData.nivel_escolaridad === 14 || this.caracData.nivel_escolaridad === 15) {
          this.mOCOL1 = true;
        } else {
          this.mOCOL1 = false;
        }

        this.caracData.colegio = "";
        this.caracData.grado = "";
      }

      if (tipo === "mOCOL2") {
        if (this.CA1.escolaridad === 3 || this.CA1.escolaridad === 14 || this.CA1.escolaridad === 15) {
          this.mOCOL2 = true;
        } else {
          this.mOCOL2 = false;
        }

        this.CA1.colegio = "";
        this.CA1.grado = "0";
      }
    },
    eliminarItemAnimales: function eliminarItemAnimales(index) {
      this.animalesData.splice(index, 1);
    },
    eliminarItemEstratificacion: function eliminarItemEstratificacion(index) {
      this.estratificacion.splice(index, 1);
    },
    agregarAnimales: function agregarAnimales() {
      if (this.animal === "") {
        this.$swal("Error...!", "Por favor Digite Un Animal!", "error");
        return;
      }

      if (this.vacunadoAnimal === "0") {
        this.$swal("Error...!", "Por favor Seleccione Si El Animal Se Encuentra Vacunado!", "error");
        return;
      }

      if (this.cuantosAnimal === "") {
        this.$swal("Error...!", "Por favor Digite cuantos Animales Tiene!", "error");
        return;
      }

      if (!this.isNumeric(this.cuantosAnimal)) {
        this.$swal("Error...!", "Por favor Digite cuantos Animales Tiene!", "error");
        return;
      }

      this.animalesData.push({
        id: 0,
        animal: this.animal,
        cuantos: this.cuantosAnimal,
        vacunados: this.vacunadoAnimal
      });
      this.animal = "";
      this.cuantosAnimal = "";
      this.vacunadoAnimal = "0";
    },
    agregarEstratificacion: function agregarEstratificacion() {
      if (this.estratificacionData.cuenta_internet === "") {
        this.$swal("Error...!", "Por favor Seleccione Si Cuenta ese Hogar con Internet!", "error");
        return;
      }

      if (this.estratificacionData.tiene_pc_escritorio === "") {
        this.$swal("Error...!", "Por favor Seleccione Si Tiene computador de Escritorío!", "error");
        return;
      }

      if (this.estratificacionData.tiene_pc_portatil === "") {
        this.$swal("Error...!", "Por favor Seleccione Si Tiene Computador Portatil!", "error");
        return;
      }

      if (this.estratificacionData.cuantos_celulares === "") {
        this.$swal("Error...!", "Por favor Seleccione Cuantos celulares en uso hay en el Hogar!", "error");
        return;
      }

      if (this.estratificacionData.tiene_equipo_sonido === "") {
        this.$swal("Error...!", "Por favor Seleccione Si Tiene Equipo de sonido!", "error");
        return;
      }

      if (this.estratificacionData.cuantos_tv_color === "") {
        this.$swal("Error...!", "Por favor Seleccione Cuantos Tv a Color!", "error");
        return;
      }

      if (this.estratificacionData.cuantos_vehiculos === "") {
        this.$swal("Error...!", "Por favor Seleccione Cuantos Vehiculos de Uso exclusivo tiene el Hogar!", "error");
        return;
      }

      if (this.estratificacionData.nivel_instruccion === "") {
        this.$swal("Error...!", "Por favor Seleccione Cual es el nivel de Instrucción del jefe del Hogar!", "error");
        return;
      }

      if (this.estratificacionData.afiliacion_salud_privada === "") {
        this.$swal("Error...!", "Por favor Seleccione Si Alguien en el Hogar posee afiliación de salud Privada o contribituva, prepagada!", "error");
        return;
      }

      if (this.estratificacionData.ingresos_zona_rural === "") {
        this.$swal("Error...!", "Por favor Seleccione Ingresos mensuales por Hogar zona rural!", "error");
        return;
      }

      if (this.estratificacionData.ingresos_ciudad === "") {
        this.$swal("Error...!", "Por favor Seleccione Ingresos mensuales por Hogar en Ciudad!", "error");
        return;
      }

      if (this.estratificacionData.id_jefe === "0") {
        this.$swal("Error...!", "Por favor Seleccione El Jefe del Hogar!", "error");
        return;
      }

      this.estratificacion.push({
        id: 0,
        id_hogar: 0,
        cuenta_internet: this.estratificacionData.cuenta_internet,
        tiene_pc_escritorio: this.estratificacionData.tiene_pc_escritorio,
        tiene_pc_portatil: this.estratificacionData.tiene_pc_portatil,
        cuantos_celulares: this.estratificacionData.cuantos_celulares,
        tiene_equipo_sonido: this.estratificacionData.tiene_equipo_sonido,
        cuantos_tv_color: this.estratificacionData.cuantos_tv_color,
        cuantos_vehiculos: this.estratificacionData.cuantos_vehiculos,
        nivel_instruccion: this.estratificacionData.nivel_instruccion,
        afiliacion_salud_privada: this.estratificacionData.afiliacion_salud_privada,
        ingresos_zona_rural: this.estratificacionData.ingresos_zona_rural,
        ingresos_ciudad: this.estratificacionData.ingresos_ciudad,
        id_jefe: this.estratificacionData.id_jefe,
        texto_cuantos_celulares: this.showText(this.estratificacionData.cuantos_celulares, this.opciones1),
        texto_cuantos_tv_color: this.showText(this.estratificacionData.cuantos_tv_color, this.opciones2),
        texto_cuantos_vehiculos: this.showText(this.estratificacionData.cuantos_vehiculos, this.opciones3),
        texto_nivel_instruccion: this.showText(this.estratificacionData.nivel_instruccion, this.opciones4),
        texto_ingresos_zona_rural: this.showText(this.estratificacionData.ingresos_zona_rural, this.opciones5),
        texto_ingresos_ciudad: this.showText(this.estratificacionData.ingresos_ciudad, this.opciones6)
      });
      this.estratificacionData.cuenta_internet = "";
      this.estratificacionData.tiene_pc_escritorio = "";
      this.estratificacionData.tiene_pc_portatil = "";
      this.estratificacionData.cuantos_celulares = "";
      this.estratificacionData.tiene_equipo_sonido = "";
      this.estratificacionData.cuantos_tv_color = "";
      this.estratificacionData.cuantos_vehiculos = "";
      this.estratificacionData.nivel_instruccion = "";
      this.estratificacionData.afiliacion_salud_privada = ""; // this.estratificacionData.ingresos_zona_rural = "";
      // this.estratificacionData.ingresos_ciudad = "";

      this.estratificacionData.id_jefe = "0";
    },
    Amenores1Anio: function Amenores1Anio(vector) {
      var opcion = "";

      if (vector.id === "JEFE") {
        opcion = "JEFE";
      } else {
        opcion = "INTE";
      }

      this.Men1A.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        lugar_nacimiento: "",
        hemoclasificacion: "",
        compli_parto: "",
        via_parto: "",
        cyc: "",
        valoracion_23: "",
        valoracion_68: "",
        valoracion_911: "",
        lactancia: "",
        peso_nacer: "",
        peso_actual: "",
        longitud_nacer: "",
        longitud_actual: "",
        peso_long: "",
        cinta: "",
        edemas: "",
        lenguaje: "",
        motora: "",
        conducta: "",
        visuales: "",
        auditivos: "",
        carnet: "",
        bcg: "",
        hepb: "",
        polio: "",
        pentavalente: "",
        maltrato: "",
        morbilidad: "",
        tsh: "",
        opci: opcion
      });
    },
    changeupdateMenA1: function changeupdateMenA1(item, event, opcion) {
      if (opcion === "peso_nacer") {
        item.peso_nacer = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "peso_actual") {
        item.peso_actual = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "longitud_nacer") {
        item.longitud_nacer = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "longitud_actual") {
        item.longitud_actual = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "peso_long") {
        item.peso_long = event.target.value.replace(/[^.\d]/g, "").trim();
      }
    },
    updateMenA1: function updateMenA1(item, valor, opcion) {
      if (opcion === "hemoclasificacion") {
        item.hemoclasificacion = valor;
      }

      if (opcion === "lugar_nacimiento") {
        item.lugar_nacimiento = valor;
      }

      if (opcion === "compli_parto") {
        item.compli_parto = valor;
      }

      if (opcion === "via_parto") {
        item.via_parto = valor;
      }

      if (opcion === "cyc") {
        item.cyc = valor;
      }

      if (opcion === "valoracion_23") {
        item.valoracion_23 = valor;
      }

      if (opcion === "valoracion_68") {
        item.valoracion_68 = valor;
      }

      if (opcion === "valoracion_911") {
        item.valoracion_911 = valor;
      }

      if (opcion === "lactancia") {
        item.lactancia = valor;
      }

      if (opcion === "cinta") {
        item.cinta = valor;
      }

      if (opcion === "edemas") {
        item.edemas = valor;
      }

      if (opcion === "lenguaje") {
        item.lenguaje = valor;
      }

      if (opcion === "motora") {
        item.motora = valor;
      }

      if (opcion === "conducta") {
        item.conducta = valor;
      }

      if (opcion === "visuales") {
        item.visuales = valor;
      }

      if (opcion === "auditivos") {
        item.auditivos = valor;
      }

      if (opcion === "carnet") {
        item.carnet = valor;
      }

      if (opcion === "bcg") {
        item.bcg = valor;
      }

      if (opcion === "hepb") {
        item.hepb = valor;
      }

      if (opcion === "polio") {
        item.polio = valor;
      }

      if (opcion === "pentavalente") {
        item.pentavalente = valor;
      }

      if (opcion === "maltrato") {
        item.maltrato = valor;
      }

      if (opcion === "morbilidad") {
        item.morbilidad = valor;
      }

      if (opcion === "tsh") {
        item.tsh = valor;
      }
    },
    Ade1a5Anio: function Ade1a5Anio(vector, edad) {
      var opcion = "";

      if (vector.id === "JEFE") {
        opcion = "JEFE";
      } else {
        opcion = "INTE";
      }

      this.De1A5.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        edad: edad,
        beneficiario: "",
        cyc: "",
        valoracion_1823: "",
        valoracion_3035: "",
        valoracion_4: "",
        peso: "",
        talla: "",
        imc: "",
        pb: "",
        pt: "",
        te: "",
        lenguaje: "",
        motora: "",
        conducta: "",
        visuales: "",
        auditivos: "",
        caries: "",
        nocepillado: "",
        consultaodon: "",
        carnet: "",
        bcg: "",
        polio: "",
        dpt: "",
        fiebrea: "",
        tripleviral: "",
        pentavalente: "",
        otras: "",
        desparacitado: "",
        maltrato: "",
        enfermedad: "",
        medicamento: "",
        opci: opcion
      });
    },
    changeupdateDe1A5: function changeupdateDe1A5(item, event, opcion) {
      if (opcion === "peso") {
        item.peso = event.target.value.replace(/[^.\d]/g, "").trim();
        item.imc = this.calcularImc(item.peso, item.talla);
      }

      if (opcion === "talla") {
        item.talla = event.target.value.replace(/[^.\d]/g, "").trim();
        item.imc = this.calcularImc(item.peso, item.talla);
      } // if (opcion === "imc") {
      //   item.imc = event.target.value.replace( /[^.\d]/g, '' ).trim();;
      // }


      if (opcion === "pb") {
        item.pb = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "pt") {
        item.pt = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "te") {
        item.te = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "nocepillado") {
        item.nocepillado = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "otras") {
        item.otras = event.target.value.trim();
      }
    },
    updateDe1A5: function updateDe1A5(item, valor, opcion) {
      if (opcion === "beneficiario") {
        item.beneficiario = valor;
      }

      if (opcion === "cyc") {
        item.cyc = valor;
      }

      if (opcion === "valoracion_1823") {
        item.valoracion_1823 = valor;
      }

      if (opcion === "valoracion_3035") {
        item.valoracion_3035 = valor;
      }

      if (opcion === "valoracion_4") {
        item.valoracion_4 = valor;
      }

      if (opcion === "lenguaje") {
        item.lenguaje = valor;
      }

      if (opcion === "motora") {
        item.motora = valor;
      }

      if (opcion === "conducta") {
        item.conducta = valor;
      }

      if (opcion === "visuales") {
        item.visuales = valor;
      }

      if (opcion === "auditivos") {
        item.auditivos = valor;
      }

      if (opcion === "caries") {
        item.caries = valor;
      }

      if (opcion === "consultaodon") {
        item.consultaodon = valor;
      }

      if (opcion === "carnet") {
        item.carnet = valor;
      }

      if (opcion === "bcg") {
        item.bcg = valor;
      }

      if (opcion === "polio") {
        item.polio = valor;
      }

      if (opcion === "dpt") {
        item.dpt = valor;
      }

      if (opcion === "fiebrea") {
        item.fiebrea = valor;
      }

      if (opcion === "tripleviral") {
        item.tripleviral = valor;
      }

      if (opcion === "pentavalente") {
        item.pentavalente = valor;
      }

      if (opcion === "desparacitado") {
        item.desparacitado = valor;
      }

      if (opcion === "maltrato") {
        item.maltrato = valor;
      }

      if (opcion === "enfermedad") {
        item.enfermedad = valor;
      }

      if (opcion === "medicamento") {
        item.medicamento = valor;
      }
    },
    Ade6a11Anio: function Ade6a11Anio(vector, edad) {
      var opcion = "";

      if (vector.id === "JEFE") {
        opcion = "JEFE";
      } else {
        opcion = "INTE";
      }

      this.De6A11.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        edad: edad,
        cyc: "",
        atencion: "",
        peso: "",
        talla: "",
        imc: "",
        pb: "",
        pt: "",
        te: "",
        conducta: "",
        visuales: "",
        auditivos: "",
        dientes_sanos: "",
        consultaodon: "",
        nofluor: "",
        nocepillado: "",
        maltrato: "",
        sustanciaspsico: "",
        desparacitado: "",
        enfermedad: "",
        medicamento: "",
        padre: "",
        madre: "",
        hermanos: "",
        conyuge: "",
        opci: opcion
      });
    },
    changeupdateDe6A11: function changeupdateDe6A11(item, event, opcion) {
      if (opcion === "peso") {
        item.peso = event.target.value.replace(/[^.\d]/g, "").trim();
        item.imc = this.calcularImc(item.peso, item.talla);
      }

      if (opcion === "talla") {
        item.talla = event.target.value.replace(/[^.\d]/g, "").trim();
        item.imc = this.calcularImc(item.peso, item.talla);
      }

      if (opcion === "imc") {
        item.imc = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "pb") {
        item.pb = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "pt") {
        item.pt = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "te") {
        item.te = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "nocepillado") {
        item.nocepillado = event.target.value.replace(/[^.\d]/g, "").trim();
      }
    },
    updateDe6A11: function updateDe6A11(item, valor, opcion) {
      if (opcion === "cyc") {
        item.cyc = valor;
      }

      if (opcion === "atencion") {
        item.atencion = valor;
      }

      if (opcion === "conducta") {
        item.conducta = valor;
      }

      if (opcion === "visuales") {
        item.visuales = valor;
      }

      if (opcion === "auditivos") {
        item.auditivos = valor;
      }

      if (opcion === "dientes_sanos") {
        item.dientes_sanos = valor;
      }

      if (opcion === "consultaodon") {
        item.consultaodon = valor;
      }

      if (opcion === "maltrato") {
        item.maltrato = valor;
      }

      if (opcion === "sustanciaspsico") {
        item.sustanciaspsico = valor;
      }

      if (opcion === "desparacitado") {
        item.desparacitado = valor;
      }

      if (opcion === "enfermedad") {
        item.enfermedad = valor;
      }

      if (opcion === "medicamento") {
        item.medicamento = valor;
      }

      if (opcion === "padre") {
        item.padre = valor;
      }

      if (opcion === "madre") {
        item.madre = valor;
      }

      if (opcion === "hermanos") {
        item.hermanos = valor;
      }

      if (opcion === "conyuge") {
        item.conyuge = valor;
      }

      if (opcion === "nofluor") {
        item.nofluor = valor;
      }
    },
    Ade10a59Anio: function Ade10a59Anio(vector, edad) {
      var opcion = "";

      if (vector.id === "JEFE") {
        opcion = "JEFE";
      } else {
        opcion = "INTE";
      }

      if (vector.sexo === "MASCULINO") {
        this.De10A59.push({
          id: 0,
          tipo_id: vector.tipo_id,
          identificacion: vector.identificacion,
          pnom: vector.pnom,
          snom: vector.snom,
          pape: vector.pape,
          sape: vector.sape,
          sexo: vector.sexo,
          edad: edad,
          primera_mes: "NA",
          flujo_vaginal: "NA",
          flujo_uretral: "",
          relaciones_sexuales: "",
          compa_sexuales: "",
          usa_condon: "",
          abortos_seis: "NA",
          embarazo_adolecentes: "NA",
          metodo: "",
          tiempo_metodo: "",
          controles: "",
          motivo: "",
          citologia: "NA",
          colposcopia: "NA",
          examen_seno: "NA",
          violencia: "",
          tdit: "NA",
          tripleviral: "NA",
          nacidos_vivos: "NA",
          abortos: "NA",
          examen_prostata: "",
          biposia_prostata: "",
          opci: opcion
        });
      } else {
        this.De10A59.push({
          id: 0,
          tipo_id: vector.tipo_id,
          identificacion: vector.identificacion,
          pnom: vector.pnom,
          snom: vector.snom,
          pape: vector.pape,
          sape: vector.sape,
          sexo: vector.sexo,
          edad: edad,
          primera_mes: "",
          flujo_vaginal: "",
          flujo_uretral: "",
          relaciones_sexuales: "",
          compa_sexuales: "",
          usa_condon: "",
          abortos_seis: "",
          embarazo_adolecentes: "",
          metodo: "",
          tiempo_metodo: "",
          controles: "",
          motivo: "",
          citologia: "",
          colposcopia: "",
          examen_seno: "",
          violencia: "",
          tdit: "",
          tripleviral: "",
          nacidos_vivos: "",
          abortos: "",
          examen_prostata: "NA",
          biposia_prostata: "NA",
          opci: opcion
        });
      }

      console.info(this.De10A59);
    },
    changeupdateDe10A59: function changeupdateDe10A59(item, event, opcion) {},
    updateDe10A59: function updateDe10A59(item, valor, opcion) {
      if (opcion === "flujo_vaginal") {
        item.flujo_vaginal = valor;
      }

      if (opcion === "flujo_uretral") {
        item.flujo_uretral = valor;
      }

      if (opcion === "relaciones_sexuales") {
        item.relaciones_sexuales = valor;
      }

      if (opcion === "usa_condon") {
        item.usa_condon = valor;
      }

      if (opcion === "abortos_seis") {
        item.abortos_seis = valor;
      }

      if (opcion === "embarazo_adolecentes") {
        item.embarazo_adolecentes = valor;
      }

      if (opcion === "metodo") {
        item.metodo = valor;
      }

      if (opcion === "motivo") {
        item.motivo = valor;
      }

      if (opcion === "controles") {
        item.controles = valor;
      }

      if (opcion === "citologia") {
        item.citologia = valor;
      }

      if (opcion === "colposcopia") {
        item.colposcopia = valor;
      }

      if (opcion === "examen_seno") {
        item.examen_seno = valor;
      }

      if (opcion === "violencia") {
        item.violencia = valor;
      }

      if (opcion === "tdit") {
        item.tdit = valor;
      }

      if (opcion === "tripleviral") {
        item.tripleviral = valor;
      }

      if (opcion === "abortos") {
        item.abortos = valor;
      }

      if (opcion === "examen_prostata") {
        item.examen_prostata = valor;
      }

      if (opcion === "biposia_prostata") {
        item.biposia_prostata = valor;
      }

      if (opcion === "tiempo_metodo") {
        item.tiempo_metodo = valor;
      }

      if (opcion === "primera_mes") {
        if (item.sexo === "MASCULINO") {
          item.primera_mes = "NA";
        } else {
          item.primera_mes = valor;
        }
      }

      if (opcion === "compa_sexuales") {
        if (item.sexo === "MASCULINO") {
          item.compa_sexuales = "NA";
        } else {
          item.compa_sexuales = valor;
        }
      }

      if (opcion === "nacidos_vivos") {
        if (item.sexo === "MASCULINO") {
          item.nacidos_vivos = "NA";
        } else {
          item.nacidos_vivos = valor;
        }
      }
    },
    AParPost: function AParPost(vector, edad) {
      var opcion = "";

      if (vector.id === "JEFE") {
        opcion = "JEFE";
      } else {
        opcion = "INTE";
      }

      this.ParPost.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        edad: edad,
        aceptacion: "",
        control_prenatal: "",
        atencion_parto: "",
        carnet: "",
        fecha_ultima: "",
        fecha_probable: "",
        peso: "",
        talla: "",
        imc: "",
        semanas_ges: "",
        num_controles: "",
        vih: "",
        toxoplasma: "",
        vdrl: "",
        odontologia: "",
        vacunaciontdit: "",
        fecha_ultimo_parto: "",
        suplementacion: "",
        enfermedades_cronicas: "",
        sedentarismo: "",
        fuma: "",
        consumo: "",
        bebidas: "",
        tipo_parto: "",
        atencion_institucional: "",
        cc18: "",
        morgestacion: "",
        morparto: "",
        morposparto: "",
        opci: opcion
      });
    },
    changeupdatePosparto: function changeupdatePosparto(item, event, opcion) {
      moment.locale("es");

      if (opcion === "fecha_ultima") {
        var fecha = moment.utc(item.fecha_ultima, "YYYY-MM-DD");
        var suma = fecha.add(9, "months");
        item.fecha_probable = suma.format("YYYY-MM-DD"); // console.log(suma.format("DD/MM/YYYY"));
        // console.log(item.fecha_probable);
      }

      if (opcion === "fecha_probable") {
        var _fecha = moment.utc(item.fecha_probable, "YYYY-MM-DD");

        var _suma = _fecha.subtract(9, "months");

        item.fecha_ultima = _suma.format("YYYY-MM-DD"); // item.fecha_probable = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "peso") {
        item.peso = event.target.value.replace(/[^.\d]/g, "").trim();
        item.imc = this.calcularImc(item.peso, item.talla);
      }

      if (opcion === "talla") {
        item.talla = event.target.value.replace(/[^.\d]/g, "").trim();
        item.imc = this.calcularImc(item.peso, item.talla);
      }

      if (opcion === "imc") {
        item.imc = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "semanas_ges") {
        item.semanas_ges = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "fecha_ultimo_parto") {// item.fecha_ultimo_parto = event.target.value
        //   .replace(/[^.\d]/g, "")
        //   .trim();
      }
    },
    updatePosparto: function updatePosparto(item, valor, opcion) {
      if (opcion === "aceptacion") {
        item.aceptacion = valor;
      }

      if (opcion === "control_prenatal") {
        item.control_prenatal = valor;
      }

      if (opcion === "atencion_parto") {
        item.atencion_parto = valor;
      }

      if (opcion === "carnet") {
        item.carnet = valor;
      }

      if (opcion === "num_controles") {
        item.num_controles = valor;
      }

      if (opcion === "vih") {
        item.vih = valor;
      }

      if (opcion === "toxoplasma") {
        item.toxoplasma = valor;
      }

      if (opcion === "vdrl") {
        item.vdrl = valor;
      }

      if (opcion === "odontologia") {
        item.odontologia = valor;
      }

      if (opcion === "vacunaciontdit") {
        item.vacunaciontdit = valor;
      }

      if (opcion === "suplementacion") {
        item.suplementacion = valor;
      }

      if (opcion === "enfermedades_cronicas") {
        item.enfermedades_cronicas = valor;
      }

      if (opcion === "sedentarismo") {
        item.sedentarismo = valor;
      }

      if (opcion === "fuma") {
        item.fuma = valor;
      }

      if (opcion === "consumo") {
        item.consumo = valor;
      }

      if (opcion === "bebidas") {
        item.bebidas = valor;
      }

      if (opcion === "tipo_parto") {
        item.tipo_parto = valor;
      }

      if (opcion === "atencion_institucional") {
        item.atencion_institucional = valor;
      }

      if (opcion === "cc18") {
        item.cc18 = valor;
      }

      if (opcion === "morgestacion") {
        item.morgestacion = valor;
      }

      if (opcion === "morparto") {
        item.morparto = valor;
      }

      if (opcion === "morposparto") {
        item.morposparto = valor;
      }
    },
    Ade12a17Anio: function Ade12a17Anio(vector, edad) {
      var opcion = "";

      if (vector.id === "JEFE") {
        opcion = "JEFE";
      } else {
        opcion = "INTE";
      }

      this.De12A17.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        edad: edad,
        peso: "",
        talla: "",
        imc: "",
        pb: "",
        visuales: "",
        auditivos: "",
        conducta: "",
        enfermedades_cronicas: "",
        dientes_sanos: "",
        consultaodon: "",
        nocepillado: "",
        maltrato: "",
        alcohol: "",
        fuma: "",
        spa: "",
        desparacitado: "",
        empleo: "",
        religion: "",
        queesvih: "",
        queescancerutero: "",
        queespapiloma: "",
        queescancerseno: "",
        padre: "",
        madre: "",
        hermanos: "",
        conyuge: "",
        opci: opcion
      });
    },
    changeupdateDe12A17: function changeupdateDe12A17(item, event, opcion) {
      if (opcion === "peso") {
        item.peso = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "talla") {
        item.talla = event.target.value.replace(/[^.\d]/g, "").trim();
        item.imc = this.calcularImc(item.peso, item.talla);
      }

      if (opcion === "imc") {
        item.imc = event.target.value.replace(/[^.\d]/g, "").trim();
        item.imc = this.calcularImc(item.peso, item.talla);
      }

      if (opcion === "pb") {
        item.pb = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "nocepillado") {
        item.nocepillado = event.target.value.replace(/[^.\d]/g, "").trim();
      }
    },
    updateDe12A17: function updateDe12A17(item, valor, opcion) {
      if (opcion === "conducta") {
        item.conducta = valor;
      }

      if (opcion === "visuales") {
        item.visuales = valor;
      }

      if (opcion === "auditivos") {
        item.auditivos = valor;
      }

      if (opcion === "enfermedades_cronicas") {
        item.enfermedades_cronicas = valor;
      }

      if (opcion === "dientes_sanos") {
        item.dientes_sanos = valor;
      }

      if (opcion === "consultaodon") {
        item.consultaodon = valor;
      }

      if (opcion === "maltrato") {
        item.maltrato = valor;
      }

      if (opcion === "alcohol") {
        item.alcohol = valor;
      }

      if (opcion === "fuma") {
        item.fuma = valor;
      }

      if (opcion === "spa") {
        item.spa = valor;
      }

      if (opcion === "desparacitado") {
        item.desparacitado = valor;
      }

      if (opcion === "empleo") {
        item.empleo = valor;
      }

      if (opcion === "religion") {
        item.religion = valor;
      }

      if (opcion === "queesvih") {
        item.queesvih = valor;
      }

      if (opcion === "queescancerutero") {
        item.queescancerutero = valor;
      }

      if (opcion === "queespapiloma") {
        item.queespapiloma = valor;
      }

      if (opcion === "queescancerseno") {
        item.queescancerseno = valor;
      }

      if (opcion === "padre") {
        item.padre = valor;
      }

      if (opcion === "madre") {
        item.madre = valor;
      }

      if (opcion === "hermanos") {
        item.hermanos = valor;
      }

      if (opcion === "conyuge") {
        item.conyuge = valor;
      }
    },
    Ade18a28Anio: function Ade18a28Anio(vector, edad) {
      var opcion = "";

      if (vector.id === "JEFE") {
        opcion = "JEFE";
      } else {
        opcion = "INTE";
      }

      this.De18A28.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        edad: edad,
        peso: "",
        talla: "",
        imc: "",
        pcintura: "",
        pb: "",
        visuales: "",
        auditivos: "",
        conducta: "",
        enfermedades_cronicas: "",
        dientes_sanos: "",
        consultaodon: "",
        nocepillado: "",
        maltrato: "",
        alcohol: "",
        fuma: "",
        spa: "",
        desparacitado: "",
        empleo: "",
        religion: "",
        queesvih: "",
        queescancerutero: "",
        queespapiloma: "",
        opci: opcion
      });
    },
    changeupdateDe18A28: function changeupdateDe18A28(item, event, opcion) {
      if (opcion === "peso") {
        item.peso = event.target.value.replace(/[^.\d]/g, "").trim();
        item.imc = this.calcularImc(item.peso, item.talla);
      }

      if (opcion === "talla") {
        item.talla = event.target.value.replace(/[^.\d]/g, "").trim();
        item.imc = this.calcularImc(item.peso, item.talla);
      }

      if (opcion === "imc") {
        item.imc = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "pb") {
        item.pb = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "pcintura") {
        item.pcintura = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "nocepillado") {
        item.nocepillado = event.target.value.replace(/[^.\d]/g, "").trim();
      }
    },
    updateDe18A28: function updateDe18A28(item, valor, opcion) {
      if (opcion === "conducta") {
        item.conducta = valor;
      }

      if (opcion === "visuales") {
        item.visuales = valor;
      }

      if (opcion === "auditivos") {
        item.auditivos = valor;
      }

      if (opcion === "enfermedades_cronicas") {
        item.enfermedades_cronicas = valor;
      }

      if (opcion === "dientes_sanos") {
        item.dientes_sanos = valor;
      }

      if (opcion === "consultaodon") {
        item.consultaodon = valor;
      }

      if (opcion === "maltrato") {
        item.maltrato = valor;
      }

      if (opcion === "alcohol") {
        item.alcohol = valor;
      }

      if (opcion === "fuma") {
        item.fuma = valor;
      }

      if (opcion === "spa") {
        item.spa = valor;
      }

      if (opcion === "desparacitado") {
        item.desparacitado = valor;
      }

      if (opcion === "empleo") {
        item.empleo = valor;
      }

      if (opcion === "religion") {
        item.religion = valor;
      }

      if (opcion === "queesvih") {
        item.queesvih = valor;
      }

      if (opcion === "queescancerutero") {
        item.queescancerutero = valor;
      }

      if (opcion === "queespapiloma") {
        item.queespapiloma = valor;
      }
    },
    Ade29a59Anio: function Ade29a59Anio(vector, edad) {
      var opcion = "";

      if (vector.id === "JEFE") {
        opcion = "JEFE";
      } else {
        opcion = "INTE";
      }

      this.De29A59.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        edad: edad,
        peso: "",
        talla: "",
        imc: "",
        pcintura: "",
        pb: "",
        visuales: "",
        auditivos: "",
        conducta: "",
        enfermedades_cronicas: "",
        dientes_sanos: "",
        consultaodon: "",
        nocepillado: "",
        maltrato: "",
        alcohol: "",
        fuma: "",
        spa: "",
        desparacitado: "",
        empleo: "",
        examen_prostata: "NA",
        citologia: "NA",
        examen_mama: "NA",
        religion: "",
        queesvih: "",
        queescancerutero: "",
        queespapiloma: "",
        opci: opcion
      });
    },
    changeupdateDe29A59: function changeupdateDe29A59(item, event, opcion) {
      if (opcion === "peso") {
        item.peso = event.target.value.replace(/[^.\d]/g, "").trim();
        item.imc = this.calcularImc(item.peso, item.talla);
      }

      if (opcion === "talla") {
        item.talla = event.target.value.replace(/[^.\d]/g, "").trim();
        item.imc = this.calcularImc(item.peso, item.talla);
      }

      if (opcion === "imc") {
        item.imc = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "pb") {
        item.pb = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "pcintura") {
        item.pcintura = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "nocepillado") {
        item.nocepillado = event.target.value.replace(/[^.\d]/g, "").trim();
      }
    },
    updateDe29A59: function updateDe29A59(item, valor, opcion) {
      if (opcion === "conducta") {
        item.conducta = valor;
      }

      if (opcion === "visuales") {
        item.visuales = valor;
      }

      if (opcion === "auditivos") {
        item.auditivos = valor;
      }

      if (opcion === "enfermedades_cronicas") {
        item.enfermedades_cronicas = valor;
      }

      if (opcion === "dientes_sanos") {
        item.dientes_sanos = valor;
      }

      if (opcion === "consultaodon") {
        item.consultaodon = valor;
      }

      if (opcion === "maltrato") {
        item.maltrato = valor;
      }

      if (opcion === "alcohol") {
        item.alcohol = valor;
      }

      if (opcion === "fuma") {
        item.fuma = valor;
      }

      if (opcion === "spa") {
        item.spa = valor;
      }

      if (opcion === "desparacitado") {
        item.desparacitado = valor;
      }

      if (opcion === "empleo") {
        item.empleo = valor;
      }

      if (opcion === "religion") {
        item.religion = valor;
      }

      if (opcion === "examen_prostata") {
        item.examen_prostata = valor;
      }

      if (opcion === "citologia") {
        item.citologia = valor;
      }

      if (opcion === "examen_mama") {
        item.examen_mama = valor;
      }

      if (opcion === "queesvih") {
        item.queesvih = valor;
      }

      if (opcion === "queescancerutero") {
        item.queescancerutero = valor;
      }

      if (opcion === "queespapiloma") {
        item.queespapiloma = valor;
      }
    },
    Ade60Anio: function Ade60Anio(vector, edad) {
      var opcion = "";

      if (vector.id === "JEFE") {
        opcion = "JEFE";
      } else {
        opcion = "INTE";
      }

      this.De60.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        edad: edad,
        grupo_ayudas: "",
        peso: "",
        talla: "",
        imc: "",
        pa: "",
        glicemia: "",
        cigarrillo: "",
        alcohol: "",
        actividad_fisica: "",
        sintomatico: "",
        examen_seno: "",
        citologia: "",
        colposcopia: "",
        examen_prostata: "",
        biposia_prostata: "",
        agudeza_visual: "",
        subsidio: "",
        enfermedades_cronicas: "",
        enfermedades_infecciosas: "",
        opci: opcion
      });
    },
    changeupdateDe60: function changeupdateDe60(item, event, opcion) {
      if (opcion === "peso") {
        item.peso = event.target.value.replace(/[^.\d]/g, "").trim();
        item.imc = this.calcularImc(item.peso, item.talla);
      }

      if (opcion === "talla") {
        item.talla = event.target.value.replace(/[^.\d]/g, "").trim();
        item.imc = this.calcularImc(item.peso, item.talla);
      }

      if (opcion === "imc") {
        item.imc = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "pa") {
        item.pa = event.target.value.trim();
      }

      if (opcion === "glicemia") {
        item.glicemia = event.target.value.trim();
      }
    },
    updateDe60: function updateDe60(item, valor, opcion) {
      if (opcion === "grupo_ayudas") {
        item.grupo_ayudas = valor;
      }

      if (opcion === "cigarrillo") {
        item.cigarrillo = valor;
      }

      if (opcion === "alcohol") {
        item.alcohol = valor;
      }

      if (opcion === "actividad_fisica") {
        item.actividad_fisica = valor;
      }

      if (opcion === "sintomatico") {
        item.sintomatico = valor;
      }

      if (opcion === "examen_seno") {
        item.examen_seno = valor;
      }

      if (opcion === "citologia") {
        item.citologia = valor;
      }

      if (opcion === "colposcopia") {
        item.colposcopia = valor;
      }

      if (opcion === "examen_prostata") {
        item.examen_prostata = valor;
      }

      if (opcion === "biposia_prostata") {
        item.biposia_prostata = valor;
      }

      if (opcion === "agudeza_visual") {
        item.agudeza_visual = valor;
      }

      if (opcion === "subsidio") {
        item.subsidio = valor;
      }

      if (opcion === "enfermedades_cronicas") {
        item.enfermedades_cronicas = valor;

        if (valor === "SI") {
          // AGREGAR ENFERMEDADES CONTAGIOSAS
          this.AEnCro(item); // AGREGAR ENFERMEDADES CONTAGIOSAS
        } else {
          // ELIMINAR ENFERMEDADES CONTAGIOSAS
          this.EEnCro(item); // ELIMINAR ENFERMEDADES CONTAGIOSAS
        }
      }

      if (opcion === "enfermedades_infecciosas") {
        item.enfermedades_infecciosas = valor;

        if (valor === "SI") {
          // AGREGAR ENFERMEDADES INFECCIOSAS
          this.AEnInf(item); // AGREGAR ENFERMEDADES INFECCIOSAS
        } else {
          // ELIMINAR ENFERMEDADES INFECCIOSAS
          this.EEnInf(item); // ELIMINAR ENFERMEDADES INFECCIOSAS
        }
      }
    },
    AEnCro: function AEnCro(vector) {
      var opcion = "";

      if (vector.opci === "JEFE") {
        opcion = "JEFE";
      } else {
        opcion = "INTE";
      }

      this.EnCro.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        enfermedad: "",
        tiempo: "",
        tratamiento: "",
        complicaciones: "",
        opci: opcion
      });
    },
    changeupdateEnCro: function changeupdateEnCro(item, event, opcion) {
      if (opcion === "complicaciones") {
        item.complicaciones = event.target.value.trim();
      }
    },
    updateEnCro: function updateEnCro(item, valor, opcion) {
      if (opcion === "enfermedad") {
        item.enfermedad = valor;
      }

      if (opcion === "tratamiento") {
        item.tratamiento = valor;
      }

      if (opcion === "tiempo") {
        item.tiempo = valor;
      }
    },
    EEnCro: function EEnCro(item) {
      var identificacion = item.identificacion;
      this.EnCro = this.EnCro.filter(function (men) {
        return men.identificacion != identificacion;
      });
    },
    AEnInf: function AEnInf(vector) {
      var opcion = "";

      if (vector.opci === "JEFE") {
        opcion = "JEFE";
      } else {
        opcion = "INTE";
      }

      this.EnInf.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        enfermedad: "",
        tiempo: "",
        tratamiento: "",
        complicaciones: "",
        opci: opcion
      });
    },
    changeupdateEnInf: function changeupdateEnInf(item, event, opcion) {
      if (opcion === "complicaciones") {
        item.complicaciones = event.target.value.trim();
      }
    },
    updateEnInf: function updateEnInf(item, valor, opcion) {
      if (opcion === "enfermedad") {
        item.enfermedad = valor;
      }

      if (opcion === "tratamiento") {
        item.tratamiento = valor;
      }

      if (opcion === "tiempo") {
        item.tiempo = valor;
      }
    },
    EEnInf: function EEnInf(item) {
      var identificacion = item.identificacion;
      this.EnInf = this.EnInf.filter(function (men) {
        return men.identificacion != identificacion;
      });
    },
    AMigra: function AMigra(vector, edad) {
      var opcion = "";

      if (vector.id === "JEFE") {
        opcion = "JEFE";
      } else {
        opcion = "INTE";
      }

      this.Migra.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        edad: edad,
        pais: "",
        registrado: "",
        cuantollego: "",
        futuro: "",
        recibido: "",
        necesidad: "",
        dependen: "",
        ingreso: "",
        opci: opcion
      });
    },
    changeupdateMigra: function changeupdateMigra(item, event, opcion) {
      if (opcion === "pais") {
        item.pais = event.target.value.trim();
      }

      if (opcion === "dependen") {
        item.dependen = event.target.value.replace(/[^.\d]/g, "").trim();
      }
    },
    updateMigra: function updateMigra(item, valor, opcion) {
      if (opcion === "registrado") {
        item.registrado = valor;
      }

      if (opcion === "cuantollego") {
        item.cuantollego = valor;
      }

      if (opcion === "futuro") {
        item.futuro = valor;
      }

      if (opcion === "recibido") {
        item.recibido = valor;
      }

      if (opcion === "necesidad") {
        item.necesidad = valor;
      }

      if (opcion === "ingreso") {
        item.ingreso = valor;
      }
    },
    calcularImc: function calcularImc(peso, talla) {
      if (peso === "") {
        peso = 0;
      }

      if (talla === "") {
        talla = 1;
      }

      talla = talla / 100;
      var imc = peso / (talla * talla);
      return imc.toFixed(2);
    },
    habilitar_zonas: function habilitar_zonas() {
      if (this.hogar.id_zona === "") {
        this.estratificacionData.ingresos_zona_rural = "";
        this.estratificacionData.ingresos_ciudad = "";
      }

      if (this.hogar.id_zona === "0") {
        this.estratificacionData.ingresos_zona_rural = 8;
        this.estratificacionData.ingresos_ciudad = 8;
      }

      if (this.hogar.id_zona === "1") {
        this.estratificacionData.ingresos_zona_rural = 8;
        this.estratificacionData.ingresos_ciudad = "";
      }

      if (this.hogar.id_zona === "2" || this.hogar.id_zona === "3") {
        this.estratificacionData.ingresos_zona_rural = "";
        this.estratificacionData.ingresos_ciudad = 8;
      }
    },
    updateJefe: function updateJefe(item, valor, opcion, index) {
      if (opcion === "tipo_id") {
        //SABER LA IDENTIFICACION EN EL VECTOR DE JEFES SEGUN EL INDICE Q
        //VIENE DE LA TABLA
        var id = this.vectorJefes[index].identificacion; //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY

        var indice = this.factores.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.factores[indice].tipo_id = valor;
          this.factores.splice(indice, 1, this.factores[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De10A59.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.De10A59[indice].tipo_id = valor;
          this.De10A59.splice(indice, 1, this.De10A59[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.ParPost.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.ParPost[indice].tipo_id = valor;
          this.ParPost.splice(indice, 1, this.ParPost[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De12A17.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.De12A17[indice].tipo_id = valor;
          this.De12A17.splice(indice, 1, this.De12A17[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De18A28.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.De18A28[indice].tipo_id = valor;
          this.De18A28.splice(indice, 1, this.De18A28[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De29A59.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.De29A59[indice].tipo_id = valor;
          this.De29A59.splice(indice, 1, this.De29A59[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De60.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.De60[indice].tipo_id = valor;
          this.De60.splice(indice, 1, this.De60[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.Migra.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.Migra[indice].tipo_id = valor;
          this.Migra.splice(indice, 1, this.Migra[indice]);
        }
      }

      if (opcion === "sexo") {
        if (item.sexo === "") {
          item.embarazo = "";
          item.embarazo_multiple = "";
        }

        if (item.sexo === "MASCULINO") {
          item.embarazo = "NOAPLICA";
          item.embarazo_multiple = "NOAPLICA";
        }

        if (item.sexo === "FEMENINO") {
          item.embarazo = "";
          item.embarazo_multiple = "";
        } //SABER LA IDENTIFICACION EN EL VECTOR DE JEFES SEGUN EL INDICE Q
        //VIENE DE LA TABLA


        var _id = this.vectorJefes[index].identificacion; //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY

        var _indice = this.factores.findIndex(function (identi) {
          return identi.identificacion === _id;
        });

        if (_indice >= 0) {
          this.factores[_indice].sexo = valor;
          this.factores.splice(_indice, 1, this.factores[_indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice = this.De10A59.findIndex(function (identi) {
          return identi.identificacion === _id;
        });

        if (_indice >= 0) {
          this.De10A59[_indice].sexo = valor;
          this.De10A59.splice(_indice, 1, this.De10A59[_indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice = this.ParPost.findIndex(function (identi) {
          return identi.identificacion === _id;
        });

        if (_indice >= 0) {
          this.ParPost[_indice].sexo = valor;
          this.ParPost.splice(_indice, 1, this.ParPost[_indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice = this.De12A17.findIndex(function (identi) {
          return identi.identificacion === _id;
        });

        if (_indice >= 0) {
          this.De12A17[_indice].sexo = valor;
          this.De12A17.splice(_indice, 1, this.De12A17[_indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice = this.De18A28.findIndex(function (identi) {
          return identi.identificacion === _id;
        });

        if (_indice >= 0) {
          this.De18A28[_indice].sexo = valor;
          this.De18A28.splice(_indice, 1, this.De18A28[_indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice = this.De29A59.findIndex(function (identi) {
          return identi.identificacion === _id;
        });

        if (_indice >= 0) {
          this.De29A59[_indice].sexo = valor;
          this.De29A59.splice(_indice, 1, this.De29A59[_indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice = this.De60.findIndex(function (identi) {
          return identi.identificacion === _id;
        });

        if (_indice >= 0) {
          this.De60[_indice].sexo = valor;
          this.De60.splice(_indice, 1, this.De60[_indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice = this.Migra.findIndex(function (identi) {
          return identi.identificacion === _id;
        });

        if (_indice >= 0) {
          this.Migra[_indice].sexo = valor;
          this.Migra.splice(_indice, 1, this.Migra[_indice]);
        }
      }

      if (opcion === "embarazo") {
        if (item.embarazo === "") {
          item.embarazo_multiple = "";
        }

        if (item.embarazo === "SI") {
          item.embarazo_multiple = "";
        }

        if (item.embarazo === "NO") {
          item.embarazo_multiple = "NO";
        }
      }

      if (opcion === "afiliacion_entidad") {
        if (item.afiliacion_entidad === "NINGUNA") {
          item.tipo_afiliacion = "0";
        } else {
          if (item.afiliacion_entidad === "OTRA") {
            item.otra_eps = "";
          } else {
            item.tipo_afiliacion = "";
          }
        }
      }

      if (opcion === "nivel_escolaridad") {
        item.colegio = "";
        item.grado = "";
      }
    },
    changeupdateJefe: function changeupdateJefe(item, event, opcion, index) {
      if (opcion == "identificacion") {
        //SABER LA IDENTIFICACION EN EL VECTOR DE JEFES SEGUN EL INDICE Q
        //VIENE DE LA TABLA
        var id = this.vectorJefes[index].identificacion; //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY

        var indice = this.factores.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.factores[indice].identificacion = item.identificacion;
          this.factores.splice(indice, 1, this.factores[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De10A59.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De10A59[indice].identificacion = item.identificacion;
          this.De10A59.splice(indice, 1, this.De10A59[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.ParPost.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.ParPost[indice].identificacion = item.identificacion;
          this.ParPost.splice(indice, 1, this.ParPost[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De12A17.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De12A17[indice].identificacion = item.identificacion;
          this.De12A17.splice(indice, 1, this.De12A17[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De18A28.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De18A28[indice].identificacion = item.identificacion;
          this.De18A28.splice(indice, 1, this.De18A28[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De29A59.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De29A59[indice].identificacion = item.identificacion;
          this.De29A59.splice(indice, 1, this.De29A59[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De60.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De60[indice].identificacion = item.identificacion;
          this.De60.splice(indice, 1, this.De60[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.Migra.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.Migra[indice].identificacion = item.identificacion;
          this.Migra.splice(indice, 1, this.Migra[indice]);
        } //CAMBIAR LA IDENTIFICACION DEL VECTOR JEFE POR LA NUEVA IDENTIFICACION
        //DIGITADA EN LA TABLA


        this.vectorJefes[index].identificacion = item.identificacion; // Vue.set(this.vectorJefes, 1, this.vectorJefes[index]);

        this.vectorJefes.splice(index, 1, this.vectorJefes[index]);
      }

      if (opcion == "pnom") {
        //SABER LA IDENTIFICACION EN EL VECTOR DE JEFES SEGUN EL INDICE Q
        //VIENE DE LA TABLA
        var _id2 = this.vectorJefes[index].identificacion; //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY

        var _indice2 = this.factores.findIndex(function (identi) {
          return identi.identificacion === _id2;
        });

        if (_indice2 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.factores[_indice2].pnom = item.pnom;
          this.factores.splice(_indice2, 1, this.factores[_indice2]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice2 = this.De10A59.findIndex(function (identi) {
          return identi.identificacion === _id2;
        });

        if (_indice2 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De10A59[_indice2].pnom = item.pnom;
          this.De10A59.splice(_indice2, 1, this.De10A59[_indice2]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice2 = this.ParPost.findIndex(function (identi) {
          return identi.identificacion === _id2;
        });

        if (_indice2 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.ParPost[_indice2].pnom = item.pnom;
          this.ParPost.splice(_indice2, 1, this.ParPost[_indice2]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice2 = this.De12A17.findIndex(function (identi) {
          return identi.identificacion === _id2;
        });

        if (_indice2 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De12A17[_indice2].pnom = item.pnom;
          this.De12A17.splice(_indice2, 1, this.De12A17[_indice2]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice2 = this.De18A28.findIndex(function (identi) {
          return identi.identificacion === _id2;
        });

        if (_indice2 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De18A28[_indice2].pnom = item.pnom;
          this.De18A28.splice(_indice2, 1, this.De18A28[_indice2]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice2 = this.De29A59.findIndex(function (identi) {
          return identi.identificacion === _id2;
        });

        if (_indice2 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De29A59[_indice2].pnom = item.pnom;
          this.De29A59.splice(_indice2, 1, this.De29A59[_indice2]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice2 = this.De60.findIndex(function (identi) {
          return identi.identificacion === _id2;
        });

        if (_indice2 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De60[_indice2].pnom = item.pnom;
          this.De60.splice(_indice2, 1, this.De60[_indice2]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice2 = this.Migra.findIndex(function (identi) {
          return identi.identificacion === _id2;
        });

        if (_indice2 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.Migra[_indice2].pnom = item.pnom;
          this.Migra.splice(_indice2, 1, this.Migra[_indice2]);
        }
      }

      if (opcion == "snom") {
        //SABER LA IDENTIFICACION EN EL VECTOR DE JEFES SEGUN EL INDICE Q
        //VIENE DE LA TABLA
        var _id3 = this.vectorJefes[index].identificacion; //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY

        var _indice3 = this.factores.findIndex(function (identi) {
          return identi.identificacion === _id3;
        });

        if (_indice3 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.factores[_indice3].snom = item.snom;
          this.factores.splice(_indice3, 1, this.factores[_indice3]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice3 = this.De10A59.findIndex(function (identi) {
          return identi.identificacion === _id3;
        });

        if (_indice3 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De10A59[_indice3].snom = item.snom;
          this.De10A59.splice(_indice3, 1, this.De10A59[_indice3]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice3 = this.ParPost.findIndex(function (identi) {
          return identi.identificacion === _id3;
        });

        if (_indice3 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.ParPost[_indice3].snom = item.snom;
          this.ParPost.splice(_indice3, 1, this.ParPost[_indice3]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice3 = this.De12A17.findIndex(function (identi) {
          return identi.identificacion === _id3;
        });

        if (_indice3 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De12A17[_indice3].snom = item.snom;
          this.De12A17.splice(_indice3, 1, this.De12A17[_indice3]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice3 = this.De18A28.findIndex(function (identi) {
          return identi.identificacion === _id3;
        });

        if (_indice3 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De18A28[_indice3].snom = item.snom;
          this.De18A28.splice(_indice3, 1, this.De18A28[_indice3]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice3 = this.De29A59.findIndex(function (identi) {
          return identi.identificacion === _id3;
        });

        if (_indice3 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De29A59[_indice3].snom = item.snom;
          this.De29A59.splice(_indice3, 1, this.De29A59[_indice3]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice3 = this.De60.findIndex(function (identi) {
          return identi.identificacion === _id3;
        });

        if (_indice3 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De60[_indice3].snom = item.snom;
          this.De60.splice(_indice3, 1, this.De60[_indice3]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice3 = this.Migra.findIndex(function (identi) {
          return identi.identificacion === _id3;
        });

        if (_indice3 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.Migra[_indice3].snom = item.snom;
          this.Migra.splice(_indice3, 1, this.Migra[_indice3]);
        }
      }

      if (opcion == "pape") {
        //SABER LA IDENTIFICACION EN EL VECTOR DE JEFES SEGUN EL INDICE Q
        //VIENE DE LA TABLA
        var _id4 = this.vectorJefes[index].identificacion; //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY

        var _indice4 = this.factores.findIndex(function (identi) {
          return identi.identificacion === _id4;
        });

        if (_indice4 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.factores[_indice4].pape = item.pape;
          this.factores.splice(_indice4, 1, this.factores[_indice4]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice4 = this.De10A59.findIndex(function (identi) {
          return identi.identificacion === _id4;
        });

        if (_indice4 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De10A59[_indice4].pape = item.pape;
          this.De10A59.splice(_indice4, 1, this.De10A59[_indice4]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice4 = this.ParPost.findIndex(function (identi) {
          return identi.identificacion === _id4;
        });

        if (_indice4 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.ParPost[_indice4].pape = item.pape;
          this.ParPost.splice(_indice4, 1, this.ParPost[_indice4]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice4 = this.De12A17.findIndex(function (identi) {
          return identi.identificacion === _id4;
        });

        if (_indice4 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De12A17[_indice4].pape = item.pape;
          this.De12A17.splice(_indice4, 1, this.De12A17[_indice4]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice4 = this.De18A28.findIndex(function (identi) {
          return identi.identificacion === _id4;
        });

        if (_indice4 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De18A28[_indice4].pape = item.pape;
          this.De18A28.splice(_indice4, 1, this.De18A28[_indice4]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice4 = this.De29A59.findIndex(function (identi) {
          return identi.identificacion === _id4;
        });

        if (_indice4 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De29A59[_indice4].pape = item.pape;
          this.De29A59.splice(_indice4, 1, this.De29A59[_indice4]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice4 = this.De60.findIndex(function (identi) {
          return identi.identificacion === _id4;
        });

        if (_indice4 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De60[_indice4].pape = item.pape;
          this.De60.splice(_indice4, 1, this.De60[_indice4]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice4 = this.Migra.findIndex(function (identi) {
          return identi.identificacion === _id4;
        });

        if (_indice4 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.Migra[_indice4].pape = item.pape;
          this.Migra.splice(_indice4, 1, this.Migra[_indice4]);
        }
      }

      if (opcion == "sape") {
        //SABER LA IDENTIFICACION EN EL VECTOR DE JEFES SEGUN EL INDICE Q
        //VIENE DE LA TABLA
        var _id5 = this.vectorJefes[index].identificacion; //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY

        var _indice5 = this.factores.findIndex(function (identi) {
          return identi.identificacion === _id5;
        });

        if (_indice5 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.factores[_indice5].sape = item.sape;
          this.factores.splice(_indice5, 1, this.factores[_indice5]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice5 = this.De10A59.findIndex(function (identi) {
          return identi.identificacion === _id5;
        });

        if (_indice5 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De10A59[_indice5].sape = item.sape;
          this.De10A59.splice(_indice5, 1, this.De10A59[_indice5]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice5 = this.ParPost.findIndex(function (identi) {
          return identi.identificacion === _id5;
        });

        if (_indice5 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.ParPost[_indice5].sape = item.sape;
          this.ParPost.splice(_indice5, 1, this.ParPost[_indice5]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice5 = this.De12A17.findIndex(function (identi) {
          return identi.identificacion === _id5;
        });

        if (_indice5 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De12A17[_indice5].sape = item.sape;
          this.De12A17.splice(_indice5, 1, this.De12A17[_indice5]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice5 = this.De18A28.findIndex(function (identi) {
          return identi.identificacion === _id5;
        });

        if (_indice5 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De18A28[_indice5].sape = item.sape;
          this.De18A28.splice(_indice5, 1, this.De18A28[_indice5]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice5 = this.De29A59.findIndex(function (identi) {
          return identi.identificacion === _id5;
        });

        if (_indice5 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De29A59[_indice5].sape = item.sape;
          this.De29A59.splice(_indice5, 1, this.De29A59[_indice5]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice5 = this.De60.findIndex(function (identi) {
          return identi.identificacion === _id5;
        });

        if (_indice5 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De60[_indice5].sape = item.sape;
          this.De60.splice(_indice5, 1, this.De60[_indice5]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice5 = this.Migra.findIndex(function (identi) {
          return identi.identificacion === _id5;
        });

        if (_indice5 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.Migra[_indice5].sape = item.sape;
          this.Migra.splice(_indice5, 1, this.Migra[_indice5]);
        }
      }

      if (opcion == "salario") {
        item.salario = event.target.value.replace(/[.*+\-?^${}()|[\]\\]/g, "");
        var val = (item.salario / 1).toFixed(0).replace(".", ",");
        item.salario = val.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

        if (item.salario == "NaN") {
          item.salario = "";
        }

        if (item.salario == "0") {
          item.salario = "";
        }
      }
    },
    updateIntegrante: function updateIntegrante(item, valor, opcion, index) {
      if (opcion === "tipo_id") {
        //SABER LA IDENTIFICACION EN EL VECTOR DE INTEGRANTES SEGUN EL INDICE Q
        //VIENE DE LA TABLA
        var id = this.vectorIntegrante[index].identificacion; //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY

        var indice = this.Men1A.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.Men1A[indice].tipo_id = valor;
          this.Men1A.splice(indice, 1, this.Men1A[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De1A5.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.De1A5[indice].tipo_id = valor;
          this.De1A5.splice(indice, 1, this.De1A5[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De6A11.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.De6A11[indice].tipo_id = valor;
          this.De6A11.splice(indice, 1, this.De6A11[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De10A59.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.De10A59[indice].tipo_id = valor;
          this.De10A59.splice(indice, 1, this.De10A59[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.ParPost.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.ParPost[indice].tipo_id = valor;
          this.ParPost.splice(indice, 1, this.ParPost[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De12A17.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.De12A17[indice].tipo_id = valor;
          this.De12A17.splice(indice, 1, this.De12A17[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De18A28.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.De18A28[indice].tipo_id = valor;
          this.De18A28.splice(indice, 1, this.De18A28[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De29A59.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.De29A59[indice].tipo_id = valor;
          this.De29A59.splice(indice, 1, this.De29A59[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De60.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.De60[indice].tipo_id = valor;
          this.De60.splice(indice, 1, this.De60[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.Migra.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.Migra[indice].tipo_id = valor;
          this.Migra.splice(indice, 1, this.Migra[indice]);
        }
      }

      if (opcion === "sexo") {
        if (item.sexo === "0") {
          item.embarazo = "0";
          item.embarazo_multiple = "0";
        }

        if (item.sexo === "MASCULINO") {
          item.embarazo = "NOAPLICA";
          item.embarazo_multiple = "NOAPLICA";
        }

        if (item.sexo === "FEMENINO") {
          item.embarazo = "0";
          item.embarazo_multiple = "0";
        } //SABER LA IDENTIFICACION EN EL VECTOR DE INTEGRANTES SEGUN EL INDICE Q
        //VIENE DE LA TABLA


        var _id6 = this.vectorIntegrante[index].identificacion; //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY

        var _indice6 = this.Men1A.findIndex(function (identi) {
          return identi.identificacion === _id6;
        });

        if (_indice6 >= 0) {
          this.Men1A[_indice6].sexo = valor;
          this.Men1A.splice(_indice6, 1, this.Men1A[_indice6]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice6 = this.De1A5.findIndex(function (identi) {
          return identi.identificacion === _id6;
        });

        if (_indice6 >= 0) {
          this.De1A5[_indice6].sexo = valor;
          this.De1A5.splice(_indice6, 1, this.De1A5[_indice6]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice6 = this.De6A11.findIndex(function (identi) {
          return identi.identificacion === _id6;
        });

        if (_indice6 >= 0) {
          this.De6A11[_indice6].sexo = valor;
          this.De6A11.splice(_indice6, 1, this.De6A11[_indice6]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice6 = this.De10A59.findIndex(function (identi) {
          return identi.identificacion === _id6;
        });

        if (_indice6 >= 0) {
          this.De10A59[_indice6].sexo = valor;
          this.De10A59.splice(_indice6, 1, this.De10A59[_indice6]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice6 = this.ParPost.findIndex(function (identi) {
          return identi.identificacion === _id6;
        });

        if (_indice6 >= 0) {
          this.ParPost[_indice6].sexo = valor;
          this.ParPost.splice(_indice6, 1, this.ParPost[_indice6]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice6 = this.De12A17.findIndex(function (identi) {
          return identi.identificacion === _id6;
        });

        if (_indice6 >= 0) {
          this.De12A17[_indice6].sexo = valor;
          this.De12A17.splice(_indice6, 1, this.De12A17[_indice6]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice6 = this.De18A28.findIndex(function (identi) {
          return identi.identificacion === _id6;
        });

        if (_indice6 >= 0) {
          this.De18A28[_indice6].sexo = valor;
          this.De18A28.splice(_indice6, 1, this.De18A28[_indice6]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice6 = this.De29A59.findIndex(function (identi) {
          return identi.identificacion === _id6;
        });

        if (_indice6 >= 0) {
          this.De29A59[_indice6].sexo = valor;
          this.De29A59.splice(_indice6, 1, this.De29A59[_indice6]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice6 = this.De60.findIndex(function (identi) {
          return identi.identificacion === _id6;
        });

        if (_indice6 >= 0) {
          this.De60[_indice6].sexo = valor;
          this.De60.splice(_indice6, 1, this.De60[_indice6]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice6 = this.Migra.findIndex(function (identi) {
          return identi.identificacion === _id6;
        });

        if (_indice6 >= 0) {
          this.Migra[_indice6].sexo = valor;
          this.Migra.splice(_indice6, 1, this.Migra[_indice6]);
        }
      }

      if (opcion === "embarazo") {
        if (item.embarazo === "0") {
          item.embarazo_multiple = "0";
        }

        if (item.embarazo === "SI") {
          item.embarazo_multiple = "0";
        }

        if (item.embarazo === "NO") {
          item.embarazo_multiple = "NO";
        }
      }

      if (opcion === "afi_entidad") {
        if (item.afi_entidad === "NINGUNA") {
          item.tipo_afiliacion = "0";
        } else {
          if (item.afi_entidad === "OTRA") {
            item.otra_eps = "";
          } else {
            item.tipo_afiliacion = "0";
          }
        }
      }

      if (opcion === "escolaridad") {
        item.colegio = "";
        item.grado = "0";
      }
    },
    changeupdateIntegrante: function changeupdateIntegrante(item, event, opcion, index) {
      // if (opcion === "fecha_nac") {
      //   let nacimiento = moment(event.target.value);
      //   let hoy = moment();
      //   let edad = 0;
      //   if (nacimiento < hoy) {
      //     edad = hoy.diff(nacimiento, "years"); //Calculamos la diferencia en años
      //   }
      //   item.edad = edad;
      //   //SABER LA IDENTIFICACION EN EL VECTOR DE INTEGRANTES SEGUN EL INDICE Q
      //   //VIENE DE LA TABLA
      //   let id = this.vectorIntegrante[index].identificacion;
      //   //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY
      //   let indice = this.Men1A.findIndex(
      //     identi => identi.identificacion === id
      //   );
      //   if (indice >= 0) {
      //     this.Men1A[indice].edad = item.edad;
      //     this.Men1A.splice(indice, 1, this.Men1A[indice]);
      //   }
      //   //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY
      //   indice = this.De1A5.findIndex(identi => identi.identificacion === id);
      //   if (indice >= 0) {
      //     this.De1A5[indice].edad = item.edad;
      //     this.De1A5.splice(indice, 1, this.De1A5[indice]);
      //   }
      //   //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY
      //   indice = this.De6A11.findIndex(identi => identi.identificacion === id);
      //   if (indice >= 0) {
      //     this.De6A11[indice].edad = item.edad;
      //     this.De6A11.splice(indice, 1, this.De6A11[indice]);
      //   }
      //   //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY
      //   indice = this.De10A59.findIndex(identi => identi.identificacion === id);
      //   if (indice >= 0) {
      //     //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
      //     this.De10A59[indice].edad = item.edad;
      //     this.De10A59.splice(indice, 1, this.De10A59[indice]);
      //   }
      //   //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY
      //   indice = this.ParPost.findIndex(identi => identi.identificacion === id);
      //   if (indice >= 0) {
      //     //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
      //     this.ParPost[indice].edad = item.edad;
      //     this.ParPost.splice(indice, 1, this.ParPost[indice]);
      //   }
      //   //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY
      //   indice = this.De12A17.findIndex(identi => identi.identificacion === id);
      //   if (indice >= 0) {
      //     //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
      //     this.De12A17[indice].edad = item.edad;
      //     this.De12A17.splice(indice, 1, this.De12A17[indice]);
      //   }
      //   //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY
      //   indice = this.De18A28.findIndex(identi => identi.identificacion === id);
      //   if (indice >= 0) {
      //     //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
      //     this.De18A28[indice].edad = item.edad;
      //     this.De18A28.splice(indice, 1, this.De18A28[indice]);
      //   }
      //   //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY
      //   indice = this.De29A59.findIndex(identi => identi.identificacion === id);
      //   if (indice >= 0) {
      //     //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
      //     this.De29A59[indice].edad = item.edad;
      //     this.De29A59.splice(indice, 1, this.De29A59[indice]);
      //   }
      //   //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY
      //   indice = this.De60.findIndex(identi => identi.identificacion === id);
      //   if (indice >= 0) {
      //     //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
      //     this.De60[indice].edad = item.edad;
      //     this.De60.splice(indice, 1, this.De60[indice]);
      //   }
      //   //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY
      //   indice = this.Migra.findIndex(identi => identi.identificacion === id);
      //   if (indice >= 0) {
      //     //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
      //     this.Migra[indice].edad = item.edad;
      //     this.Migra.splice(indice, 1, this.Migra[indice]);
      //   }
      // }
      if (opcion == "identificacion") {
        //SABER LA IDENTIFICACION EN EL VECTOR DE INTEGRANTES SEGUN EL INDICE Q
        //VIENE DE LA TABLA
        var id = this.vectorIntegrante[index].identificacion; //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY

        var indice = this.Men1A.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.Men1A[indice].identificacion = item.identificacion;
          this.Men1A.splice(indice, 1, this.Men1A[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De1A5.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.De1A5[indice].identificacion = item.identificacion;
          this.De1A5.splice(indice, 1, this.De1A5[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De6A11.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.De6A11[indice].identificacion = item.identificacion;
          this.De6A11.splice(indice, 1, this.De6A11[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De10A59.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De10A59[indice].identificacion = item.identificacion;
          this.De10A59.splice(indice, 1, this.De10A59[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.ParPost.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.ParPost[indice].identificacion = item.identificacion;
          this.ParPost.splice(indice, 1, this.ParPost[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De12A17.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De12A17[indice].identificacion = item.identificacion;
          this.De12A17.splice(indice, 1, this.De12A17[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De18A28.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De18A28[indice].identificacion = item.identificacion;
          this.De18A28.splice(indice, 1, this.De18A28[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De29A59.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De29A59[indice].identificacion = item.identificacion;
          this.De29A59.splice(indice, 1, this.De29A59[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De60.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De60[indice].identificacion = item.identificacion;
          this.De60.splice(indice, 1, this.De60[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.Migra.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.Migra[indice].identificacion = item.identificacion;
          this.Migra.splice(indice, 1, this.Migra[indice]);
        } //CAMBIAR LA IDENTIFICACION DEL VECTOR JEFE POR LA NUEVA IDENTIFICACION
        //DIGITADA EN LA TABLA


        this.vectorIntegrante[index].identificacion = item.identificacion; // Vue.set(this.vectorJefes, 1, this.vectorJefes[index]);

        this.vectorIntegrante.splice(index, 1, this.vectorIntegrante[index]);
      }

      if (opcion == "pnom") {
        //SABER LA IDENTIFICACION EN EL VECTOR DE INTEGRANTES SEGUN EL INDICE Q
        //VIENE DE LA TABLA
        var _id7 = this.vectorIntegrante[index].identificacion; //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY

        var _indice7 = this.Men1A.findIndex(function (identi) {
          return identi.identificacion === _id7;
        });

        if (_indice7 >= 0) {
          this.Men1A[_indice7].pnom = item.pnom;
          this.Men1A.splice(_indice7, 1, this.Men1A[_indice7]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice7 = this.De1A5.findIndex(function (identi) {
          return identi.identificacion === _id7;
        });

        if (_indice7 >= 0) {
          this.De1A5[_indice7].pnom = item.pnom;
          this.De1A5.splice(_indice7, 1, this.De1A5[_indice7]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice7 = this.De6A11.findIndex(function (identi) {
          return identi.identificacion === _id7;
        });

        if (_indice7 >= 0) {
          this.De6A11[_indice7].pnom = item.pnom;
          this.De6A11.splice(_indice7, 1, this.De6A11[_indice7]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice7 = this.De10A59.findIndex(function (identi) {
          return identi.identificacion === _id7;
        });

        if (_indice7 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De10A59[_indice7].pnom = item.pnom;
          this.De10A59.splice(_indice7, 1, this.De10A59[_indice7]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice7 = this.ParPost.findIndex(function (identi) {
          return identi.identificacion === _id7;
        });

        if (_indice7 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.ParPost[_indice7].pnom = item.pnom;
          this.ParPost.splice(_indice7, 1, this.ParPost[_indice7]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice7 = this.De12A17.findIndex(function (identi) {
          return identi.identificacion === _id7;
        });

        if (_indice7 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De12A17[_indice7].pnom = item.pnom;
          this.De12A17.splice(_indice7, 1, this.De12A17[_indice7]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice7 = this.De18A28.findIndex(function (identi) {
          return identi.identificacion === _id7;
        });

        if (_indice7 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De18A28[_indice7].pnom = item.pnom;
          this.De18A28.splice(_indice7, 1, this.De18A28[_indice7]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice7 = this.De29A59.findIndex(function (identi) {
          return identi.identificacion === _id7;
        });

        if (_indice7 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De29A59[_indice7].pnom = item.pnom;
          this.De29A59.splice(_indice7, 1, this.De29A59[_indice7]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice7 = this.De60.findIndex(function (identi) {
          return identi.identificacion === _id7;
        });

        if (_indice7 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De60[_indice7].pnom = item.pnom;
          this.De60.splice(_indice7, 1, this.De60[_indice7]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice7 = this.Migra.findIndex(function (identi) {
          return identi.identificacion === _id7;
        });

        if (_indice7 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.Migra[_indice7].pnom = item.pnom;
          this.Migra.splice(_indice7, 1, this.Migra[_indice7]);
        }
      }

      if (opcion == "snom") {
        //SABER LA IDENTIFICACION EN EL VECTOR DE INTEGRANTES SEGUN EL INDICE Q
        //VIENE DE LA TABLA
        var _id8 = this.vectorIntegrante[index].identificacion; //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY

        var _indice8 = this.Men1A.findIndex(function (identi) {
          return identi.identificacion === _id8;
        });

        if (_indice8 >= 0) {
          this.Men1A[_indice8].snom = item.snom;
          this.Men1A.splice(_indice8, 1, this.Men1A[_indice8]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice8 = this.De1A5.findIndex(function (identi) {
          return identi.identificacion === _id8;
        });

        if (_indice8 >= 0) {
          this.De1A5[_indice8].snom = item.snom;
          this.De1A5.splice(_indice8, 1, this.De1A5[_indice8]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice8 = this.De6A11.findIndex(function (identi) {
          return identi.identificacion === _id8;
        });

        if (_indice8 >= 0) {
          this.De6A11[_indice8].snom = item.snom;
          this.De6A11.splice(_indice8, 1, this.De6A11[_indice8]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice8 = this.De10A59.findIndex(function (identi) {
          return identi.identificacion === _id8;
        });

        if (_indice8 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De10A59[_indice8].snom = item.snom;
          this.De10A59.splice(_indice8, 1, this.De10A59[_indice8]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice8 = this.ParPost.findIndex(function (identi) {
          return identi.identificacion === _id8;
        });

        if (_indice8 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.ParPost[_indice8].snom = item.snom;
          this.ParPost.splice(_indice8, 1, this.ParPost[_indice8]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice8 = this.De12A17.findIndex(function (identi) {
          return identi.identificacion === _id8;
        });

        if (_indice8 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De12A17[_indice8].snom = item.snom;
          this.De12A17.splice(_indice8, 1, this.De12A17[_indice8]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice8 = this.De18A28.findIndex(function (identi) {
          return identi.identificacion === _id8;
        });

        if (_indice8 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De18A28[_indice8].snom = item.snom;
          this.De18A28.splice(_indice8, 1, this.De18A28[_indice8]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice8 = this.De29A59.findIndex(function (identi) {
          return identi.identificacion === _id8;
        });

        if (_indice8 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De29A59[_indice8].snom = item.snom;
          this.De29A59.splice(_indice8, 1, this.De29A59[_indice8]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice8 = this.De60.findIndex(function (identi) {
          return identi.identificacion === _id8;
        });

        if (_indice8 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De60[_indice8].snom = item.snom;
          this.De60.splice(_indice8, 1, this.De60[_indice8]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice8 = this.Migra.findIndex(function (identi) {
          return identi.identificacion === _id8;
        });

        if (_indice8 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.Migra[_indice8].snom = item.snom;
          this.Migra.splice(_indice8, 1, this.Migra[_indice8]);
        }
      }

      if (opcion == "pape") {
        //SABER LA IDENTIFICACION EN EL VECTOR DE INTEGRANTES SEGUN EL INDICE Q
        //VIENE DE LA TABLA
        var _id9 = this.vectorIntegrante[index].identificacion; //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY

        var _indice9 = this.Men1A.findIndex(function (identi) {
          return identi.identificacion === _id9;
        });

        if (_indice9 >= 0) {
          this.Men1A[_indice9].pape = item.pape;
          this.Men1A.splice(_indice9, 1, this.Men1A[_indice9]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice9 = this.De1A5.findIndex(function (identi) {
          return identi.identificacion === _id9;
        });

        if (_indice9 >= 0) {
          this.De1A5[_indice9].pape = item.pape;
          this.De1A5.splice(_indice9, 1, this.De1A5[_indice9]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice9 = this.De6A11.findIndex(function (identi) {
          return identi.identificacion === _id9;
        });

        if (_indice9 >= 0) {
          this.De6A11[_indice9].pape = item.pape;
          this.De6A11.splice(_indice9, 1, this.De6A11[_indice9]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice9 = this.De10A59.findIndex(function (identi) {
          return identi.identificacion === _id9;
        });

        if (_indice9 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De10A59[_indice9].pape = item.pape;
          this.De10A59.splice(_indice9, 1, this.De10A59[_indice9]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice9 = this.ParPost.findIndex(function (identi) {
          return identi.identificacion === _id9;
        });

        if (_indice9 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.ParPost[_indice9].pape = item.pape;
          this.ParPost.splice(_indice9, 1, this.ParPost[_indice9]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice9 = this.De12A17.findIndex(function (identi) {
          return identi.identificacion === _id9;
        });

        if (_indice9 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De12A17[_indice9].pape = item.pape;
          this.De12A17.splice(_indice9, 1, this.De12A17[_indice9]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice9 = this.De18A28.findIndex(function (identi) {
          return identi.identificacion === _id9;
        });

        if (_indice9 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De18A28[_indice9].pape = item.pape;
          this.De18A28.splice(_indice9, 1, this.De18A28[_indice9]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice9 = this.De29A59.findIndex(function (identi) {
          return identi.identificacion === _id9;
        });

        if (_indice9 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De29A59[_indice9].pape = item.pape;
          this.De29A59.splice(_indice9, 1, this.De29A59[_indice9]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice9 = this.De60.findIndex(function (identi) {
          return identi.identificacion === _id9;
        });

        if (_indice9 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De60[_indice9].pape = item.pape;
          this.De60.splice(_indice9, 1, this.De60[_indice9]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice9 = this.Migra.findIndex(function (identi) {
          return identi.identificacion === _id9;
        });

        if (_indice9 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.Migra[_indice9].pape = item.pape;
          this.Migra.splice(_indice9, 1, this.Migra[_indice9]);
        }
      }

      if (opcion == "sape") {
        //SABER LA IDENTIFICACION EN EL VECTOR DE INTEGRANTES SEGUN EL INDICE Q
        //VIENE DE LA TABLA
        var _id10 = this.vectorIntegrante[index].identificacion; //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY

        var _indice10 = this.Men1A.findIndex(function (identi) {
          return identi.identificacion === _id10;
        });

        if (_indice10 >= 0) {
          this.Men1A[_indice10].sape = item.sape;
          this.Men1A.splice(_indice10, 1, this.Men1A[_indice10]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice10 = this.De1A5.findIndex(function (identi) {
          return identi.identificacion === _id10;
        });

        if (_indice10 >= 0) {
          this.De1A5[_indice10].sape = item.sape;
          this.De1A5.splice(_indice10, 1, this.De1A5[_indice10]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice10 = this.De6A11.findIndex(function (identi) {
          return identi.identificacion === _id10;
        });

        if (_indice10 >= 0) {
          this.De6A11[_indice10].sape = item.sape;
          this.De6A11.splice(_indice10, 1, this.De6A11[_indice10]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice10 = this.De10A59.findIndex(function (identi) {
          return identi.identificacion === _id10;
        });

        if (_indice10 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De10A59[_indice10].sape = item.sape;
          this.De10A59.splice(_indice10, 1, this.De10A59[_indice10]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice10 = this.ParPost.findIndex(function (identi) {
          return identi.identificacion === _id10;
        });

        if (_indice10 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.ParPost[_indice10].sape = item.sape;
          this.ParPost.splice(_indice10, 1, this.ParPost[_indice10]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice10 = this.De12A17.findIndex(function (identi) {
          return identi.identificacion === _id10;
        });

        if (_indice10 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De12A17[_indice10].sape = item.sape;
          this.De12A17.splice(_indice10, 1, this.De12A17[_indice10]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice10 = this.De18A28.findIndex(function (identi) {
          return identi.identificacion === _id10;
        });

        if (_indice10 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De18A28[_indice10].sape = item.sape;
          this.De18A28.splice(_indice10, 1, this.De18A28[_indice10]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice10 = this.De29A59.findIndex(function (identi) {
          return identi.identificacion === _id10;
        });

        if (_indice10 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De29A59[_indice10].sape = item.sape;
          this.De29A59.splice(_indice10, 1, this.De29A59[_indice10]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice10 = this.De60.findIndex(function (identi) {
          return identi.identificacion === _id10;
        });

        if (_indice10 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De60[_indice10].sape = item.sape;
          this.De60.splice(_indice10, 1, this.De60[_indice10]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice10 = this.Migra.findIndex(function (identi) {
          return identi.identificacion === _id10;
        });

        if (_indice10 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.Migra[_indice10].sape = item.sape;
          this.Migra.splice(_indice10, 1, this.Migra[_indice10]);
        }
      }
    },
    AFactores: function AFactores(vector, edad) {
      this.factores.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        edad: edad,
        dialogos: "",
        sancion: "",
        castigo_verbal: "",
        castigo_fisico: "",
        alcohol: "",
        tabaco: "",
        sustancias_psico: "",
        apuestas: "",
        violencia_fisica: "",
        violencia_psico: "",
        violencia_economica: "",
        abuso_sexual: "",
        actividad_fisica: "",
        consumo_frutas: "",
        religiosos: "",
        sociales: "",
        culturales: "",
        recreativos: ""
      });
    }
  }
});

/***/ }),

/***/ "./node_modules/css-loader/index.js?!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=style&index=0&lang=css&":
/*!*************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader??ref--5-1!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--5-2!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=style&index=0&lang=css& ***!
  \*************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n.color-datepicker {\n  background: #f2f2f2;\n  border: 1px solid #ddd;\n  padding: 0em 1em 1em;\n  margin-bottom: 2em;\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/style-loader/index.js!./node_modules/css-loader/index.js?!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=style&index=0&lang=css&":
/*!*****************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/style-loader!./node_modules/css-loader??ref--5-1!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--5-2!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=style&index=0&lang=css& ***!
  \*****************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../../node_modules/css-loader??ref--5-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src??ref--5-2!../../../../node_modules/vue-loader/lib??vue-loader-options!./Ingreso.vue?vue&type=style&index=0&lang=css& */ "./node_modules/css-loader/index.js?!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=style&index=0&lang=css&");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=template&id=45771cc1&":
/*!**********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=template&id=45771cc1& ***!
  \**********************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {}
var staticRenderFns = []



/***/ }),

/***/ "./resources/js/Servicios/barrios_servicios.js":
/*!*****************************************************!*\
  !*** ./resources/js/Servicios/barrios_servicios.js ***!
  \*****************************************************/
/*! exports provided: listarBarrios, guardarBarrios, eliminarBarrios, comboBarrios */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listarBarrios", function() { return listarBarrios; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "guardarBarrios", function() { return guardarBarrios; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eliminarBarrios", function() { return eliminarBarrios; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "comboBarrios", function() { return comboBarrios; });
/* harmony import */ var _http_services__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./http_services */ "./resources/js/Servicios/http_services.js");

function listarBarrios($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/barrios', $data);
}
function guardarBarrios($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/barrios/guardar', $data);
}
function eliminarBarrios($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/barrios/eliminar', $data);
}
function comboBarrios($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/barrios/combo', $data);
}

/***/ }),

/***/ "./resources/js/Servicios/colegios_servicios.js":
/*!******************************************************!*\
  !*** ./resources/js/Servicios/colegios_servicios.js ***!
  \******************************************************/
/*! exports provided: listar, guardar, eliminar, combo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listar", function() { return listar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "guardar", function() { return guardar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eliminar", function() { return eliminar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "combo", function() { return combo; });
/* harmony import */ var _http_services__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./http_services */ "./resources/js/Servicios/http_services.js");

function listar($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/colegios', $data);
}
function guardar($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/colegios/guardar', $data);
}
function eliminar($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/colegios/eliminar', $data);
}
function combo($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/colegios/combo', $data);
}

/***/ }),

/***/ "./resources/js/Vistas/Caracterizacion/Ingreso.vue":
/*!*********************************************************!*\
  !*** ./resources/js/Vistas/Caracterizacion/Ingreso.vue ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Ingreso_vue_vue_type_template_id_45771cc1___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Ingreso.vue?vue&type=template&id=45771cc1& */ "./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=template&id=45771cc1&");
/* harmony import */ var _Ingreso_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Ingreso.vue?vue&type=script&lang=js& */ "./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _Ingreso_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Ingreso.vue?vue&type=style&index=0&lang=css& */ "./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=style&index=0&lang=css&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");






/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__["default"])(
  _Ingreso_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _Ingreso_vue_vue_type_template_id_45771cc1___WEBPACK_IMPORTED_MODULE_0__["render"],
  _Ingreso_vue_vue_type_template_id_45771cc1___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/Vistas/Caracterizacion/Ingreso.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=script&lang=js&":
/*!**********************************************************************************!*\
  !*** ./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=script&lang=js& ***!
  \**********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Ingreso_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./Ingreso.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Ingreso_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=style&index=0&lang=css&":
/*!******************************************************************************************!*\
  !*** ./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=style&index=0&lang=css& ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_style_loader_index_js_node_modules_css_loader_index_js_ref_5_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_2_node_modules_vue_loader_lib_index_js_vue_loader_options_Ingreso_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/style-loader!../../../../node_modules/css-loader??ref--5-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src??ref--5-2!../../../../node_modules/vue-loader/lib??vue-loader-options!./Ingreso.vue?vue&type=style&index=0&lang=css& */ "./node_modules/style-loader/index.js!./node_modules/css-loader/index.js?!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=style&index=0&lang=css&");
/* harmony import */ var _node_modules_style_loader_index_js_node_modules_css_loader_index_js_ref_5_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_2_node_modules_vue_loader_lib_index_js_vue_loader_options_Ingreso_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_index_js_node_modules_css_loader_index_js_ref_5_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_2_node_modules_vue_loader_lib_index_js_vue_loader_options_Ingreso_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_style_loader_index_js_node_modules_css_loader_index_js_ref_5_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_2_node_modules_vue_loader_lib_index_js_vue_loader_options_Ingreso_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_style_loader_index_js_node_modules_css_loader_index_js_ref_5_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_2_node_modules_vue_loader_lib_index_js_vue_loader_options_Ingreso_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_style_loader_index_js_node_modules_css_loader_index_js_ref_5_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_2_node_modules_vue_loader_lib_index_js_vue_loader_options_Ingreso_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),

/***/ "./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=template&id=45771cc1&":
/*!****************************************************************************************!*\
  !*** ./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=template&id=45771cc1& ***!
  \****************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Ingreso_vue_vue_type_template_id_45771cc1___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./Ingreso.vue?vue&type=template&id=45771cc1& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/Vistas/Caracterizacion/Ingreso.vue?vue&type=template&id=45771cc1&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Ingreso_vue_vue_type_template_id_45771cc1___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Ingreso_vue_vue_type_template_id_45771cc1___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ })

}]);