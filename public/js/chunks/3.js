(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[3],{

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/Vistas/Caracterizacion/Editar.vue?vue&type=script&lang=js&":
/*!*****************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/Vistas/Caracterizacion/Editar.vue?vue&type=script&lang=js& ***!
  \*****************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Servicios/caracterizacion_servicios */ "./resources/js/Servicios/caracterizacion_servicios.js");
/* harmony import */ var _Servicios_barrios_servicios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Servicios/barrios_servicios */ "./resources/js/Servicios/barrios_servicios.js");
/* harmony import */ var _Servicios_colegios_servicios__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Servicios/colegios_servicios */ "./resources/js/Servicios/colegios_servicios.js");
/* harmony import */ var _Servicios_ocupaciones_servicios__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Servicios/ocupaciones_servicios */ "./resources/js/Servicios/ocupaciones_servicios.js");
/* harmony import */ var _Servicios_actividad_servicios__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../Servicios/actividad_servicios */ "./resources/js/Servicios/actividad_servicios.js");
/* harmony import */ var vuejs_datepicker__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! vuejs-datepicker */ "./node_modules/vuejs-datepicker/dist/vuejs-datepicker.esm.js");
/* harmony import */ var vuejs_datepicker_dist_locale__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! vuejs-datepicker/dist/locale */ "./node_modules/vuejs-datepicker/dist/locale/index.js");
/* harmony import */ var vuejs_datepicker_dist_locale__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(vuejs_datepicker_dist_locale__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var vue_loading_overlay__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! vue-loading-overlay */ "./node_modules/vue-loading-overlay/dist/vue-loading.min.js");
/* harmony import */ var vue_loading_overlay__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(vue_loading_overlay__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var vue_loading_overlay_dist_vue_loading_css__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! vue-loading-overlay/dist/vue-loading.css */ "./node_modules/vue-loading-overlay/dist/vue-loading.css");
/* harmony import */ var vue_loading_overlay_dist_vue_loading_css__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(vue_loading_overlay_dist_vue_loading_css__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! vuelidate/lib/validators */ "./node_modules/vuelidate/lib/validators/index.js");
/* harmony import */ var vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }








var isPhoneNumber = vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["helpers"].regex("numeric", /^3[0-9]{9}$/);
var alpha = vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["helpers"].regex("alpha", /^[a-zA-Z]*$/);
var alphaNumAndDotValidator = vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["helpers"].regex("alphaNumAndDot", /^[a-z\d.]*$/i);

var entero = function entero(value) {
  return /^[0-9]*$/.test(value);
}; // Import component


 // Import stylesheet



/* harmony default export */ __webpack_exports__["default"] = ({
  components: {
    Datepicker: vuejs_datepicker__WEBPACK_IMPORTED_MODULE_6__["default"],
    Loading: vue_loading_overlay__WEBPACK_IMPORTED_MODULE_8___default.a
  },
  beforeMount: function beforeMount() {
    this.hoy = moment();
    this.IDHOGAR = this.$route.params.IDHOGAR;

    if (this.IDHOGAR == null) {
      this.$router.push("/gestion");
    } else {
      this.nuevo(this.IDHOGAR);
    }
  },
  filters: {
    moneda: function moneda(val) {
      var number = +val.replace(/[^\d.]/g, "");
      return isNaN(number) ? 0 : number;
    },
    moment: function (_moment) {
      function moment(_x) {
        return _moment.apply(this, arguments);
      }

      moment.toString = function () {
        return _moment.toString();
      };

      return moment;
    }(function (date) {
      return moment(date).format("YYYY-MM-DD");
    })
  },
  data: function data() {
    return {
      isLoading: false,
      fullPage: true,
      hoy: "",
      csrf: document.querySelector('meta[name="csrf-token"]').getAttribute("content"),
      dpto_options: [],
      muni_options: {},
      corregi_options: {},
      barrio_options: {},
      parentesco_options: {},
      estado_options: {},
      escolaridad_options: {},
      ocupacion_options: {},
      etnia_options: {},
      admini_options: {},
      clasifi_options: {},
      vereda_options: {},
      grados_option: {},
      morbilidadNacer_options: {},
      morbilidad_options: {},
      metodos_options: {},
      motivos_options: {},
      grupos_options: {},
      enfcro_options: {},
      enfinf_options: {},
      religion_options: {},
      colegio_options: {},
      opciones1: [{
        value: 1,
        texto: "Ninguno"
      }, {
        value: 2,
        texto: "1 Celular"
      }, {
        value: 3,
        texto: "2 Celulares"
      }, {
        value: 4,
        texto: "Tiene 3 Celulares"
      }, {
        value: 5,
        texto: "Tiene 4 o mas Celulares"
      }],
      opciones2: [{
        value: 1,
        texto: "No Tiene"
      }, {
        value: 2,
        texto: "1 Tv"
      }, {
        value: 3,
        texto: "2 Tv"
      }, {
        value: 4,
        texto: "3 o mas tv"
      }],
      opciones3: [{
        value: 1,
        texto: "No tene Vehiculos"
      }, {
        value: 2,
        texto: "1 Vehiculo"
      }, {
        value: 3,
        texto: "2 Vehiculos"
      }, {
        value: 4,
        texto: "3 o mas Vehiculos"
      }],
      opciones4: [{
        value: 1,
        texto: "Sin estudios"
      }, {
        value: 2,
        texto: "Primaria incompleta"
      }, {
        value: 3,
        texto: "Prmaria Completa"
      }, {
        value: 4,
        texto: "Secundaria Incompleta"
      }, {
        value: 5,
        texto: "Secundaria completa"
      }, {
        value: 6,
        texto: "Educación superior incompleta"
      }, {
        value: 7,
        texto: "Educación superior completa"
      }, {
        value: 8,
        texto: "Posgrado"
      }],
      opciones5: [{
        value: 1,
        texto: "Entre $0  y $500.000 pesos"
      }, {
        value: 2,
        texto: "Entre $500.001 Y $1.100.000 pesos"
      }, {
        value: 3,
        texto: "Entre $1.100.001 a $2.069.000"
      }, {
        value: 4,
        texto: "Entre $2.070.000 y $3.269.000"
      }, {
        value: 5,
        texto: "Entre $3.270.000 y $4.780.000"
      }, {
        value: 6,
        texto: "Entre $4,780.001 y $5.150.000"
      }, {
        value: 7,
        texto: "Más de $5.150.000"
      }, {
        value: 8,
        texto: "No aplica"
      }],
      opciones6: [{
        value: 1,
        texto: "Entre $ 0 y $ 980.000"
      }, {
        value: 2,
        texto: "Entre $981.000  y $ 1.890.000"
      }, {
        value: 3,
        texto: "Entre $1.890,001  y $3.305.000"
      }, {
        value: 4,
        texto: "Entre $ 3.305.001  y  $ 5.050.000"
      }, {
        value: 5,
        texto: "Entre $ 5.050.001 y  $ 7.650.000"
      }, {
        value: 6,
        texto: "Entre $ 7.650.001 y $ 10.170.000"
      }, {
        value: 7,
        texto: "Mas de $ 10.170.001"
      }, {
        value: 8,
        texto: "No aplica"
      }],
      opciones7: [{
        value: '1',
        texto: "Vida sexual prematura"
      }, {
        value: '2',
        texto: "Consumo de tabaco"
      }, {
        value: '3',
        texto: "Consumo de SPA"
      }, {
        value: '4',
        texto: "Consumo de alcohol"
      }, {
        value: 'NA',
        texto: "NO APLICA"
      }],
      hogar: {
        id: 0,
        id_dpto: "",
        id_mun: "",
        id_corre: "",
        id_vereda: "",
        id_barrio: "",
        id_zona: "",
        tenencia_vivienda: "",
        numero_hogares: "",
        poblacion_especial: "",
        vias_acceso: "",
        servicios_publicos: "",
        direccion: ""
      },
      caracData: {
        id: 0,
        id_hogar: 0,
        telefono: "",
        puntaje_sisben: "",
        afiliacion_entidad: "",
        otra_eps: "",
        tipo_id: "",
        identificacion: "",
        sexo: "",
        parentesco: "33",
        pnom: "",
        snom: "",
        pape: "",
        sape: "",
        salario: "",
        id_compania: "",
        estado: "",
        estado_civil: "",
        fecha_nacimiento: "",
        tipo_afiliacion: "",
        embarazo: "",
        embarazo_multiple: "",
        discapacidad: "",
        nivel_escolaridad: "",
        ocupacion: "",
        colegio: "",
        grado: "",
        etnia: "",
        clasificacion: "",
        entiende: "",
        pyp: "",
        migrante: "",
        edad: "",
        orientacion: "",
        identidad_genero: "",
        perdida_peso: "",
        programa_icbf: "",
        enfermedad_infecciosa: "",
        enfermedad_cronica: "",
        peso: 0,
        talla: 0
      },
      CA1: {
        id: 0,
        tipo_id: "0",
        identificacion: "",
        sexo: "0",
        parentesco: "0",
        pnom: "",
        snom: "",
        pape: "",
        sape: "",
        estado_civil: "0",
        fecha_nac: "",
        edad: 0,
        puntaje_sisben: "",
        afi_entidad: "0",
        otra_eps: "",
        tipo_afiliacion: "0",
        embarazo: "0",
        embarazo_multiple: "0",
        discapacidad: "0",
        escolaridad: "0",
        ocupacion: "0",
        colegio: "",
        grado: "0",
        entiende: "0",
        migrante: "0",
        pyp: "0",
        etnia: "0",
        clasificacion: "0",
        id_hogar: 0,
        jefe: "0",
        orientacion: "0",
        identidad_genero: "0",
        telefono: "",
        perdida_peso: "0",
        programa_icbf: "0",
        excepciones: "0",
        meses: 0,
        dias: 0,
        enfermedad_infecciosa: "0",
        enfermedad_cronica: "0",
        peso: 0,
        talla: 0
      },
      viviendaData: {
        id: 0,
        id_hogar: 0,
        tipo_vivienda: "",
        tipo_estructura: "",
        otro_tipo_estructura: "",
        numero_cuartos: "",
        personas_por_cuartos: "0",
        material_predominante: "",
        tipo_cubierta: "",
        otro_tipo_cubierta: "",
        actividad_economica: "",
        cual_actividad_economica: "",
        evento_afecta_vivienda: "",
        familias_accion: "",
        promedio_ingresos: "",
        promedio_gastos: "",
        fuente_agua: "",
        energia_electrica: "",
        gas_natural: "",
        acueducto: "",
        alcantarillado: "",
        telefono_fijo: "",
        aseo: "",
        internet_subsidiado: "",
        internet_privado: "",
        cual_fuente: "",
        donde_almacena_agua: "",
        otro_almacena_agua: "",
        ubicacion_tanque: "",
        tipo_tratamiento_agua: "",
        destino_final_basura: "",
        otro_destino_final_basura: "",
        porquerizas: "",
        plagas: "",
        industrias: "",
        malos_olores: "",
        rellenos: "",
        contaminacion_a: "",
        contaminacion_v: "NA",
        rio: "",
        otro_cerca: "",
        cual_cerca: "",
        aereopuertos: "NA",
        avenidas_transitadas: "",
        lotes_abandonados: "",
        servicio_sanitario: "",
        donde_sanitario: "",
        excretas: "",
        otro_depositan_excretas: "",
        cocina: "",
        dormitorio_a: "",
        sala: "",
        dormitorio_n: "NA",
        sanitario: "",
        lavadero: "",
        iluminacion_adecuada: "NA",
        techo_adecuado: "NA",
        ventilacion_adecuada: "NA",
        pisos_adecuado: "NA",
        paredes_adecuadas: "NA",
        gasolina: "",
        plaguicidas: "",
        detergentes: "",
        plaguicidas_insectos: "",
        envases_vacios: "",
        otro_envases_vacios: "",
        elementos_protecion: "",
        otro_elementos_protecion: "",
        metodos_coccion: "",
        otro_metodos_coccion: "",
        lugares_preparan_alimentos: "",
        lugares_almacenan_alimentos: "",
        otro_lugares_almacenan_alimentos: "",
        lava_frutas: "",
        tipo_explotacion: "",
        otro_tipo_explotacion: "",
        flora_afectados: "NA",
        fauna_afectados: "NA",
        suelo_afectados: "NA",
        aire_afectados: "NA",
        agua_afectados: "NA",
        residuos_solidos_genera: "NA",
        aguas_servidas_genera: "NA",
        desechos_cocina_genera: "NA",
        heces_animales_genera: "NA",
        quimicos_genera: "NA",
        otros_genera: "",
        cual_genera: "",
        tipo_combustible: "",
        mantenimiento_red: "NA",
        zona_alto_riesgo: "",
        almacenamiento_residuos: "",
        fuente_contaminacion: "NA",
        aguas_negras: "",
        zonas_verdes: "",
        desplazamientos: "",
        rotacion_cultivo: "",
        emplea_fertilizantes: "",
        suministro_energia_ilegal: "NA",
        quema_cultivo: "",
        mantenimiento_preventivo: "",
        veces_inundaciones: "",
        fachada: "",
        cuantos_baños: "",
        estado_conservacion_baños: "",
        acabados_externos: "",
        estado_conservacion_estructuras: "",
        mobiliario_cocina: "",
        andenes: "",
        residuos_aprovechables: "",
        residuos_organicos: "",
        residuos_no_aprovechables: ""
      },
      estratificacionData: {
        cuenta_internet: "",
        tiene_pc_escritorio: "",
        tiene_pc_portatil: "",
        cuantos_celulares: "",
        tiene_equipo_sonido: "",
        cuantos_tv_color: "",
        cuantos_vehiculos: "",
        nivel_instruccion: "",
        afiliacion_salud_privada: "",
        ingresos_zona_rural: "",
        ingresos_ciudad: "",
        id_jefe: "0"
      },
      animalesData: [],
      estratificacion: [],
      animal: "",
      nombreAnimal: "",
      cuantosAnimal: "",
      vacunadoAnimal: "0",
      mOTE: false,
      mOTC: false,
      mOAE: false,
      mOFA: false,
      mODA: false,
      mOFB: false,
      mOOC: false,
      mOEV: false,
      mOEP: false,
      mOMC: false,
      mOAA: false,
      mODH: false,
      mOES: false,
      mOOG: false,
      mOEPS1: false,
      mOEPS2: false,
      mOCOL1: false,
      mOCOL2: false,
      format: "yyyy-MM-dd",
      lenguaje: vuejs_datepicker_dist_locale__WEBPACK_IMPORTED_MODULE_7__["es"],
      claseAyuda: "form-control",
      datos: [],
      datosJefe: [],
      Men1A: [],
      De1A5: [],
      De6A11: [],
      De10A59: [],
      ParPost: [],
      De12A17: [],
      De18A28: [],
      De29A59: [],
      De60: [],
      EnCro: [],
      EnInf: [],
      Migra: [],
      vectorJefes: [],
      vectorIntegrante: [],
      vectorAyuda: [],
      factores: [],
      afectacion: [],
      GIDEN: false,
      GVIVI: false,
      GCARXCI: false,
      GADOLE: false,
      GADULT: false,
      GMIGRA: false,
      IDHOGAR: 0,
      ocupacionesVector: [],
      txtbusqueda: "",
      ocupacionAuxiliar: "",
      ocupacionAuxiliar2: "",
      opcionOcupaciones: "",
      txtbusquedaAct: "",
      actividadesVector: [],
      actividadesAuxiliar: "",
      SAPU: false,
      CODIGOGENE: "",
      valGIden: true,
      valGVivi: true,
      valGCart: true,
      valGAdole: true,
      valGAdul: true,
      valGMig: true,
      valGActu: true,
      valGEst: true,
      bandeGuaEdiJefe: true,
      indiceEditJefe: null,
      bandeGuaEdiInte: true,
      indiceEditInte: null,
      idEditar: null,
      identificacionEditar: null,
      fechaEditar: null,
      edadEditar: null,
      embarazoEditar: null,
      identificacionJefe: null
    };
  },
  validations: {
    viviendaData: {
      tipo_vivienda: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      tipo_estructura: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      numero_cuartos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"],
        numeric: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["numeric"]
      },
      personas_por_cuartos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"],
        numeric: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["numeric"]
      },
      material_predominante: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      tipo_cubierta: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      // actividad_economica: { required },
      evento_afecta_vivienda: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      familias_accion: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      promedio_ingresos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      promedio_gastos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      fuente_agua: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      energia_electrica: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      gas_natural: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      acueducto: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      alcantarillado: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      telefono_fijo: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      aseo: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      internet_subsidiado: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      internet_privado: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      donde_almacena_agua: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      ubicacion_tanque: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      tipo_tratamiento_agua: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      destino_final_basura: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      porquerizas: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      plagas: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      industrias: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      malos_olores: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      rellenos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      contaminacion_a: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      rio: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      otro_cerca: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      avenidas_transitadas: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      lotes_abandonados: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      servicio_sanitario: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      donde_sanitario: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      excretas: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      cocina: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      dormitorio_a: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      sala: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      sanitario: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      lavadero: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      // iluminacion_adecuada: { required },
      // techo_adecuado: { required },
      // ventilacion_adecuada: { required },
      // pisos_adecuado: { required },
      // paredes_adecuadas: { required },
      gasolina: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      plaguicidas: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      detergentes: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      plaguicidas_insectos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      envases_vacios: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      elementos_protecion: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      metodos_coccion: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      lugares_preparan_alimentos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      lugares_almacenan_alimentos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      lava_frutas: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      tipo_explotacion: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      otros_genera: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      tipo_combustible: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      zona_alto_riesgo: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      almacenamiento_residuos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      aguas_negras: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      zonas_verdes: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      desplazamientos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      rotacion_cultivo: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      emplea_fertilizantes: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      quema_cultivo: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      mantenimiento_preventivo: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      veces_inundaciones: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      fachada: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      cuantos_baños: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      estado_conservacion_baños: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      acabados_externos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      estado_conservacion_estructuras: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      mobiliario_cocina: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      andenes: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      residuos_aprovechables: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      residuos_organicos: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      },
      residuos_no_aprovechables: {
        required: vuelidate_lib_validators__WEBPACK_IMPORTED_MODULE_10__["required"]
      }
    }
  },
  computed: {
    calEdad: function calEdad() {
      var nacimiento = moment(this.CA1.fecha_nac);
      var hoy = moment();
      var edad = 0;

      if (nacimiento < hoy) {
        edad = hoy.diff(nacimiento, "years"); //Calculamos la diferencia en años
      }

      return edad;
    },
    calEdad2: function calEdad2() {
      var nacimiento = moment(this.caracData.fecha_nacimiento);
      var hoy = moment();
      var edad = 0;

      if (nacimiento < hoy) {
        edad = hoy.diff(nacimiento, "years"); //Calculamos la diferencia en años
      }

      this.caracData.edad = edad;
      return edad;
    },
    wrongNumber: function wrongNumber() {
      return this.isNumeric(this.number) === false;
    },
    inputDisabled: function inputDisabled() {
      if (this.CA1.sexo === "MASCULINO") {
        this.CA1.embarazo = "NOAPLICA";
        this.CA1.embarazo_multiple = "NOAPLICA";
      } else {
        // this.CA1.embarazo = "0";
        // this.CA1.embarazo_multiple = "0";
        if (this.CA1.embarazo === "NO") {
          this.CA1.embarazo_multiple = "NO";
        } else {
          // this.caracData.embarazo = "0";
          this.CA1.embarazo_multiple = "0";
        }
      }

      return this.CA1.sexo === "MASCULINO";
    },
    inputDisabled2: function inputDisabled2() {
      if (this.caracData.sexo === "MASCULINO") {
        this.caracData.embarazo = "NOAPLICA";
        this.caracData.embarazo_multiple = "NOAPLICA";
      } else {
        // this.caracData.embarazo = "";
        // this.caracData.embarazo_multiple = "";
        if (this.caracData.embarazo === "NO") {
          this.caracData.embarazo_multiple = "NO";
        } else {
          // this.caracData.embarazo = "0";
          this.caracData.embarazo_multiple = "";
        }
      }

      return this.caracData.sexo === "MASCULINO";
    },
    soloNum: function soloNum() {// alert(this.Men1A.peso_nacer);
      // return this.Men1A.peso_nacer.replace( /[^\d]/g, '' ).trim();
    },
    calHoy: function calHoy() {
      var hoy = moment();
      return hoy;
    },
    spinGIden: function spinGIden() {
      if (this.valGIden) {
        return {};
      } else {
        return ["kt-spinner", "kt-spinner--right", "kt-spinner--sm", "kt-spinner--light"];
      }
    },
    spinGVivi: function spinGVivi() {
      if (this.valGVivi) {
        return {};
      } else {
        return ["kt-spinner", "kt-spinner--right", "kt-spinner--sm", "kt-spinner--light"];
      }
    },
    spinGCart: function spinGCart() {
      if (this.valGCart) {
        return {};
      } else {
        return ["kt-spinner", "kt-spinner--right", "kt-spinner--sm", "kt-spinner--light"];
      }
    },
    spinGAdole: function spinGAdole() {
      if (this.valGAdole) {
        return {};
      } else {
        return ["kt-spinner", "kt-spinner--right", "kt-spinner--sm", "kt-spinner--light"];
      }
    },
    spinGAdul: function spinGAdul() {
      if (this.valGAdul) {
        return {};
      } else {
        return ["kt-spinner", "kt-spinner--right", "kt-spinner--sm", "kt-spinner--light"];
      }
    },
    spinGMig: function spinGMig() {
      if (this.valGMig) {
        return {};
      } else {
        return ["kt-spinner", "kt-spinner--right", "kt-spinner--sm", "kt-spinner--light"];
      }
    },
    spinGActu: function spinGActu() {
      if (this.valGActu) {
        return {};
      } else {
        return ["kt-spinner", "kt-spinner--right", "kt-spinner--sm", "kt-spinner--light"];
      }
    }
  },
  methods: {
    onCancel: function onCancel() {// this.isLoading = true;
      // // simulate AJAX
      // setTimeout(() => {
      //   this.isLoading = false
      // },5000)
    },
    nuevo: function () {
      var _nuevo = _asyncToGenerator(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(id_hogar) {
        var _this = this;

        var parametros;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                parametros = {
                  _token: this.csrf,
                  id_hogar: id_hogar
                };
                this.isLoading = true;
                _context.prev = 2;
                _context.next = 5;
                return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["editarCaracterizacion"](parametros).then(function (respuesta) {
                  _this.dpto_options = respuesta.data.arrayDpto;
                  _this.muni_options = respuesta.data.arrayMuni;
                  _this.corregi_options = respuesta.data.arrayCorregi;
                  _this.vereda_options = respuesta.data.arrayVeredas;
                  _this.parentesco_options = respuesta.data.arrayParentesco;
                  _this.estado_options = respuesta.data.arrayEstado;
                  _this.escolaridad_options = respuesta.data.arrayEscolaridad;
                  _this.ocupacion_options = respuesta.data.arrayOcupacion;
                  _this.etnia_options = respuesta.data.arrayEtnia;
                  _this.admini_options = respuesta.data.arrayAdmini;
                  _this.clasifi_options = respuesta.data.arrayCLasifi;
                  _this.grados_option = respuesta.data.arrayGrados;
                  _this.morbilidadNacer_options = respuesta.data.arrayMorbilidadNacer;
                  _this.morbilidad_options = respuesta.data.arrayMorbilidad;
                  _this.metodos_options = respuesta.data.arrayMetodos;
                  _this.motivos_options = respuesta.data.arrayMotivos;
                  _this.grupos_options = respuesta.data.arrayGrupos;
                  _this.enfcro_options = respuesta.data.arrayEnfCro;
                  _this.enfinf_options = respuesta.data.arrayEnfInf;
                  _this.religion_options = respuesta.data.arrayReligion;
                  _this.CODIGOGENE = respuesta.data.codigo;
                  _this.IDHOGAR = respuesta.data.hogar.id;
                  _this.hogar.id = respuesta.data.hogar.id;
                  _this.hogar.id_dpto = respuesta.data.hogar.id_dpto;
                  _this.hogar.id_mun = respuesta.data.hogar.id_mun.padStart(3, 0);

                  _this.cambiarCombo("muni");

                  _this.hogar.id_corre = "" + respuesta.data.hogar.id_corre;

                  if (_this.hogar.id_corre !== "0") {
                    _this.cambiarCombo("corregi");
                  }

                  _this.hogar.id_vereda = "" + respuesta.data.hogar.id_vereda;
                  _this.hogar.id_barrio = "" + respuesta.data.hogar.id_barrio;
                  _this.hogar.id_zona = "" + respuesta.data.hogar.id_zona;
                  _this.hogar.tenencia_vivienda = respuesta.data.hogar.tenencia_vivienda;
                  _this.hogar.numero_hogares = "" + respuesta.data.hogar.numero_hogares;
                  _this.hogar.poblacion_especial = respuesta.data.hogar.poblacion_especial;
                  _this.hogar.vias_acceso = respuesta.data.hogar.vias_acceso;
                  _this.hogar.servicios_publicos = respuesta.data.hogar.servicios_publicos; // GESTION DE LAS VARIABLES DEL HOGAR

                  _this.hogar.direccion = respuesta.data.hogar.direccion;
                  _this.datosJefe = respuesta.data.jefes;
                  _this.datos = respuesta.data.integrantes;
                  _this.factores = respuesta.data.factores;
                  _this.afectacion = respuesta.data.afectacion;

                  var _loop = function _loop(i) {
                    var indice = _this.datosJefe.findIndex(function (identi) {
                      return identi.identificacion === _this.datosJefe[i].identificacion;
                    });

                    _this.vectorJefes.push({
                      index: indice,
                      identificacion: _this.datosJefe[i].identificacion
                    });
                  };

                  for (var i = 0; i < _this.datosJefe.length; i++) {
                    _loop(i);
                  }

                  var _loop2 = function _loop2(_i) {
                    var indice = _this.datos.findIndex(function (identi) {
                      return identi.identificacion === _this.datos[_i].identificacion;
                    });

                    _this.vectorIntegrante.push({
                      index: indice,
                      identificacion: _this.datos[_i].identificacion
                    });
                  };

                  for (var _i = 0; _i < _this.datos.length; _i++) {
                    _loop2(_i);
                  } // GESTION DE LAS VARIABLES DEL HOGAR


                  _this.viviendaData.id = respuesta.data.vivienda.id;
                  _this.viviendaData.id_hogar = respuesta.data.vivienda.id_hogar;
                  _this.viviendaData.tipo_vivienda = respuesta.data.vivienda.tipo_vivienda;
                  _this.viviendaData.tipo_estructura = respuesta.data.vivienda.tipo_estructura;
                  _this.viviendaData.otro_tipo_estructura = respuesta.data.vivienda.otro_tipo_estructura;
                  _this.viviendaData.numero_cuartos = respuesta.data.vivienda.numero_cuartos;
                  _this.viviendaData.personas_por_cuartos = respuesta.data.vivienda.personas_por_cuartos;
                  _this.viviendaData.material_predominante = respuesta.data.vivienda.material_predominante;
                  _this.viviendaData.tipo_cubierta = respuesta.data.vivienda.tipo_cubierta;
                  _this.viviendaData.otro_tipo_cubierta = respuesta.data.vivienda.otro_tipo_cubierta;
                  _this.viviendaData.actividad_economica = respuesta.data.vivienda.actividad_economica;
                  _this.actividadesAuxiliar = respuesta.data.vivienda.actividadesAuxiliar;
                  _this.viviendaData.cual_actividad_economica = respuesta.data.vivienda.cual_actividad_economica;
                  _this.viviendaData.evento_afecta_vivienda = respuesta.data.vivienda.evento_afecta_vivienda;
                  _this.viviendaData.familias_accion = respuesta.data.vivienda.familias_accion;
                  _this.viviendaData.promedio_ingresos = respuesta.data.vivienda.promedio_ingresos;
                  _this.viviendaData.promedio_gastos = respuesta.data.vivienda.promedio_gastos;
                  _this.viviendaData.fuente_agua = respuesta.data.vivienda.fuente_agua;
                  _this.viviendaData.energia_electrica = respuesta.data.vivienda.energia_electrica;
                  _this.viviendaData.gas_natural = respuesta.data.vivienda.gas_natural;
                  _this.viviendaData.acueducto = respuesta.data.vivienda.acueducto;
                  _this.viviendaData.alcantarillado = respuesta.data.vivienda.alcantarillado;
                  _this.viviendaData.telefono_fijo = respuesta.data.vivienda.telefono_fijo;
                  _this.viviendaData.aseo = respuesta.data.vivienda.aseo;
                  _this.viviendaData.internet_subsidiado = respuesta.data.vivienda.internet_subsidiado;
                  _this.viviendaData.internet_privado = respuesta.data.vivienda.internet_privado;
                  _this.viviendaData.cual_fuente = respuesta.data.vivienda.cual_fuente;
                  _this.viviendaData.donde_almacena_agua = respuesta.data.vivienda.donde_almacena_agua;
                  _this.viviendaData.otro_almacena_agua = respuesta.data.vivienda.otro_almacena_agua;
                  _this.viviendaData.ubicacion_tanque = respuesta.data.vivienda.ubicacion_tanque;
                  _this.viviendaData.tipo_tratamiento_agua = respuesta.data.vivienda.tipo_tratamiento_agua;
                  _this.viviendaData.destino_final_basura = respuesta.data.vivienda.destino_final_basura;
                  _this.viviendaData.otro_destino_final_basura = respuesta.data.vivienda.otro_destino_final_basura;
                  _this.viviendaData.porquerizas = respuesta.data.vivienda.porquerizas;
                  _this.viviendaData.plagas = respuesta.data.vivienda.plagas;
                  _this.viviendaData.industrias = respuesta.data.vivienda.industrias;
                  _this.viviendaData.malos_olores = respuesta.data.vivienda.malos_olores;
                  _this.viviendaData.rellenos = respuesta.data.vivienda.rellenos;
                  _this.viviendaData.contaminacion_a = respuesta.data.vivienda.contaminacion_a;
                  _this.viviendaData.contaminacion_v = respuesta.data.vivienda.contaminacion_v;
                  _this.viviendaData.rio = respuesta.data.vivienda.rio;
                  _this.viviendaData.otro_cerca = respuesta.data.vivienda.otro_cerca;
                  _this.viviendaData.cual_cerca = respuesta.data.vivienda.cual_cerca;
                  _this.viviendaData.aereopuertos = respuesta.data.vivienda.aereopuertos;
                  _this.viviendaData.avenidas_transitadas = respuesta.data.vivienda.avenidas_transitadas;
                  _this.viviendaData.lotes_abandonados = respuesta.data.vivienda.lotes_abandonados;
                  _this.viviendaData.servicio_sanitario = respuesta.data.vivienda.servicio_sanitario;
                  _this.viviendaData.donde_sanitario = respuesta.data.vivienda.donde_sanitario;
                  _this.viviendaData.excretas = respuesta.data.vivienda.excretas;
                  _this.viviendaData.otro_depositan_excretas = respuesta.data.vivienda.otro_depositan_excretas;
                  _this.viviendaData.cocina = respuesta.data.vivienda.cocina;
                  _this.viviendaData.dormitorio_a = respuesta.data.vivienda.dormitorio_a;
                  _this.viviendaData.sala = respuesta.data.vivienda.sala;
                  _this.viviendaData.dormitorio_n = respuesta.data.vivienda.dormitorio_n;
                  _this.viviendaData.sanitario = respuesta.data.vivienda.sanitario;
                  _this.viviendaData.lavadero = respuesta.data.vivienda.lavadero; // this.viviendaData.iluminacion_adecuada = respuesta.data.vivienda.iluminacion_adecuada;
                  // this.viviendaData.techo_adecuado = respuesta.data.vivienda.techo_adecuado;
                  // this.viviendaData.ventilacion_adecuada = respuesta.data.vivienda.ventilacion_adecuada;
                  // this.viviendaData.pisos_adecuado = respuesta.data.vivienda.pisos_adecuado;
                  // this.viviendaData.paredes_adecuadas = respuesta.data.vivienda.paredes_adecuadas;

                  _this.viviendaData.gasolina = respuesta.data.vivienda.gasolina;
                  _this.viviendaData.plaguicidas = respuesta.data.vivienda.plaguicidas;
                  _this.viviendaData.detergentes = respuesta.data.vivienda.detergentes;
                  _this.viviendaData.plaguicidas_insectos = respuesta.data.vivienda.plaguicidas_insectos;
                  _this.viviendaData.envases_vacios = respuesta.data.vivienda.envases_vacios;
                  _this.viviendaData.otro_envases_vacios = respuesta.data.vivienda.otro_envases_vacios;
                  _this.viviendaData.elementos_protecion = respuesta.data.vivienda.elementos_protecion;
                  _this.viviendaData.otro_elementos_protecion = respuesta.data.vivienda.otro_elementos_protecion;
                  _this.viviendaData.metodos_coccion = respuesta.data.vivienda.metodos_coccion;
                  _this.viviendaData.otro_metodos_coccion = respuesta.data.vivienda.otro_metodos_coccion;
                  _this.viviendaData.lugares_preparan_alimentos = respuesta.data.vivienda.lugares_preparan_alimentos;
                  _this.viviendaData.lugares_almacenan_alimentos = respuesta.data.vivienda.lugares_almacenan_alimentos;
                  _this.viviendaData.otro_lugares_almacenan_alimentos = respuesta.data.vivienda.otro_lugares_almacenan_alimentos;
                  _this.viviendaData.lava_frutas = respuesta.data.vivienda.lava_frutas;
                  _this.viviendaData.tipo_explotacion = respuesta.data.vivienda.tipo_explotacion;
                  _this.viviendaData.otro_tipo_explotacion = respuesta.data.vivienda.otro_tipo_explotacion;
                  _this.viviendaData.flora_afectados = respuesta.data.vivienda.flora_afectados;
                  _this.viviendaData.fauna_afectados = respuesta.data.vivienda.fauna_afectados;
                  _this.viviendaData.suelo_afectados = respuesta.data.vivienda.suelo_afectados;
                  _this.viviendaData.aire_afectados = respuesta.data.vivienda.aire_afectados;
                  _this.viviendaData.agua_afectados = respuesta.data.vivienda.agua_afectados;
                  _this.viviendaData.residuos_solidos_genera = respuesta.data.vivienda.residuos_solidos_genera;
                  _this.viviendaData.aguas_servidas_genera = respuesta.data.vivienda.aguas_servidas_genera;
                  _this.viviendaData.desechos_cocina_genera = respuesta.data.vivienda.desechos_cocina_genera;
                  _this.viviendaData.heces_animales_genera = respuesta.data.vivienda.heces_animales_genera;
                  _this.viviendaData.quimicos_genera = respuesta.data.vivienda.quimicos_genera;
                  _this.viviendaData.otros_genera = respuesta.data.vivienda.otros_genera;
                  _this.viviendaData.cual_genera = respuesta.data.vivienda.cual_genera;
                  _this.viviendaData.tipo_combustible = respuesta.data.vivienda.tipo_combustible;
                  _this.viviendaData.mantenimiento_red = respuesta.data.vivienda.mantenimiento_red;
                  _this.viviendaData.zona_alto_riesgo = respuesta.data.vivienda.zona_alto_riesgo;
                  _this.viviendaData.almacenamiento_residuos = respuesta.data.vivienda.almacenamiento_residuos;
                  _this.viviendaData.fuente_contaminacion = respuesta.data.vivienda.fuente_contaminacion;
                  _this.viviendaData.aguas_negras = respuesta.data.vivienda.aguas_negras;
                  _this.viviendaData.zonas_verdes = respuesta.data.vivienda.zonas_verdes;
                  _this.viviendaData.desplazamientos = respuesta.data.vivienda.desplazamientos;
                  _this.viviendaData.rotacion_cultivo = respuesta.data.vivienda.rotacion_cultivo;
                  _this.viviendaData.emplea_fertilizantes = respuesta.data.vivienda.emplea_fertilizantes;
                  _this.viviendaData.suministro_energia_ilegal = respuesta.data.vivienda.suministro_energia_ilegal;
                  _this.viviendaData.quema_cultivo = respuesta.data.vivienda.quema_cultivo;
                  _this.viviendaData.mantenimiento_preventivo = respuesta.data.vivienda.mantenimiento_preventivo;
                  _this.viviendaData.veces_inundaciones = respuesta.data.vivienda.veces_inundaciones;
                  _this.viviendaData.fachada = respuesta.data.vivienda.fachada;
                  _this.viviendaData.cuantos_baños = respuesta.data.vivienda.cuantos_baños;
                  _this.viviendaData.estado_conservacion_baños = respuesta.data.vivienda.estado_conservacion_baños;
                  _this.viviendaData.acabados_externos = respuesta.data.vivienda.acabados_externos;
                  _this.viviendaData.estado_conservacion_estructuras = respuesta.data.vivienda.estado_conservacion_estructuras;
                  _this.viviendaData.mobiliario_cocina = respuesta.data.vivienda.mobiliario_cocina;
                  _this.viviendaData.andenes = respuesta.data.vivienda.andenes;
                  _this.viviendaData.residuos_aprovechables = respuesta.data.vivienda.residuos_aprovechables;
                  _this.viviendaData.residuos_organicos = respuesta.data.vivienda.residuos_organicos;
                  _this.viviendaData.residuos_no_aprovechables = respuesta.data.vivienda.residuos_no_aprovechables;
                  _this.animalesData = respuesta.data.animales;
                  _this.estratificacion = respuesta.data.estratificacion; // GESTION DE LAS VARIABLES DE LA VIVIENDA
                  // GESTION DE LAS VARIABLES DE CART X CICLO

                  _this.Men1A = respuesta.data.Men1A;
                  _this.De1A5 = respuesta.data.De1A5;
                  _this.De6A11 = respuesta.data.De6A11;
                  _this.De10A59 = respuesta.data.De10A59;
                  _this.ParPost = respuesta.data.ParPost; // GESTION DE LAS VARIABLES DE CART X CICLO
                  // GESTION DE LAS VARIABLES DE ADOLESCENTES

                  _this.De12A17 = respuesta.data.De12A17;
                  _this.De18A28 = respuesta.data.De18A28;
                  _this.De29A59 = respuesta.data.De29A59; // GESTION DE LAS VARIABLES DE ADOLESCENTES
                  // GESTION DE LAS VARIABLES DE ADULTO MAYOR

                  _this.De60 = respuesta.data.De60;
                  _this.EnCro = respuesta.data.EnCro;
                  _this.EnInf = respuesta.data.EnInf; // GESTION DE LAS VARIABLES DE ADULTO MAYOR
                  // GESTION DE LAS VARIABLES DE MIGRANTES

                  _this.Migra = respuesta.data.Migra; // GESTION DE LAS VARIABLES DE MIGRANTES

                  _this.isLoading = false;
                });

              case 5:
                _context.next = 16;
                break;

              case 7:
                _context.prev = 7;
                _context.t0 = _context["catch"](2);
                _context.t1 = _context.t0.response.status;
                _context.next = _context.t1 === 422 ? 12 : 14;
                break;

              case 12:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context.abrupt("break", 16);

              case 14:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context.abrupt("break", 16);

              case 16:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[2, 7]]);
      }));

      function nuevo(_x2) {
        return _nuevo.apply(this, arguments);
      }

      return nuevo;
    }(),
    Actualizar: function Actualizar() {
      var _this2 = this;

      return _asyncToGenerator(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2() {
        var id, opcion, parametros;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                id = 0;
                opcion = "";

                if (_this2.hogar.id_corre != "") {
                  opcion = "CORRE";
                  id = _this2.hogar.id_corre;
                } else {
                  opcion = "MUN";
                  id = _this2.hogar.id_mun;
                }

                parametros = {
                  _token: _this2.csrf,
                  id: id,
                  opcion: opcion
                };
                _this2.valGActu = false;
                _context2.prev = 5;
                _context2.next = 8;
                return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["actualizar"](parametros).then(function (respuesta) {
                  _this2.corregi_options = respuesta.data.arrayCorregi;
                  _this2.vereda_options = respuesta.data.arrayVeredas;
                  _this2.parentesco_options = respuesta.data.arrayParentesco;
                  _this2.estado_options = respuesta.data.arrayEstado;
                  _this2.escolaridad_options = respuesta.data.arrayEscolaridad;
                  _this2.ocupacion_options = respuesta.data.arrayOcupacion;
                  _this2.etnia_options = respuesta.data.arrayEtnia;
                  _this2.admini_options = respuesta.data.arrayAdmini;
                  _this2.clasifi_options = respuesta.data.arrayCLasifi;
                  _this2.morbilidadNacer_options = respuesta.data.arrayMorbilidadNacer;
                  _this2.morbilidad_options = respuesta.data.arrayMorbilidad;
                  _this2.metodos_options = respuesta.data.arrayMetodos;
                  _this2.motivos_options = respuesta.data.arrayMotivos;
                  _this2.grupos_options = respuesta.data.arrayGrupos;
                  _this2.enfcro_options = respuesta.data.arrayEnfCro;
                  _this2.enfinf_options = respuesta.data.arrayEnfInf;
                  _this2.religion_options = respuesta.data.arrayReligion;
                  _this2.colegio_options = respuesta.data.arrayColegios;
                  _this2.barrio_options = respuesta.data.arrayBarrios;
                  _this2.valGActu = true;
                });

              case 8:
                _context2.next = 19;
                break;

              case 10:
                _context2.prev = 10;
                _context2.t0 = _context2["catch"](5);
                _context2.t1 = _context2.t0.response.status;
                _context2.next = _context2.t1 === 422 ? 15 : 17;
                break;

              case 15:
                _this2.$swal("Error...!", "Ocurrio un error!", "error");

                return _context2.abrupt("break", 19);

              case 17:
                _this2.$swal("Error...!", "Ocurrio un error!", "error");

                return _context2.abrupt("break", 19);

              case 19:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, null, [[5, 10]]);
      }))();
    },
    cambiarTab1: function cambiarTab1(opcion, actual) {
      var _this3 = this;

      return _asyncToGenerator(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3() {
        var bandera, resul, _resul, _resul2, _resul3, parametros, isInvalid, _parametros, auxi, _resul4, _resul5, _resul6, _resul7, _resul8, _parametros2, _auxi, _resul9, _resul10, _resul11, _parametros3, _auxi2, _resul12, _resul13, _resul14, _parametros4, _auxi3, _resul15, _parametros5;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                bandera = false;

                if (!(actual === "tabIdentificacion")) {
                  _context3.next = 93;
                  break;
                }

                if (!(_this3.GIDEN === false)) {
                  _context3.next = 92;
                  break;
                }

                if (!(_this3.hogar.id_dpto === "")) {
                  _context3.next = 7;
                  break;
                }

                _this3.$refs.id_dpto.focus();

                _this3.$swal("Error...!", "Por favor seleccione el departamento!", "error");

                return _context3.abrupt("return");

              case 7:
                if (!(_this3.hogar.id_mun === "")) {
                  _context3.next = 11;
                  break;
                }

                _this3.$refs.id_mun.focus();

                _this3.$swal("Error...!", "Por favor seleccione el municipio!", "error");

                return _context3.abrupt("return");

              case 11:
                if (!(_this3.hogar.tenencia_vivienda === "")) {
                  _context3.next = 15;
                  break;
                }

                _this3.$refs.tenencia_vivienda.focus();

                _this3.$swal("Error...!", "Por favor seleccione la tenencia de vivienda!", "error");

                return _context3.abrupt("return");

              case 15:
                if (!(_this3.allLetter(_this3.hogar.numero_hogares) === false)) {
                  _context3.next = 20;
                  break;
                }

                _this3.$refs.numero_hogares.focus();

                _this3.hogar.numero_hogares = "";

                _this3.$swal("Error...!", "Por favor digite solo numero en el numero de hogares!", "error");

                return _context3.abrupt("return");

              case 20:
                if (!(_this3.hogar.numero_hogares === "")) {
                  _context3.next = 24;
                  break;
                }

                _this3.$refs.numero_hogares.focus();

                _this3.$swal("Error...!", "Por favor digite el numero de hogares!", "error");

                return _context3.abrupt("return");

              case 24:
                if (!(_this3.hogar.poblacion_especial === "")) {
                  _context3.next = 28;
                  break;
                }

                _this3.$refs.poblacion_especial.focus();

                _this3.$swal("Error...!", "Por favor seleccione la población especial!", "error");

                return _context3.abrupt("return");

              case 28:
                if (!(_this3.hogar.vias_acceso === "")) {
                  _context3.next = 32;
                  break;
                }

                _this3.$refs.vias_acceso.focus();

                _this3.$swal("Error...!", "Por favor seleccione si la comunidad presenta vías de acceso!", "error");

                return _context3.abrupt("return");

              case 32:
                if (!(_this3.hogar.servicios_publicos === "")) {
                  _context3.next = 36;
                  break;
                }

                _this3.$refs.servicios_publicos.focus();

                _this3.$swal("Error...!", "Por favor seleccione si presenta acceso fácil a los servicios públicos!", "error");

                return _context3.abrupt("return");

              case 36:
                if (!(_this3.hogar.direccion === "")) {
                  _context3.next = 40;
                  break;
                }

                _this3.$refs.direccion.focus();

                _this3.$swal("Error...!", "Por favor digite la dirección!", "error");

                return _context3.abrupt("return");

              case 40:
                if (!(_this3.datosJefe.length <= 0)) {
                  _context3.next = 45;
                  break;
                }

                _this3.$swal("Error...!", "Por favor agregue por lo menos un jefe de hogar", "error");

                return _context3.abrupt("return");

              case 45:
                resul = _this3.valJef1();

                if (!resul) {
                  _context3.next = 50;
                  break;
                }

                bandera = true;
                _context3.next = 51;
                break;

              case 50:
                return _context3.abrupt("return", false);

              case 51:
                if (!(_this3.datos.length > 0)) {
                  _context3.next = 58;
                  break;
                }

                _resul = _this3.valInt1();

                if (!_resul) {
                  _context3.next = 57;
                  break;
                }

                bandera = true;
                _context3.next = 58;
                break;

              case 57:
                return _context3.abrupt("return", false);

              case 58:
                if (!(_this3.factores.length > 0)) {
                  _context3.next = 65;
                  break;
                }

                _resul2 = _this3.valFactores();

                if (!_resul2) {
                  _context3.next = 64;
                  break;
                }

                bandera = true;
                _context3.next = 65;
                break;

              case 64:
                return _context3.abrupt("return", false);

              case 65:
                if (!(_this3.afectacion.length > 0)) {
                  _context3.next = 72;
                  break;
                }

                _resul3 = _this3.valAfectacion();

                if (!_resul3) {
                  _context3.next = 71;
                  break;
                }

                bandera = true;
                _context3.next = 72;
                break;

              case 71:
                return _context3.abrupt("return", false);

              case 72:
                //VALIDAR LA TABLA AFECTACION            
                //GUARDAR DATOS
                _this3.valGIden = false;
                parametros = {
                  _token: _this3.csrf,
                  hogar: _this3.hogar,
                  caracterizacion: _this3.datosJefe,
                  integrantes: _this3.datos,
                  factores: _this3.factores,
                  CODIGOGENE: _this3.CODIGOGENE,
                  afectacion: _this3.afectacion,
                  opcion: "MODIFICAR",
                  opc: "GUAINDEN",
                  id_hogar: _this3.IDHOGAR
                };
                _context3.prev = 74;
                _context3.next = 77;
                return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["guardar"](parametros).then(function (respuesta) {
                  if (respuesta.data.OPC == "SI") {
                    _this3.GIDEN = true;
                    _this3.IDHOGAR = respuesta.data.IDHOGAR;
                    _this3.valGIden = true;
                  }
                })["catch"](function (error) {
                  _this3.errorDevuelto = error.response.data.errors;
                  _this3.entrarPorError = true;

                  _this3.$swal("Error...!", "No se pudo guardar los datos de la pestaña identificación", "error");

                  return;
                });

              case 77:
                _context3.next = 90;
                break;

              case 79:
                _context3.prev = 79;
                _context3.t0 = _context3["catch"](74);
                _context3.t1 = _context3.t0.response.status;
                _context3.next = _context3.t1 === 419 ? 84 : _context3.t1 === 422 ? 86 : 88;
                break;

              case 84:
                _this3.$swal("Error...!", "Ocurrio un error!", "error");

                return _context3.abrupt("break", 90);

              case 86:
                _this3.$swal("Error...!", "Ocurrio un error!", "error");

                return _context3.abrupt("break", 90);

              case 88:
                _this3.$swal("Error...!", "Ocurrio un error!", "error");

                return _context3.abrupt("break", 90);

              case 90:
                _context3.next = 93;
                break;

              case 92:
                bandera = true;

              case 93:
                if (!(actual === "tabVivienda")) {
                  _context3.next = 130;
                  break;
                }

                bandera = true;

                if (!(_this3.GIDEN === false)) {
                  _context3.next = 98;
                  break;
                }

                _this3.$swal("Error...!", "Por Favor Complete Los Campos Obligatorios de la Pestaña Hogar", "error");

                return _context3.abrupt("return", false);

              case 98:
                _this3.$v.$touch();

                isInvalid = _this3.$v.$invalid;

                if (!isInvalid) {
                  _context3.next = 105;
                  break;
                }

                _this3.$swal("Error...!", "Por Favor Complete Los Campos Obligatorios de la Pestaña Vivienda", "error");

                return _context3.abrupt("return", false);

              case 105:
                if (!(_this3.GVIVI === false && _this3.GIDEN === true && _this3.IDHOGAR !== 0)) {
                  _context3.next = 129;
                  break;
                }

                if (!(_this3.estratificacion.length <= 0)) {
                  _context3.next = 109;
                  break;
                }

                _this3.$swal("Error...!", "Por favor agregue por lo menos una estratificación", "error");

                return _context3.abrupt("return");

              case 109:
                //GUARDAR DATOS
                _this3.valGVivi = false;
                _parametros = {
                  _token: _this3.csrf,
                  vivienda: _this3.viviendaData,
                  estratificacion: _this3.estratificacion,
                  Animales: _this3.animalesData,
                  opcion: "MODIFICAR",
                  opc: "GUAVIVI",
                  IDHOGAR: _this3.IDHOGAR
                };
                _context3.prev = 111;
                _context3.next = 114;
                return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["guardar"](_parametros).then(function (respuesta) {
                  if (respuesta.data.OPC == "SI") {
                    _this3.GVIVI = true;
                    bandera = true;
                    _this3.valGVivi = true;
                  }
                })["catch"](function (error) {
                  _this3.errorDevuelto = error.response.data.errors;
                  _this3.entrarPorError = true;

                  _this3.$swal("Error...!", "No se pudo guardar los datos de la pestaña vivienda", "error");

                  return;
                });

              case 114:
                _context3.next = 127;
                break;

              case 116:
                _context3.prev = 116;
                _context3.t2 = _context3["catch"](111);
                _context3.t3 = _context3.t2.response.status;
                _context3.next = _context3.t3 === 419 ? 121 : _context3.t3 === 422 ? 123 : 125;
                break;

              case 121:
                _this3.$swal("Error...!", "Ocurrio un error!", "error");

                return _context3.abrupt("break", 127);

              case 123:
                _this3.$swal("Error...!", "Ocurrio un error!", "error");

                return _context3.abrupt("break", 127);

              case 125:
                _this3.$swal("Error...!", "Ocurrio un error!", "error");

                return _context3.abrupt("break", 127);

              case 127:
                _context3.next = 130;
                break;

              case 129:
                bandera = true;

              case 130:
                if (!(actual === "cartxciclo")) {
                  _context3.next = 205;
                  break;
                }

                bandera = true;

                if (!(_this3.GIDEN === false)) {
                  _context3.next = 135;
                  break;
                }

                _this3.$swal("Error...!", "Por Favor Complete Los Campos Obligatorios de la Pestaña Hogar", "error");

                return _context3.abrupt("return", false);

              case 135:
                if (!(_this3.GVIVI === false)) {
                  _context3.next = 138;
                  break;
                }

                _this3.$swal("Error...!", "Por Favor Complete Los Campos Obligatorios de la Pestaña Vivienda", "error");

                return _context3.abrupt("return", false);

              case 138:
                if (!(_this3.GCARXCI === false && _this3.GIDEN === true && _this3.GVIVI === true)) {
                  _context3.next = 204;
                  break;
                }

                auxi = false; //VALIDAR LA TABLA MENORES DE 1 AÑO

                if (!(_this3.Men1A.length > 0)) {
                  _context3.next = 148;
                  break;
                }

                _resul4 = _this3.valMen1();

                if (!_resul4) {
                  _context3.next = 147;
                  break;
                }

                bandera = true;
                auxi = true;
                _context3.next = 148;
                break;

              case 147:
                return _context3.abrupt("return", false);

              case 148:
                if (!(_this3.De1A5.length > 0)) {
                  _context3.next = 156;
                  break;
                }

                _resul5 = _this3.valDe1A5();

                if (!_resul5) {
                  _context3.next = 155;
                  break;
                }

                bandera = true;
                auxi = true;
                _context3.next = 156;
                break;

              case 155:
                return _context3.abrupt("return", false);

              case 156:
                if (!(_this3.De6A11.length > 0)) {
                  _context3.next = 164;
                  break;
                }

                _resul6 = _this3.valDe6A11();

                if (!_resul6) {
                  _context3.next = 163;
                  break;
                }

                bandera = true;
                auxi = true;
                _context3.next = 164;
                break;

              case 163:
                return _context3.abrupt("return", false);

              case 164:
                if (!(_this3.De10A59.length > 0)) {
                  _context3.next = 172;
                  break;
                }

                _resul7 = _this3.valDe10A59();

                if (!_resul7) {
                  _context3.next = 171;
                  break;
                }

                bandera = true;
                auxi = true;
                _context3.next = 172;
                break;

              case 171:
                return _context3.abrupt("return", false);

              case 172:
                if (!(_this3.ParPost.length > 0)) {
                  _context3.next = 180;
                  break;
                }

                _resul8 = _this3.valParPost();

                if (!_resul8) {
                  _context3.next = 179;
                  break;
                }

                bandera = true;
                auxi = true;
                _context3.next = 180;
                break;

              case 179:
                return _context3.abrupt("return", false);

              case 180:
                if (!auxi) {
                  _context3.next = 201;
                  break;
                }

                //GUARDAR DATOS
                _parametros2 = {
                  _token: _this3.csrf,
                  Men1A: _this3.Men1A,
                  De1A5: _this3.De1A5,
                  De6A11: _this3.De6A11,
                  De10A59: _this3.De10A59,
                  ParPost: _this3.ParPost,
                  opcion: "MODIFICAR",
                  opc: "GUACARCI",
                  IDHOGAR: _this3.IDHOGAR
                };
                _this3.valGCart = false;
                _context3.prev = 183;
                _context3.next = 186;
                return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["guardar"](_parametros2).then(function (respuesta) {
                  if (respuesta.data.OPC == "SI") {
                    _this3.GCARXCI = true;
                    bandera = true;
                    _this3.valGCart = true;
                  }
                })["catch"](function (error) {
                  _this3.errorDevuelto = error.response.data.errors;
                  _this3.entrarPorError = true;

                  _this3.$swal("Error...!", "No se pudo guardar los datos de la pestaña ciclos", "error");

                  return;
                });

              case 186:
                _context3.next = 199;
                break;

              case 188:
                _context3.prev = 188;
                _context3.t4 = _context3["catch"](183);
                _context3.t5 = _context3.t4.response.status;
                _context3.next = _context3.t5 === 419 ? 193 : _context3.t5 === 422 ? 195 : 197;
                break;

              case 193:
                _this3.$swal("Error...!", "Ocurrio un error!", "error");

                return _context3.abrupt("break", 199);

              case 195:
                _this3.$swal("Error...!", "Ocurrio un error!", "error");

                return _context3.abrupt("break", 199);

              case 197:
                _this3.$swal("Error...!", "Ocurrio un error!", "error");

                return _context3.abrupt("break", 199);

              case 199:
                _context3.next = 202;
                break;

              case 201:
                bandera = true;

              case 202:
                _context3.next = 205;
                break;

              case 204:
                bandera = true;

              case 205:
                if (!(actual === "adolescente")) {
                  _context3.next = 268;
                  break;
                }

                bandera = true;
                _auxi = false;

                if (!(_this3.GIDEN === false)) {
                  _context3.next = 211;
                  break;
                }

                _this3.$swal("Error...!", "Por Favor Complete Los Campos Obligatorios de la Pestaña Hogar", "error");

                return _context3.abrupt("return", false);

              case 211:
                if (!(_this3.GVIVI === false)) {
                  _context3.next = 214;
                  break;
                }

                _this3.$swal("Error...!", "Por Favor Complete Los Campos Obligatorios de la Pestaña Vivienda", "error");

                return _context3.abrupt("return", false);

              case 214:
                if (!(_this3.Men1A.length > 0 || _this3.De1A5.length > 0 || _this3.De6A11.length > 0 || _this3.De10A59.length > 0 || _this3.ParPost.length > 0)) {
                  _context3.next = 218;
                  break;
                }

                if (!(_this3.GCARXCI === false)) {
                  _context3.next = 218;
                  break;
                }

                _this3.$swal("Error...!", "Por Favor Guarde Los Datos de la Pestaña Cart. X ciclo", "error");

                return _context3.abrupt("return", false);

              case 218:
                if (!(_this3.GADOLE === false && _this3.GIDEN === true && _this3.GVIVI === true)) {
                  _context3.next = 267;
                  break;
                }

                if (!(_this3.De12A17.length > 0)) {
                  _context3.next = 227;
                  break;
                }

                _resul9 = _this3.valDe12A17();

                if (!_resul9) {
                  _context3.next = 226;
                  break;
                }

                bandera = true;
                _auxi = true;
                _context3.next = 227;
                break;

              case 226:
                return _context3.abrupt("return", false);

              case 227:
                if (!(_this3.De18A28.length > 0)) {
                  _context3.next = 235;
                  break;
                }

                _resul10 = _this3.valDe18A28();

                if (!_resul10) {
                  _context3.next = 234;
                  break;
                }

                bandera = true;
                _auxi = true;
                _context3.next = 235;
                break;

              case 234:
                return _context3.abrupt("return", false);

              case 235:
                if (!(_this3.De29A59.length > 0)) {
                  _context3.next = 243;
                  break;
                }

                _resul11 = _this3.valDe29A59();

                if (!_resul11) {
                  _context3.next = 242;
                  break;
                }

                bandera = true;
                _auxi = true;
                _context3.next = 243;
                break;

              case 242:
                return _context3.abrupt("return", false);

              case 243:
                if (!_auxi) {
                  _context3.next = 264;
                  break;
                }

                //GUARDAR DATOS
                _parametros3 = {
                  _token: _this3.csrf,
                  De12A17: _this3.De12A17,
                  De18A28: _this3.De18A28,
                  De29A59: _this3.De29A59,
                  opcion: "MODIFICAR",
                  opc: "GUADOLE",
                  IDHOGAR: _this3.IDHOGAR
                };
                _this3.valGAdole = false;
                _context3.prev = 246;
                _context3.next = 249;
                return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["guardar"](_parametros3).then(function (respuesta) {
                  if (respuesta.data.OPC == "SI") {
                    _this3.GADOLE = true;
                    bandera = true;
                    _this3.valGAdole = true;
                  }
                })["catch"](function (error) {
                  _this3.errorDevuelto = error.response.data.errors;
                  _this3.entrarPorError = true;

                  _this3.$swal("Error...!", "No se pudo guardar los datos de la pestaña adolescentes", "error");

                  return;
                });

              case 249:
                _context3.next = 262;
                break;

              case 251:
                _context3.prev = 251;
                _context3.t6 = _context3["catch"](246);
                _context3.t7 = _context3.t6.response.status;
                _context3.next = _context3.t7 === 419 ? 256 : _context3.t7 === 422 ? 258 : 260;
                break;

              case 256:
                _this3.$swal("Error...!", "Ocurrio un error!", "error");

                return _context3.abrupt("break", 262);

              case 258:
                _this3.$swal("Error...!", "Ocurrio un error!", "error");

                return _context3.abrupt("break", 262);

              case 260:
                _this3.$swal("Error...!", "Ocurrio un error!", "error");

                return _context3.abrupt("break", 262);

              case 262:
                _context3.next = 265;
                break;

              case 264:
                bandera = true;

              case 265:
                _context3.next = 268;
                break;

              case 267:
                bandera = true;

              case 268:
                if (!(actual === "adultomayor")) {
                  _context3.next = 334;
                  break;
                }

                _auxi2 = false;

                if (!(_this3.GIDEN === false)) {
                  _context3.next = 273;
                  break;
                }

                _this3.$swal("Error...!", "Por Favor Complete Los Campos Obligatorios de la Pestaña Hogar", "error");

                return _context3.abrupt("return", false);

              case 273:
                if (!(_this3.GVIVI === false)) {
                  _context3.next = 276;
                  break;
                }

                _this3.$swal("Error...!", "Por Favor Complete Los Campos Obligatorios de la Pestaña Vivienda", "error");

                return _context3.abrupt("return", false);

              case 276:
                if (!(_this3.Men1A.length > 0 || _this3.De1A5.length > 0 || _this3.De6A11.length > 0 || _this3.De10A59.length > 0 || _this3.ParPost.length > 0)) {
                  _context3.next = 280;
                  break;
                }

                if (!(_this3.GCARXCI === false)) {
                  _context3.next = 280;
                  break;
                }

                _this3.$swal("Error...!", "Por Favor Guarde Los Datos de la Pestaña Cart. X ciclo", "error");

                return _context3.abrupt("return", false);

              case 280:
                if (!(_this3.De12A17.length > 0 || _this3.De18A28.length > 0 || _this3.De29A59.length > 0)) {
                  _context3.next = 284;
                  break;
                }

                if (!(_this3.GADOLE === false)) {
                  _context3.next = 284;
                  break;
                }

                _this3.$swal("Error...!", "Por Favor Complete Los Campos Obligatorios de la Pestaña Adolecentes/Jovenes", "error");

                return _context3.abrupt("return", false);

              case 284:
                if (!(_this3.GADULT === false)) {
                  _context3.next = 333;
                  break;
                }

                if (!(_this3.De60.length > 0)) {
                  _context3.next = 293;
                  break;
                }

                _resul12 = _this3.valDe60();

                if (!_resul12) {
                  _context3.next = 292;
                  break;
                }

                bandera = true;
                _auxi2 = true;
                _context3.next = 293;
                break;

              case 292:
                return _context3.abrupt("return", false);

              case 293:
                if (!(_this3.EnCro.length > 0)) {
                  _context3.next = 301;
                  break;
                }

                _resul13 = _this3.valEnCro();

                if (!_resul13) {
                  _context3.next = 300;
                  break;
                }

                bandera = true;
                _auxi2 = true;
                _context3.next = 301;
                break;

              case 300:
                return _context3.abrupt("return", false);

              case 301:
                if (!(_this3.EnInf.length > 0)) {
                  _context3.next = 309;
                  break;
                }

                _resul14 = _this3.valEnInf();

                if (!_resul14) {
                  _context3.next = 308;
                  break;
                }

                bandera = true;
                _auxi2 = true;
                _context3.next = 309;
                break;

              case 308:
                return _context3.abrupt("return", false);

              case 309:
                if (!_auxi2) {
                  _context3.next = 330;
                  break;
                }

                //GUARDAR DATOS
                _parametros4 = {
                  _token: _this3.csrf,
                  De60: _this3.De60,
                  EnCro: _this3.EnCro,
                  EnInf: _this3.EnInf,
                  opcion: "MODIFICAR",
                  opc: "GUADULT",
                  IDHOGAR: _this3.IDHOGAR
                };
                _this3.valGAdul = false;
                _context3.prev = 312;
                _context3.next = 315;
                return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["guardar"](_parametros4).then(function (respuesta) {
                  if (respuesta.data.OPC == "SI") {
                    _this3.GADULT = true;
                    bandera = true;
                    _this3.valGAdul = true;
                  }
                })["catch"](function (error) {
                  _this3.errorDevuelto = error.response.data.errors;
                  _this3.entrarPorError = true;

                  _this3.$swal("Error...!", "No se pudo guardar los datos de la pestaña adultos", "error");

                  return;
                });

              case 315:
                _context3.next = 328;
                break;

              case 317:
                _context3.prev = 317;
                _context3.t8 = _context3["catch"](312);
                _context3.t9 = _context3.t8.response.status;
                _context3.next = _context3.t9 === 419 ? 322 : _context3.t9 === 422 ? 324 : 326;
                break;

              case 322:
                _this3.$swal("Error...!", "Ocurrio un error!", "error");

                return _context3.abrupt("break", 328);

              case 324:
                _this3.$swal("Error...!", "Ocurrio un error!", "error");

                return _context3.abrupt("break", 328);

              case 326:
                _this3.$swal("Error...!", "Ocurrio un error!", "error");

                return _context3.abrupt("break", 328);

              case 328:
                _context3.next = 331;
                break;

              case 330:
                bandera = true;

              case 331:
                _context3.next = 334;
                break;

              case 333:
                bandera = true;

              case 334:
                if (!(actual === "migrante")) {
                  _context3.next = 392;
                  break;
                }

                _auxi3 = false;

                if (!(_this3.GIDEN === false)) {
                  _context3.next = 339;
                  break;
                }

                _this3.$swal("Error...!", "Por Favor Complete Los Campos Obligatorios de la Pestaña Hogar", "error");

                return _context3.abrupt("return", false);

              case 339:
                if (!(_this3.GVIVI === false)) {
                  _context3.next = 342;
                  break;
                }

                _this3.$swal("Error...!", "Por Favor Complete Los Campos Obligatorios de la Pestaña Vivienda", "error");

                return _context3.abrupt("return", false);

              case 342:
                if (!(_this3.Men1A.length > 0 || _this3.De1A5.length > 0 || _this3.De6A11.length > 0 || _this3.De10A59.length > 0 || _this3.ParPost.length > 0)) {
                  _context3.next = 346;
                  break;
                }

                if (!(_this3.GCARXCI === false)) {
                  _context3.next = 346;
                  break;
                }

                _this3.$swal("Error...!", "Por Favor Guarde Los Datos de la Pestaña Cart. X ciclo", "error");

                return _context3.abrupt("return", false);

              case 346:
                if (!(_this3.De12A17.length > 0 || _this3.De18A28.length > 0 || _this3.De29A59.length > 0)) {
                  _context3.next = 350;
                  break;
                }

                if (!(_this3.GADOLE === false)) {
                  _context3.next = 350;
                  break;
                }

                _this3.$swal("Error...!", "Por Favor Complete Los Campos Obligatorios de la Pestaña Adolecentes/Jovenes", "error");

                return _context3.abrupt("return", false);

              case 350:
                if (!(_this3.De60.length > 0 || _this3.EnCro.length > 0 || _this3.EnInf.length > 0)) {
                  _context3.next = 354;
                  break;
                }

                if (!(_this3.GADULT === false)) {
                  _context3.next = 354;
                  break;
                }

                _this3.$swal("Error...!", "Por Favor Complete Los Campos Obligatorios de la Pestaña Adulto mayor", "error");

                return _context3.abrupt("return", false);

              case 354:
                if (!(_this3.GMIGRA === false)) {
                  _context3.next = 389;
                  break;
                }

                if (!(_this3.Migra.length > 0)) {
                  _context3.next = 363;
                  break;
                }

                _resul15 = _this3.valMigra();

                if (!_resul15) {
                  _context3.next = 362;
                  break;
                }

                bandera = true;
                _auxi3 = true;
                _context3.next = 363;
                break;

              case 362:
                return _context3.abrupt("return", false);

              case 363:
                if (!_auxi3) {
                  _context3.next = 384;
                  break;
                }

                _parametros5 = {
                  _token: _this3.csrf,
                  Migra: _this3.Migra,
                  opcion: "MODIFICAR",
                  opc: "GUAMIGRA",
                  IDHOGAR: _this3.IDHOGAR
                };
                _this3.valGMig = false;
                _context3.prev = 366;
                _context3.next = 369;
                return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["guardar"](_parametros5).then(function (respuesta) {
                  if (respuesta.data.OPC == "SI") {
                    _this3.$swal("Guardar...!", "Datos Guardados Exitosamente!", "success");

                    _this3.valGMig = true;

                    _this3.$router.push("/gestion");
                  }
                })["catch"](function (error) {
                  _this3.errorDevuelto = error.response.data.errors;
                  _this3.entrarPorError = true;

                  _this3.$swal("Error...!", "No se pudo guardar los datos de la pestaña migrantes", "error");

                  return;
                });

              case 369:
                _context3.next = 382;
                break;

              case 371:
                _context3.prev = 371;
                _context3.t10 = _context3["catch"](366);
                _context3.t11 = _context3.t10.response.status;
                _context3.next = _context3.t11 === 419 ? 376 : _context3.t11 === 422 ? 378 : 380;
                break;

              case 376:
                _this3.$swal("Error...!", "Ocurrio un error!", "error");

                return _context3.abrupt("break", 382);

              case 378:
                _this3.$swal("Error...!", "Ocurrio un error!", "error");

                return _context3.abrupt("break", 382);

              case 380:
                _this3.$swal("Error...!", "Ocurrio un error!", "error");

                return _context3.abrupt("break", 382);

              case 382:
                _context3.next = 387;
                break;

              case 384:
                bandera = true;

                _this3.$swal("Guardar...!", "Datos Guardados Exitosamente!", "success");

                _this3.$router.push("/gestion");

              case 387:
                _context3.next = 392;
                break;

              case 389:
                _this3.$swal("Guardar...!", "Datos Guardados Exitosamente!", "success");

                _this3.SAPU = false;

                _this3.$router.push("/gestion");

              case 392:
                if (bandera) {
                  bandera = false;
                  $('.nav-tabs a[href="#' + opcion + '"]').tab("show");
                }

              case 393:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, null, [[74, 79], [111, 116], [183, 188], [246, 251], [312, 317], [366, 371]]);
      }))();
    },
    cambiarTab2: function cambiarTab2(opcion) {
      if (this.GIDEN === false) {
        // $('.nav-tabs a[href="#' + opcion + '"]').tab('show');
        $('.nav-tabs a[href="#tabIdentificacion"]').tab("show");
        return false;
      } else {}
    },
    volver: function volver() {
      this.$router.push("/gestion");
    },
    habilitar_zonas: function habilitar_zonas() {
      if (this.hogar.id_zona === "") {
        this.estratificacionData.ingresos_zona_rural = "";
        this.estratificacionData.ingresos_ciudad = "";
      }

      if (this.hogar.id_zona === "0") {
        this.estratificacionData.ingresos_zona_rural = 8;
        this.estratificacionData.ingresos_ciudad = 8;
      }

      if (this.hogar.id_zona === "1") {
        this.estratificacionData.ingresos_zona_rural = 8;
        this.estratificacionData.ingresos_ciudad = "";
      }

      if (this.hogar.id_zona === "2" || this.hogar.id_zona === "3") {
        this.estratificacionData.ingresos_zona_rural = "";
        this.estratificacionData.ingresos_ciudad = 8;
      }
    },
    allLetter: function allLetter(valor) {
      var letters = /^([0-9])*$/;

      if (valor === "") {
        return false;
      } else {
        if (valor.match(letters)) {
          return true;
        } else {
          return false;
        }
      }
    },
    isNumeric: function isNumeric(n) {
      return !isNaN(parseFloat(n)) && isFinite(n);
    },
    validarNumHog: function validarNumHog() {
      if (this.hogar.numero_hogares <= 0) {
        this.hogar.numero_hogares = "";
      }
    },
    SoloNumeros: function SoloNumeros(event) {
      if (event.keyCode < 48 || event.keyCode > 57) {
        return false; // this.caracData.salario = 0;
      }
    },
    cambiarCombo: function () {
      var _cambiarCombo = _asyncToGenerator(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee4(caja) {
        var _this4 = this;

        var parametros, _parametros6;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                if (caja === "dpto") {
                  this.hogar.id_mun = "";
                  this.hogar.id_corre = "";
                  this.hogar.id_vereda = "";
                  this.hogar.id_barrio = "";
                }

                if (!(caja === "muni")) {
                  _context4.next = 34;
                  break;
                }

                this.hogar.id_corre = "";
                this.hogar.id_vereda = "";
                this.hogar.id_barrio = "";
                parametros = {
                  _token: this.csrf,
                  id: this.hogar.id_mun,
                  opcion: "MUN"
                };
                _context4.prev = 6;
                _context4.next = 9;
                return _Servicios_barrios_servicios__WEBPACK_IMPORTED_MODULE_2__["comboBarrios"](parametros).then(function (respuesta) {
                  _this4.barrio_options = respuesta.data.arrayBarrios;
                });

              case 9:
                _context4.next = 20;
                break;

              case 11:
                _context4.prev = 11;
                _context4.t0 = _context4["catch"](6);
                _context4.t1 = _context4.t0.response.status;
                _context4.next = _context4.t1 === 422 ? 16 : 18;
                break;

              case 16:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context4.abrupt("break", 20);

              case 18:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context4.abrupt("break", 20);

              case 20:
                _context4.prev = 20;
                _context4.next = 23;
                return _Servicios_colegios_servicios__WEBPACK_IMPORTED_MODULE_3__["combo"](parametros).then(function (respuesta) {
                  _this4.colegio_options = respuesta.data.arrayColegios;
                });

              case 23:
                _context4.next = 34;
                break;

              case 25:
                _context4.prev = 25;
                _context4.t2 = _context4["catch"](20);
                _context4.t3 = _context4.t2.response.status;
                _context4.next = _context4.t3 === 422 ? 30 : 32;
                break;

              case 30:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context4.abrupt("break", 34);

              case 32:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context4.abrupt("break", 34);

              case 34:
                if (!(caja === "corregi")) {
                  _context4.next = 67;
                  break;
                }

                this.hogar.id_vereda = "";
                this.hogar.id_barrio = "";

                if (!(this.hogar.id_corre !== "0")) {
                  _context4.next = 67;
                  break;
                }

                _parametros6 = {
                  _token: this.csrf,
                  id: this.hogar.id_corre,
                  opcion: "CORRE"
                };
                _context4.prev = 39;
                _context4.next = 42;
                return _Servicios_barrios_servicios__WEBPACK_IMPORTED_MODULE_2__["comboBarrios"](_parametros6).then(function (respuesta) {
                  _this4.barrio_options = respuesta.data.arrayBarrios;
                });

              case 42:
                _context4.next = 53;
                break;

              case 44:
                _context4.prev = 44;
                _context4.t4 = _context4["catch"](39);
                _context4.t5 = _context4.t4.response.status;
                _context4.next = _context4.t5 === 422 ? 49 : 51;
                break;

              case 49:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context4.abrupt("break", 53);

              case 51:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context4.abrupt("break", 53);

              case 53:
                _context4.prev = 53;
                _context4.next = 56;
                return _Servicios_colegios_servicios__WEBPACK_IMPORTED_MODULE_3__["combo"](_parametros6).then(function (respuesta) {
                  _this4.colegio_options = respuesta.data.arrayColegios;
                });

              case 56:
                _context4.next = 67;
                break;

              case 58:
                _context4.prev = 58;
                _context4.t6 = _context4["catch"](53);
                _context4.t7 = _context4.t6.response.status;
                _context4.next = _context4.t7 === 422 ? 63 : 65;
                break;

              case 63:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context4.abrupt("break", 67);

              case 65:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context4.abrupt("break", 67);

              case 67:
                if (caja === "etnia") {
                  this.CA1.clasificacion = "0";
                }

              case 68:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this, [[6, 11], [20, 25], [39, 44], [53, 58]]);
      }));

      function cambiarCombo(_x3) {
        return _cambiarCombo.apply(this, arguments);
      }

      return cambiarCombo;
    }(),
    formato: function formato(caja) {
      if (caja == "id1") {
        if (this.caracData.tipo_id == "CC") {
          this.caracData.identificacion = this.caracData.identificacion.replace(/[.*+\-?^${}()|[\]\\]/g, "");
          var val = (this.caracData.identificacion / 1).toFixed(0).replace(".", ",");
          this.caracData.identificacion = val.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

          if (this.caracData.identificacion == "NaN") {
            this.caracData.identificacion = "";
          }

          if (this.caracData.identificacion == "0") {
            this.caracData.identificacion = "";
          }
        }
      }

      if (caja == "salario") {
        this.caracData.salario = this.caracData.salario.replace(/[.*+\-?^${}()|[\]\\]/g, "");

        var _val = (this.caracData.salario / 1).toFixed(0).replace(".", ",");

        this.caracData.salario = _val.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

        if (this.caracData.salario == "NaN") {
          this.caracData.salario = "";
        }

        if (this.caracData.salario == "0") {
          this.caracData.salario = "";
        }
      }

      if (caja == "tipoid") {
        this.caracData.identificacion = "";

        if (this.caracData.tipo_id != "CC") {
          if (this.caracData.tipo_id === "ASI" || this.caracData.tipo_id === "MSI") {
            this.caracData.identificacion = this.CODIGOGENE + Math.floor(Math.random() * 100 + 1);
          } else {
            this.caracData.identificacion = this.caracData.identificacion.replace(/[.*+\-?^${}()|[\]\\]/g, "");
          }
        } else {
          if (this.caracData.tipo_id == "CC") {
            this.caracData.identificacion = this.caracData.identificacion.replace(/[.*+\-?^${}()|[\]\\]/g, "");

            var _val2 = (this.caracData.identificacion / 1).toFixed(0).replace(".", ",");

            this.caracData.identificacion = _val2.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

            if (this.caracData.identificacion == "NaN") {
              this.caracData.identificacion = "";
            }

            if (this.caracData.identificacion == "0") {
              this.caracData.identificacion = "";
            }
          }
        }
      }

      if (caja == "id2") {
        if (this.CA1.tipo_id == "CC") {
          this.CA1.identificacion = this.CA1.identificacion.replace(/[.*+\-?^${}()|[\]\\]/g, "");

          var _val3 = (this.CA1.identificacion / 1).toFixed(0).replace(".", ",");

          this.CA1.identificacion = _val3.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

          if (this.CA1.identificacion == "NaN") {
            this.CA1.identificacion = "";
          }

          if (this.CA1.identificacion == "0") {
            this.CA1.identificacion = "";
          }
        }
      }

      if (caja == "tipoid2") {
        this.CA1.identificacion = "";

        if (this.CA1.tipo_id != "CC") {
          if (this.CA1.tipo_id === "ASI" || this.CA1.tipo_id === "MSI") {
            this.CA1.identificacion = this.CODIGOGENE + Math.floor(Math.random() * 100 + 1);
          } else {
            this.CA1.identificacion = this.CA1.identificacion.replace(/[.*+\-?^${}()|[\]\\]/g, "");
          }
        } else {
          if (this.CA1.tipo_id == "CC") {
            this.CA1.identificacion = this.CA1.identificacion.replace(/[.*+\-?^${}()|[\]\\]/g, "");

            var _val4 = (this.CA1.identificacion / 1).toFixed(0).replace(".", ",");

            this.CA1.identificacion = _val4.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

            if (this.CA1.identificacion == "NaN") {
              this.CA1.identificacion = "";
            }

            if (this.CA1.identificacion == "0") {
              this.CA1.identificacion = "";
            }
          }
        }
      }

      if (caja == "telefono1") {
        this.caracData.telefono = this.caracData.telefono.replace(/[^.\d]/g, "").trim();

        if (this.caracData.telefono == "NaN") {
          this.caracData.telefono = "";
        }

        if (this.caracData.telefono == "0") {
          this.caracData.telefono = "";
        }
      }

      if (caja == "telefono2") {
        this.CA1.telefono = this.CA1.telefono.replace(/[^.\d]/g, "").trim();

        if (this.CA1.telefono == "NaN") {
          this.CA1.telefono = "";
        }

        if (this.CA1.telefono == "0") {
          this.CA1.telefono = "";
        }
      }

      if (caja == "puntaje") {}

      if (caja == "puntaje1") {}

      if (caja == "peso1") {
        this.caracData.peso = this.caracData.peso.replace(/[^.\d]/g, "").trim();

        if (this.caracData.peso == "NaN") {
          this.caracData.peso = "0";
        }
      }

      if (caja == "talla1") {
        this.caracData.talla = this.caracData.talla.replace(/[^.\d]/g, "").trim();

        if (this.caracData.talla == "NaN") {
          this.caracData.talla = "0";
        }
      }

      if (caja == "peso2") {
        this.CA1.peso = this.CA1.peso.replace(/[^.\d]/g, "").trim();

        if (this.CA1.peso == "NaN") {
          this.CA1.peso = "0";
        }
      }

      if (caja == "talla2") {
        this.CA1.talla = this.CA1.talla.replace(/[^.\d]/g, "").trim();

        if (this.CA1.talla == "NaN") {
          this.CA1.talla = "0";
        }
      }
    },
    mostrarOtro: function mostrarOtro(tipo) {
      if (tipo === "TE") {
        if (this.viviendaData.tipo_estructura === "5") {
          this.mOTE = true;
        } else {
          this.mOTE = false;
        }

        this.viviendaData.otro_tipo_estructura = "";
      }

      if (tipo === "TC") {
        if (this.viviendaData.tipo_cubierta === "9") {
          this.mOTC = true;
        } else {
          this.mOTC = false;
        }

        this.viviendaData.otro_tipo_cubierta = "";
      }

      if (tipo === "AE") {
        if (this.viviendaData.actividad_economica === "CUAL") {
          this.mOAE = true;
        } else {
          this.mOAE = false;
        }

        this.viviendaData.cual_actividad_economica = "";
      }

      if (tipo === "FA") {
        if (this.viviendaData.fuente_agua === "9") {
          this.mOFA = true;
        } else {
          this.mOFA = false;
        }

        this.viviendaData.cual_fuente = "";
      }

      if (tipo === "DA") {
        if (this.viviendaData.donde_almacena_agua === "5") {
          this.mODA = true;
        } else {
          this.mODA = false;
        }

        this.viviendaData.otro_almacena_agua = "";
      }

      if (tipo === "FB") {
        if (this.viviendaData.destino_final_basura === "5") {
          this.mOFB = true;
        } else {
          this.mOFB = false;
        }

        this.viviendaData.otro_destino_final_basura = "";
      }

      if (tipo === "OC") {
        if (this.viviendaData.otro_cerca === "SI") {
          this.mOOC = true;
        } else {
          this.mOOC = false;
        }

        this.viviendaData.cual_cerca = "";
      }

      if (tipo === "EV") {
        if (this.viviendaData.envases_vacios === "7") {
          this.mOEV = true;
        } else {
          this.mOEV = false;
        }

        this.viviendaData.otro_envases_vacios = "";
      }

      if (tipo === "EP") {
        if (this.viviendaData.elementos_protecion === "5") {
          this.mOEP = true;
        } else {
          this.mOEP = false;
        }

        this.viviendaData.otro_elementos_protecion = "";
      }

      if (tipo === "MC") {
        if (this.viviendaData.metodos_coccion === "6") {
          this.mOMC = true;
        } else {
          this.mOMC = false;
        }

        this.viviendaData.otro_metodos_coccion = "";
      }

      if (tipo === "AA") {
        if (this.viviendaData.lugares_almacenan_alimentos === "6") {
          this.mOAA = true;
        } else {
          this.mOAA = false;
        }

        this.viviendaData.otro_lugares_almacenan_alimentos = "";
      }

      if (tipo === "DH") {
        if (this.viviendaData.excretas === "7") {
          this.mODH = true;
        } else {
          this.mODH = false;
        }

        this.viviendaData.otro_depositan_excretas = "";
      }

      if (tipo === "ES") {
        if (this.viviendaData.tipo_explotacion === "5") {
          this.mOES = true;
        } else {
          this.mOES = false;
        }

        this.viviendaData.otro_tipo_explotacion = "";
      }

      if (tipo === "OG") {
        if (this.viviendaData.otros_genera === "SI") {
          this.mOOG = true;
        } else {
          this.mOOG = false;
        }

        this.viviendaData.cual_genera = "";
      }

      if (tipo === "OEPS1") {
        if (this.caracData.afiliacion_entidad === "OTRA") {
          this.mOEPS1 = true;
        } else {
          this.mOEPS1 = false;
        }

        this.caracData.otra_eps = "";
      }

      if (tipo === "OEPS2") {
        if (this.CA1.afi_entidad === "OTRA") {
          this.mOEPS2 = true;
        } else {
          this.mOEPS2 = false;
        }

        this.CA1.otra_eps = "";
      }

      if (tipo === "mOCOL1") {
        if (this.caracData.nivel_escolaridad === 3 || this.caracData.nivel_escolaridad === 14 || this.caracData.nivel_escolaridad === 15) {
          this.mOCOL1 = true;
        } else {
          this.mOCOL1 = false;
        }

        this.caracData.colegio = "";
        this.caracData.grado = "";
      }

      if (tipo === "mOCOL2") {
        if (this.CA1.escolaridad === 3 || this.CA1.escolaridad === 14 || this.CA1.escolaridad === 15) {
          this.mOCOL2 = true;
        } else {
          this.mOCOL2 = false;
        }

        this.CA1.colegio = "";
        this.CA1.grado = "0";
      }
    },
    // OPCIONES DE LAS OCUPACIONES
    abrirModalOcupaciones: function abrirModalOcupaciones(opcion) {
      this.opcionOcupaciones = opcion;
      this.txtbusqueda = "";
      this.consultarOcupaciones(1);
      this.$refs.modalOcupaciones.show();
    },
    cerrarModal: function cerrarModal() {
      this.$refs.modalOcupaciones.hide();
      this.$refs.modalActividad.hide();
    },
    consultarOcupaciones: function consultarOcupaciones(pagina) {
      var _this5 = this;

      return _asyncToGenerator(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee5() {
        var parametros;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                parametros = {
                  txtbusqueda: _this5.txtbusqueda.trim(),
                  _token: _this5.csrf,
                  page: pagina
                };
                _context5.prev = 1;
                _context5.next = 4;
                return _Servicios_ocupaciones_servicios__WEBPACK_IMPORTED_MODULE_4__["listarOcupaciones"](parametros).then(function (respuesta) {
                  _this5.ocupacionesVector = respuesta.data.ocupaciones.data;
                  _this5.paginacionVector = respuesta.data.paginacion;
                });

              case 4:
                _context5.next = 15;
                break;

              case 6:
                _context5.prev = 6;
                _context5.t0 = _context5["catch"](1);
                _context5.t1 = _context5.t0.response.status;
                _context5.next = _context5.t1 === 422 ? 11 : 13;
                break;

              case 11:
                _this5.$swal("Error...!", "Ocurrio un error!", "error");

                return _context5.abrupt("break", 15);

              case 13:
                _this5.$swal("Error...!", "Ocurrio un error!", "error");

                return _context5.abrupt("break", 15);

              case 15:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, null, [[1, 6]]);
      }))();
    },
    seleccionarOcupaciones: function seleccionarOcupaciones(item) {
      if (this.opcionOcupaciones === "jefe") {
        this.caracData.ocupacion = item.id;
        this.ocupacionAuxiliar = item.descripcion;
      } else {
        this.CA1.ocupacion = item.id;
        this.ocupacionAuxiliar2 = item.descripcion;
      }

      this.$refs.modalOcupaciones.hide();
    },
    // OPCIONES DE LAS OCUPACIONES
    //OPCIONES DEL JEFE DE HOGAR
    agregarJefe: function () {
      var _agregarJefe = _asyncToGenerator(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee6() {
        var _this6 = this;

        var parametros;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                if (!(this.checkForm() === true)) {
                  _context6.next = 12;
                  break;
                }

                // VALIDAR SI EL JEFE DE HOGAR SE ENCUENTRA AGREGADO
                this.caracData.identificacion = this.caracData.identificacion.replace(/[.*+\-?^${}()|[\]\\]/g, "");
                parametros = {
                  _token: this.csrf,
                  identificacion: this.caracData.identificacion
                };
                _context6.prev = 3;
                _context6.next = 6;
                return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["validarJefe"](parametros).then(function (respuesta) {
                  if (respuesta.data.OPC == "EXISTE") {
                    var val = (respuesta.data.identificacion / 1).toFixed(0).replace(".", ",");
                    var iden = val.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

                    _this6.$swal("Validar...!", "El Documento <b>" + iden + "</b> Se Encuentra Registrado", "warning");

                    return false;
                  } else {
                    // VERIFICAR SI ESTA EN LA TABLA
                    var resultado = _this6.datosJefe.filter(function (identi) {
                      return identi.identificacion == _this6.caracData.identificacion;
                    }); // VERIFICAR SI ESTA EN LA TABLA


                    if (resultado.length) {
                      _this6.$swal("Validar...!", "El Documento <b>" + _this6.caracData.identificacion + "</b> Se Encuentra Agregado", "warning");

                      return false;
                    } else {
                      var _nacimiento = moment(_this6.caracData.fecha_nacimiento);

                      var _hoy = moment();

                      var edad = 0;

                      if (_nacimiento < _hoy) {
                        edad = _hoy.diff(_nacimiento, "years"); //Calculamos la diferencia en años
                      } // if (edad < 14) {
                      //   this.$swal(
                      //     "Validar...!",
                      //     "El Valor de la edad introducido no es aceptable, debe ser mayor ó igual a 14 años",
                      //     "warning"
                      //   );
                      //   return false;
                      // }


                      var textoEps = "";

                      if (_this6.caracData.afiliacion_entidad === "OTRA") {
                        textoEps = "OTRA";
                      } else {
                        if (_this6.caracData.afiliacion_entidad === "NINGUNA") {
                          textoEps = "NINGUNA";
                        } else {
                          textoEps = _this6.showText(_this6.caracData.afiliacion_entidad, _this6.admini_options);
                        }
                      }

                      _this6.datosJefe.push({
                        id: 0,
                        id_hogar: 0,
                        telefono: _this6.caracData.telefono,
                        puntaje_sisben: _this6.caracData.puntaje_sisben,
                        afiliacion_entidad: _this6.caracData.afiliacion_entidad,
                        textoEps: textoEps,
                        otra_eps: _this6.caracData.otra_eps,
                        tipo_id: _this6.caracData.tipo_id,
                        identificacion: _this6.caracData.identificacion,
                        sexo: _this6.caracData.sexo,
                        parentesco: _this6.caracData.parentesco,
                        textoParentesco: _this6.showText(_this6.caracData.parentesco, _this6.parentesco_options),
                        pnom: _this6.caracData.pnom,
                        snom: _this6.caracData.snom,
                        pape: _this6.caracData.pape,
                        sape: _this6.caracData.sape,
                        salario: _this6.caracData.salario,
                        estado_civil: _this6.caracData.estado_civil,
                        textoEstado: _this6.showText(_this6.caracData.estado_civil, _this6.estado_options),
                        fecha_nacimiento: _this6.caracData.fecha_nacimiento,
                        tipo_afiliacion: _this6.caracData.tipo_afiliacion,
                        embarazo: _this6.caracData.embarazo,
                        embarazo_multiple: _this6.caracData.embarazo_multiple,
                        discapacidad: _this6.caracData.discapacidad,
                        nivel_escolaridad: _this6.caracData.nivel_escolaridad,
                        textoNivel: _this6.showText(_this6.caracData.nivel_escolaridad, _this6.escolaridad_options),
                        ocupacion: _this6.caracData.ocupacion,
                        textoOcupacion: _this6.showText(_this6.caracData.ocupacion, _this6.ocupacion_options),
                        colegio: _this6.caracData.colegio,
                        textoColegio: _this6.showText(_this6.caracData.colegio, _this6.colegio_options),
                        grado: _this6.caracData.grado,
                        entiende: _this6.caracData.entiende,
                        migrante: _this6.caracData.migrante,
                        pyp: _this6.caracData.pyp,
                        etnia: _this6.caracData.etnia,
                        textoEtnia: _this6.showText(_this6.caracData.etnia, _this6.etnia_options),
                        clasificacion: _this6.caracData.clasificacion,
                        textoClasificacion: _this6.showText2(_this6.caracData.clasificacion, _this6.clasifi_options, _this6.caracData.etnia),
                        edad: _this6.caracData.edad,
                        orientacion: _this6.caracData.orientacion,
                        identidad_genero: _this6.caracData.identidad_genero,
                        perdida_peso: _this6.caracData.perdida_peso,
                        programa_icbf: _this6.caracData.programa_icbf,
                        identi_auxi: "",
                        estado: "Activo",
                        enfermedad_infecciosa: _this6.caracData.enfermedad_infecciosa,
                        textoEnfermedad_infecciosa: _this6.showText(_this6.caracData.enfermedad_infecciosa, _this6.enfinf_options),
                        enfermedad_cronica: _this6.caracData.enfermedad_cronica,
                        textoEnfermedad_cronica: _this6.showText(_this6.caracData.enfermedad_cronica, _this6.enfcro_options),
                        peso: _this6.caracData.peso,
                        talla: _this6.caracData.talla
                      });

                      if (_this6.caracData.tipo_afiliacion === "CONTRIBUTIVO" || _this6.caracData.tipo_afiliacion === "ESPECIAL") {
                        _this6.SAPU = true;
                        _this6.estratificacionData.afiliacion_salud_privada = "SI";
                      }

                      _this6.ocupacionAuxiliar = "";
                      _this6.mOCOL1 = false;

                      var indice = _this6.datosJefe.findIndex(function (identi) {
                        return identi.identificacion === _this6.caracData.identificacion;
                      });

                      _this6.vectorJefes.push({
                        index: indice,
                        identificacion: _this6.caracData.identificacion
                      }); // AGREGAR FACTORES


                      _this6.AFactores(_this6.caracData, edad); // AGREGAR FACTORES
                      // AGREGAR AFECTACION


                      _this6.AAFECTACION(_this6.caracData, edad); // AGREGAR AFECTACION                    
                      // AGREGAR DE 10 A 59 AÑOS


                      if (edad >= 10 && edad <= 59) {
                        _this6.Ade10a59Anio(_this6.caracData, edad, "JEFE");
                      } // AGREGAR DE 10 A 59 AÑOS
                      // AGREGAR PARTO POSTPARTO


                      if (_this6.caracData.embarazo === "SI") {
                        _this6.AParPost(_this6.caracData, edad, "JEFE");
                      } // AGREGAR PARTO POSTPARTO
                      // AGREGAR DE 12 A 17 AÑOS


                      if (edad >= 12 && edad <= 17) {
                        _this6.Ade12a17Anio(_this6.caracData, edad, "JEFE");
                      } // AGREGAR DE 12 A 17 AÑOS
                      // AGREGAR DE 18 A 28 AÑOS


                      if (edad >= 18 && edad <= 28) {
                        _this6.Ade18a28Anio(_this6.caracData, edad, "JEFE");
                      } // AGREGAR DE 18 A 28 AÑOS
                      // AGREGAR DE 29 A 59 AÑOS


                      if (edad >= 29 && edad <= 59) {
                        _this6.Ade29a59Anio(_this6.caracData, edad, "JEFE");
                      } // AGREGAR DE 29 A 59 AÑOS
                      // AGREGAR DE 60 ó MAS AÑOS


                      if (edad >= 60) {
                        _this6.Ade60Anio(_this6.caracData, edad, "JEFE");
                      } // AGREGAR DE 60 ó MAS AÑOS
                      // AGREGAR MIGRANTES


                      if (_this6.caracData.migrante === "SI") {
                        _this6.AMigra(_this6.caracData, edad, "JEFE");
                      } // AGREGAR MIGRANTES


                      _this6.limpiar2();
                    }
                  }
                })["catch"](function (error) {
                  _this6.errorDevuelto = error.response.data.errors;
                  _this6.entrarPorError = true;
                });

              case 6:
                _context6.next = 12;
                break;

              case 8:
                _context6.prev = 8;
                _context6.t0 = _context6["catch"](3);
                this.errorDevuelto = _context6.t0.response.data.errors;
                this.entrarPorError = true;

              case 12:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this, [[3, 8]]);
      }));

      function agregarJefe() {
        return _agregarJefe.apply(this, arguments);
      }

      return agregarJefe;
    }(),
    checkForm: function checkForm(e) {
      var bande = true; // if (this.caracData.tipo_id === "") {
      //   this.$refs.tipo_id.focus();
      //   bande = false;
      //   this.$swal(
      //     "Error...!",
      //     "Por favor seleccione un tipo de identificación!",
      //     "error"
      //   );
      //   return;
      // }
      // if (this.caracData.identificacion === "") {
      //   this.$refs.identificacion.focus();
      //   bande = false;
      //   this.$swal(
      //     "Error...!",
      //     "Por favor digite una identificación!",
      //     "error"
      //   );
      //   return;
      // }
      // if (this.caracData.sexo === "") {
      //   this.$refs.sexo.focus();
      //   bande = false;
      //   this.$swal("Error...!", "Por favor seleccione el sexo!", "error");
      //   return;
      // }
      // if (this.caracData.orientacion === "") {
      //   bande = false;
      //   this.$swal(
      //     "Error...!",
      //     "Por favor seleccione la orientación sexual!",
      //     "error"
      //   );
      //   return;
      // }
      // if (this.caracData.identidad_genero === "") {
      //   bande = false;
      //   this.$swal(
      //     "Error...!",
      //     "Por favor seleccione la identidad de genero!",
      //     "error"
      //   );
      //   return;
      // }
      // if (this.caracData.parentesco === "") {
      //   this.$refs.parentesco.focus();
      //   bande = false;
      //   this.$swal("Error...!", "Por favor seleccione el parentesco!", "error");
      //   return;
      // }
      // if (this.caracData.pnom === "") {
      //   this.$refs.pnom.focus();
      //   bande = false;
      //   this.$swal("Error...!", "Por favor digite el primer nombre!", "error");
      //   return;
      // }
      // if (this.caracData.pape === "") {
      //   this.$refs.pape.focus();
      //   bande = false;
      //   this.$swal(
      //     "Error...!",
      //     "Por favor digite el primer apellido!",
      //     "error"
      //   );
      //   return;
      // }
      // if (this.caracData.estado_civil === "") {
      //   this.$refs.estado_civil.focus();
      //   bande = false;
      //   this.$swal(
      //     "Error...!",
      //     "Por favor seleccione el estado civil!",
      //     "error"
      //   );
      //   return;
      // }
      // if (this.caracData.fecha_nacimiento === "") {
      //   this.$refs.fecha_nacimiento.focus();
      //   bande = false;
      //   this.$swal(
      //     "Error...!",
      //     "Por favor seleccione la fecha de nacimiento!",
      //     "error"
      //   );
      //   return;
      // }        
      // if (this.caracData.afiliacion_entidad === "") {
      //   this.$refs.afiliacion_entidad.focus();
      //   bande = false;
      //   this.$swal("Error...!", "Por favor seleccione la eps!", "error");
      //   return;
      // }
      // if (this.caracData.tipo_afiliacion === "") {
      //   this.$refs.tipo_afiliacion.focus();
      //   bande = false;
      //   this.$swal("Error...!", "Por favor seleccione el tipo de afiliación!", "error");
      //   return;
      // }        
      // if (this.caracData.ocupacion === "") {
      //   this.$refs.ocupacion.focus();
      //   bande = false;
      //   this.$swal("Error...!", "Por favor seleccione la ocupación!", "error");
      //   return;
      // }
      // if (this.caracData.etnia === "") {
      //   this.$refs.etnia.focus();
      //   bande = false;
      //   this.$swal("Error...!", "Por favor seleccione la etnia!", "error");
      //   return;
      // }
      // if (this.caracData.clasificacion === "") {
      //   this.$refs.clasificacion.focus();
      //   bande = false;
      //   this.$swal(
      //     "Error...!",
      //     "Por favor seleccione la clasificacion de la etnia!",
      //     "error"
      //   );
      //   return;
      // }
      // if (this.caracData.salario === "") {
      //   this.$refs.salario.focus();
      //   bande = false;
      //   this.$swal("Error...!", "Por favor digite el salario!", "error");
      //   return;
      // }
      // if (this.caracData.perdida_peso === "") {
      //   this.$refs.perdida_peso.focus();
      //   bande = false;
      //   this.$swal(
      //     "Error...!",
      //     "Por favor seleccione la perdida de peso en los ultimos 3 meses!",
      //     "error"
      //   );
      //   return;
      // }
      // if (this.caracData.programa_icbf === "") {
      //   bande = false;
      //   this.$swal(
      //     "Error...!",
      //     "Por favor seleccione si Pertenece a algún programa del ICBF!",
      //     "error"
      //   );
      //   return;
      // }
      // if (this.caracData.enfermedad_infecciosa === "") {
      //   bande = false;
      //   this.$swal("Error...!", "Por favor seleccione si tiene alguna enfermedad infecciosa!", "error");
      //   return;
      // }
      // if (this.caracData.enfermedad_cronica === "") {
      //   bande = false;
      //   this.$swal("Error...!", "Por favor seleccione si tiene alguna enfermedad cronica!", "error");
      //   return;
      // }
      // if (this.caracData.peso === "0") {
      //   bande = false;
      //   this.$swal("Error...!", "Por favor digite el peso!", "error");
      //   return;
      // }
      // if (this.caracData.talla === "0") {
      //   bande = false;
      //   this.$swal("Error...!", "Por favor digite la talla!", "error");
      //   return;
      // }                

      return bande;
      e.preventDefault();
    },
    showText: function showText(val, vectorAux) {
      for (var i = 0; i < vectorAux.length; i++) {
        if (vectorAux[i].value === val) {
          return vectorAux[i].texto;
        }
      }

      return "";
    },
    showText2: function showText2(val, vectorAux, id) {
      if (id === "") {
        return "";
      }

      for (var i = 0; i < vectorAux[id].length; i++) {
        if (vectorAux[id][i].value === val) {
          return vectorAux[id][i].texto;
        }
      }

      return "";
    },
    eliminarItemJefe: function eliminarItemJefe(index, item) {
      var _this7 = this;

      var nombre = " " + item.pnom + " " + item.snom + " " + item.pape + " " + item.sape;
      this.$swal({
        title: "¿Desea anular el jefe de hogar  " + nombre + "?",
        text: "",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Aceptar",
        cancelButtonText: "Cancelar"
      }).then(function (result) {
        if (result.value) {
          if (item.id === 0) {
            _this7.datosJefe.splice(index, 1);

            _this7.vectorJefes.splice(index, 1);

            var identificacion = item.identificacion;
            _this7.factores = _this7.factores.filter(function (men) {
              return men.identificacion != identificacion;
            });
            _this7.afectacion = _this7.afectacion.filter(function (men) {
              return men.identificacion != identificacion;
            });
            _this7.estratificacion = _this7.estratificacion.filter(function (men) {
              return men.id_jefe != identificacion;
            });
            _this7.Men1A = _this7.Men1A.filter(function (men) {
              return men.identificacion != identificacion;
            });
            _this7.De1A5 = _this7.De1A5.filter(function (men) {
              return men.identificacion != identificacion;
            });
            _this7.De6A11 = _this7.De6A11.filter(function (men) {
              return men.identificacion != identificacion;
            });
            _this7.De10A59 = _this7.De10A59.filter(function (men) {
              return men.identificacion != identificacion;
            });
            _this7.ParPost = _this7.ParPost.filter(function (men) {
              return men.identificacion != identificacion;
            });
            _this7.De12A17 = _this7.De12A17.filter(function (men) {
              return men.identificacion != identificacion;
            });
            _this7.De18A28 = _this7.De18A28.filter(function (men) {
              return men.identificacion != identificacion;
            });
            _this7.De29A59 = _this7.De29A59.filter(function (men) {
              return men.identificacion != identificacion;
            });
            _this7.De60 = _this7.De60.filter(function (men) {
              return men.identificacion != identificacion;
            });
            _this7.EnCro = _this7.EnCro.filter(function (men) {
              return men.identificacion != identificacion;
            });
            _this7.EnInf = _this7.EnInf.filter(function (men) {
              return men.identificacion != identificacion;
            });
            _this7.Migra = _this7.Migra.filter(function (men) {
              return men.identificacion != identificacion;
            });
          } else {
            var _identificacion = item.identificacion; // TABLA datos

            for (var i = 0; i < _this7.datos.length; i++) {
              if (_this7.datos[i].jefe === _identificacion) {
                _this7.$swal("Advertencia...!", "El jefe de hogar " + nombre + " tiene integrantes asociados asociados !", "warning");

                return;
              }
            } // TABLA datos


            var id = item.identificacion; //INACTIVAR LA FILA DE JEFES

            _this7.datosJefe[index].estado = "Inactivo";

            _this7.datosJefe.splice(index, 1, _this7.datosJefe[index]); //INACTIVAR LA FILA DE JEFES
            //SABER EL INDICE DE LA IDENTIFICACION DE De10A59


            var indice = _this7.De10A59.findIndex(function (identi) {
              return identi.identificacion === id;
            });

            if (indice >= 0) {
              _this7.De10A59[indice].estado = "Inactivo";

              _this7.De10A59.splice(indice, 1, _this7.De10A59[indice]);
            } //SABER EL INDICE DE LA IDENTIFICACION DE De10A59
            //SABER EL INDICE DE LA IDENTIFICACION DE ParPost


            indice = _this7.ParPost.findIndex(function (identi) {
              return identi.identificacion === id;
            });

            if (indice >= 0) {
              _this7.ParPost[indice].estado = "Inactivo";

              _this7.ParPost.splice(indice, 1, _this7.ParPost[indice]);
            } //SABER EL INDICE DE LA IDENTIFICACION DE ParPost
            //SABER EL INDICE DE LA IDENTIFICACION DE De12A17


            indice = _this7.De12A17.findIndex(function (identi) {
              return identi.identificacion === id;
            });

            if (indice >= 0) {
              _this7.De12A17[indice].estado = "Inactivo";

              _this7.De12A17.splice(indice, 1, _this7.De12A17[indice]);
            } //SABER EL INDICE DE LA IDENTIFICACION DE De12A17
            //SABER EL INDICE DE LA IDENTIFICACION DE De18A28


            indice = _this7.De18A28.findIndex(function (identi) {
              return identi.identificacion === id;
            });

            if (indice >= 0) {
              _this7.De18A28[indice].estado = "Inactivo";

              _this7.De18A28.splice(indice, 1, _this7.De18A28[indice]);
            } //SABER EL INDICE DE LA IDENTIFICACION DE De18A28
            //SABER EL INDICE DE LA IDENTIFICACION DE De29A59


            indice = _this7.De29A59.findIndex(function (identi) {
              return identi.identificacion === id;
            });

            if (indice >= 0) {
              _this7.De29A59[indice].estado = "Inactivo";

              _this7.De29A59.splice(indice, 1, _this7.De29A59[indice]);
            } //SABER EL INDICE DE LA IDENTIFICACION DE De29A59
            //SABER EL INDICE DE LA IDENTIFICACION DE De60


            indice = _this7.De60.findIndex(function (identi) {
              return identi.identificacion === id;
            });

            if (indice >= 0) {
              _this7.De60[indice].estado = "Inactivo";

              _this7.De60.splice(indice, 1, _this7.De60[indice]);
            } //SABER EL INDICE DE LA IDENTIFICACION DE De60
            //SABER EL INDICE DE LA IDENTIFICACION DE EnCro


            indice = _this7.EnCro.findIndex(function (identi) {
              return identi.identificacion === id;
            });

            if (indice >= 0) {
              _this7.EnCro[indice].estado = "Inactivo";

              _this7.EnCro.splice(indice, 1, _this7.EnCro[indice]);
            } //SABER EL INDICE DE LA IDENTIFICACION DE EnCro        
            //SABER EL INDICE DE LA IDENTIFICACION DE EnInf


            indice = _this7.EnInf.findIndex(function (identi) {
              return identi.identificacion === id;
            });

            if (indice >= 0) {
              _this7.EnInf[indice].estado = "Inactivo";

              _this7.EnInf.splice(indice, 1, _this7.EnInf[indice]);
            } //SABER EL INDICE DE LA IDENTIFICACION DE EnInf
            //SABER EL INDICE DE LA IDENTIFICACION DE Migra


            indice = _this7.Migra.findIndex(function (identi) {
              return identi.identificacion === id;
            });

            if (indice >= 0) {
              _this7.Migra[indice].estado = "Inactivo";

              _this7.Migra.splice(indice, 1, _this7.Migra[indice]);
            } //SABER EL INDICE DE LA IDENTIFICACION DE Migra              
            //SABER EL INDICE DE LA IDENTIFICACION DE factores


            indice = _this7.factores.findIndex(function (identi) {
              return identi.identificacion === id;
            });

            if (indice >= 0) {
              _this7.factores[indice].estado = "Inactivo";

              _this7.factores.splice(indice, 1, _this7.factores[indice]);
            } //SABER EL INDICE DE LA IDENTIFICACION DE factores
            //SABER EL INDICE DE LA IDENTIFICACION DE afectacion


            indice = _this7.afectacion.findIndex(function (identi) {
              return identi.identificacion === id;
            });

            if (indice >= 0) {
              _this7.afectacion[indice].estado = "Inactivo";

              _this7.afectacion.splice(indice, 1, _this7.afectacion[indice]);
            } //SABER EL INDICE DE LA IDENTIFICACION DE afectacion
            //SABER EL INDICE DE LA IDENTIFICACION DE estratificacion


            indice = _this7.estratificacion.findIndex(function (identi) {
              return identi.identificacion === id;
            });

            if (indice >= 0) {
              _this7.estratificacion[indice].estado = "Inactivo";

              _this7.estratificacion.splice(indice, 1, _this7.estratificacion[indice]);
            } //SABER EL INDICE DE LA IDENTIFICACION DE estratificacion              

          }

          _this7.$swal("Eliminar...!", "Datos En Proceso de Eliminación!", "success");
        }
      });
    },
    limpiar2: function limpiar2() {
      this.caracData.tipo_id = "";
      this.caracData.identificacion = "";
      this.caracData.sexo = "";
      this.caracData.parentesco = "33";
      this.caracData.pnom = "";
      this.caracData.snom = "";
      this.caracData.pape = "";
      this.caracData.sape = "";
      this.caracData.estado_civil = "";
      this.caracData.fecha_nacimiento = "";
      this.caracData.salario = "";
      this.caracData.telefono = "";
      this.caracData.edad = 0;
      this.caracData.afiliacion_entidad = "";
      this.caracData.otra_eps = "";
      this.caracData.tipo_afiliacion = "";
      this.caracData.embarazo = "";
      this.caracData.embarazo_multiple = "";
      this.caracData.discapacidad = "";
      this.caracData.nivel_escolaridad = "";
      this.caracData.ocupacion = "";
      this.caracData.colegio = "";
      this.caracData.grado = "";
      this.caracData.entiende = "";
      this.caracData.migrante = "";
      this.caracData.pyp = "";
      this.caracData.etnia = "";
      this.caracData.clasificacion = "";
      this.caracData.puntaje_sisben = "";
      this.caracData.orientacion = "";
      this.caracData.identidad_genero = "";
      this.caracData.perdida_peso = "";
      this.caracData.programa_icbf = "";
      this.bandeGuaEdiJefe = true;
      this.indiceEditJefe = null;
      this.ocupacionAuxiliar = "";
      this.idEditar = null;
      this.identificacionEditar = null;
      this.fechaEditar = null;
      this.edadEditar = null;
      this.embarazoEditar = null;
      this.identificacionJefe = null;
      this.caracData.enfermedad_infecciosa = "";
      this.caracData.enfermedad_cronica = "";
      this.caracData.peso = "0";
      this.caracData.talla = "0";
    },
    updateJefe: function updateJefe(item, valor, opcion, index) {
      if (opcion === "tipo_id") {
        //SABER LA IDENTIFICACION EN EL VECTOR DE JEFES SEGUN EL INDICE Q
        //VIENE DE LA TABLA
        var id = this.vectorJefes[index].identificacion; //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY

        var indice = this.factores.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.factores[indice].tipo_id = valor;
          this.factores.splice(indice, 1, this.factores[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De10A59.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.De10A59[indice].tipo_id = valor;
          this.De10A59.splice(indice, 1, this.De10A59[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.ParPost.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.ParPost[indice].tipo_id = valor;
          this.ParPost.splice(indice, 1, this.ParPost[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De12A17.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.De12A17[indice].tipo_id = valor;
          this.De12A17.splice(indice, 1, this.De12A17[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De18A28.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.De18A28[indice].tipo_id = valor;
          this.De18A28.splice(indice, 1, this.De18A28[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De29A59.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.De29A59[indice].tipo_id = valor;
          this.De29A59.splice(indice, 1, this.De29A59[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De60.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.De60[indice].tipo_id = valor;
          this.De60.splice(indice, 1, this.De60[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.Migra.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.Migra[indice].tipo_id = valor;
          this.Migra.splice(indice, 1, this.Migra[indice]);
        }
      }

      if (opcion === "sexo") {
        if (item.sexo === "") {
          item.embarazo = "";
          item.embarazo_multiple = "";
        }

        if (item.sexo === "MASCULINO") {
          item.embarazo = "NOAPLICA";
          item.embarazo_multiple = "NOAPLICA";
        }

        if (item.sexo === "FEMENINO") {
          item.embarazo = "";
          item.embarazo_multiple = "";
        } //SABER LA IDENTIFICACION EN EL VECTOR DE JEFES SEGUN EL INDICE Q
        //VIENE DE LA TABLA


        var _id = this.vectorJefes[index].identificacion; //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY

        var _indice = this.factores.findIndex(function (identi) {
          return identi.identificacion === _id;
        });

        if (_indice >= 0) {
          this.factores[_indice].sexo = valor;
          this.factores.splice(_indice, 1, this.factores[_indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice = this.De10A59.findIndex(function (identi) {
          return identi.identificacion === _id;
        });

        if (_indice >= 0) {
          this.De10A59[_indice].sexo = valor;
          this.De10A59.splice(_indice, 1, this.De10A59[_indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice = this.ParPost.findIndex(function (identi) {
          return identi.identificacion === _id;
        });

        if (_indice >= 0) {
          this.ParPost[_indice].sexo = valor;
          this.ParPost.splice(_indice, 1, this.ParPost[_indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice = this.De12A17.findIndex(function (identi) {
          return identi.identificacion === _id;
        });

        if (_indice >= 0) {
          this.De12A17[_indice].sexo = valor;
          this.De12A17.splice(_indice, 1, this.De12A17[_indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice = this.De18A28.findIndex(function (identi) {
          return identi.identificacion === _id;
        });

        if (_indice >= 0) {
          this.De18A28[_indice].sexo = valor;
          this.De18A28.splice(_indice, 1, this.De18A28[_indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice = this.De29A59.findIndex(function (identi) {
          return identi.identificacion === _id;
        });

        if (_indice >= 0) {
          this.De29A59[_indice].sexo = valor;
          this.De29A59.splice(_indice, 1, this.De29A59[_indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice = this.De60.findIndex(function (identi) {
          return identi.identificacion === _id;
        });

        if (_indice >= 0) {
          this.De60[_indice].sexo = valor;
          this.De60.splice(_indice, 1, this.De60[_indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice = this.Migra.findIndex(function (identi) {
          return identi.identificacion === _id;
        });

        if (_indice >= 0) {
          this.Migra[_indice].sexo = valor;
          this.Migra.splice(_indice, 1, this.Migra[_indice]);
        }
      }

      if (opcion === "embarazo") {
        if (item.embarazo === "") {
          item.embarazo_multiple = "";
        }

        if (item.embarazo === "SI") {
          item.embarazo_multiple = "";
        }

        if (item.embarazo === "NO") {
          item.embarazo_multiple = "NO";
        }
      }

      if (opcion === "afiliacion_entidad") {
        if (item.afiliacion_entidad === "NINGUNA") {
          item.tipo_afiliacion = "0";
        } else {
          if (item.afiliacion_entidad === "OTRA") {
            item.otra_eps = "";
          } else {
            item.tipo_afiliacion = "";
          }
        }
      }

      if (opcion === "nivel_escolaridad") {
        item.colegio = "";
        item.grado = "";
      }
    },
    changeupdateJefe: function changeupdateJefe(item, event, opcion, index) {
      if (opcion == "identificacion") {
        //SABER LA IDENTIFICACION EN EL VECTOR DE JEFES SEGUN EL INDICE Q
        //VIENE DE LA TABLA
        var id = this.vectorJefes[index].identificacion; //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY

        var indice = this.factores.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.factores[indice].identificacion = item.identificacion;
          this.factores.splice(indice, 1, this.factores[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De10A59.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De10A59[indice].identificacion = item.identificacion;
          this.De10A59.splice(indice, 1, this.De10A59[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.ParPost.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.ParPost[indice].identificacion = item.identificacion;
          this.ParPost.splice(indice, 1, this.ParPost[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De12A17.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De12A17[indice].identificacion = item.identificacion;
          this.De12A17.splice(indice, 1, this.De12A17[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De18A28.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De18A28[indice].identificacion = item.identificacion;
          this.De18A28.splice(indice, 1, this.De18A28[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De29A59.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De29A59[indice].identificacion = item.identificacion;
          this.De29A59.splice(indice, 1, this.De29A59[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De60.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De60[indice].identificacion = item.identificacion;
          this.De60.splice(indice, 1, this.De60[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.Migra.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.Migra[indice].identificacion = item.identificacion;
          this.Migra.splice(indice, 1, this.Migra[indice]);
        } //CAMBIAR LA IDENTIFICACION DEL VECTOR JEFE POR LA NUEVA IDENTIFICACION
        //DIGITADA EN LA TABLA


        this.vectorJefes[index].identificacion = item.identificacion; // Vue.set(this.vectorJefes, 1, this.vectorJefes[index]);

        this.vectorJefes.splice(index, 1, this.vectorJefes[index]);
      }

      if (opcion == "pnom") {
        //SABER LA IDENTIFICACION EN EL VECTOR DE JEFES SEGUN EL INDICE Q
        //VIENE DE LA TABLA
        var _id2 = this.vectorJefes[index].identificacion; //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY

        var _indice2 = this.factores.findIndex(function (identi) {
          return identi.identificacion === _id2;
        });

        if (_indice2 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.factores[_indice2].pnom = item.pnom;
          this.factores.splice(_indice2, 1, this.factores[_indice2]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice2 = this.De10A59.findIndex(function (identi) {
          return identi.identificacion === _id2;
        });

        if (_indice2 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De10A59[_indice2].pnom = item.pnom;
          this.De10A59.splice(_indice2, 1, this.De10A59[_indice2]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice2 = this.ParPost.findIndex(function (identi) {
          return identi.identificacion === _id2;
        });

        if (_indice2 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.ParPost[_indice2].pnom = item.pnom;
          this.ParPost.splice(_indice2, 1, this.ParPost[_indice2]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice2 = this.De12A17.findIndex(function (identi) {
          return identi.identificacion === _id2;
        });

        if (_indice2 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De12A17[_indice2].pnom = item.pnom;
          this.De12A17.splice(_indice2, 1, this.De12A17[_indice2]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice2 = this.De18A28.findIndex(function (identi) {
          return identi.identificacion === _id2;
        });

        if (_indice2 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De18A28[_indice2].pnom = item.pnom;
          this.De18A28.splice(_indice2, 1, this.De18A28[_indice2]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice2 = this.De29A59.findIndex(function (identi) {
          return identi.identificacion === _id2;
        });

        if (_indice2 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De29A59[_indice2].pnom = item.pnom;
          this.De29A59.splice(_indice2, 1, this.De29A59[_indice2]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice2 = this.De60.findIndex(function (identi) {
          return identi.identificacion === _id2;
        });

        if (_indice2 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De60[_indice2].pnom = item.pnom;
          this.De60.splice(_indice2, 1, this.De60[_indice2]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice2 = this.Migra.findIndex(function (identi) {
          return identi.identificacion === _id2;
        });

        if (_indice2 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.Migra[_indice2].pnom = item.pnom;
          this.Migra.splice(_indice2, 1, this.Migra[_indice2]);
        }
      }

      if (opcion == "snom") {
        //SABER LA IDENTIFICACION EN EL VECTOR DE JEFES SEGUN EL INDICE Q
        //VIENE DE LA TABLA
        var _id3 = this.vectorJefes[index].identificacion; //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY

        var _indice3 = this.factores.findIndex(function (identi) {
          return identi.identificacion === _id3;
        });

        if (_indice3 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.factores[_indice3].snom = item.snom;
          this.factores.splice(_indice3, 1, this.factores[_indice3]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice3 = this.De10A59.findIndex(function (identi) {
          return identi.identificacion === _id3;
        });

        if (_indice3 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De10A59[_indice3].snom = item.snom;
          this.De10A59.splice(_indice3, 1, this.De10A59[_indice3]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice3 = this.ParPost.findIndex(function (identi) {
          return identi.identificacion === _id3;
        });

        if (_indice3 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.ParPost[_indice3].snom = item.snom;
          this.ParPost.splice(_indice3, 1, this.ParPost[_indice3]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice3 = this.De12A17.findIndex(function (identi) {
          return identi.identificacion === _id3;
        });

        if (_indice3 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De12A17[_indice3].snom = item.snom;
          this.De12A17.splice(_indice3, 1, this.De12A17[_indice3]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice3 = this.De18A28.findIndex(function (identi) {
          return identi.identificacion === _id3;
        });

        if (_indice3 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De18A28[_indice3].snom = item.snom;
          this.De18A28.splice(_indice3, 1, this.De18A28[_indice3]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice3 = this.De29A59.findIndex(function (identi) {
          return identi.identificacion === _id3;
        });

        if (_indice3 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De29A59[_indice3].snom = item.snom;
          this.De29A59.splice(_indice3, 1, this.De29A59[_indice3]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice3 = this.De60.findIndex(function (identi) {
          return identi.identificacion === _id3;
        });

        if (_indice3 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De60[_indice3].snom = item.snom;
          this.De60.splice(_indice3, 1, this.De60[_indice3]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice3 = this.Migra.findIndex(function (identi) {
          return identi.identificacion === _id3;
        });

        if (_indice3 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.Migra[_indice3].snom = item.snom;
          this.Migra.splice(_indice3, 1, this.Migra[_indice3]);
        }
      }

      if (opcion == "pape") {
        //SABER LA IDENTIFICACION EN EL VECTOR DE JEFES SEGUN EL INDICE Q
        //VIENE DE LA TABLA
        var _id4 = this.vectorJefes[index].identificacion; //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY

        var _indice4 = this.factores.findIndex(function (identi) {
          return identi.identificacion === _id4;
        });

        if (_indice4 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.factores[_indice4].pape = item.pape;
          this.factores.splice(_indice4, 1, this.factores[_indice4]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice4 = this.De10A59.findIndex(function (identi) {
          return identi.identificacion === _id4;
        });

        if (_indice4 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De10A59[_indice4].pape = item.pape;
          this.De10A59.splice(_indice4, 1, this.De10A59[_indice4]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice4 = this.ParPost.findIndex(function (identi) {
          return identi.identificacion === _id4;
        });

        if (_indice4 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.ParPost[_indice4].pape = item.pape;
          this.ParPost.splice(_indice4, 1, this.ParPost[_indice4]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice4 = this.De12A17.findIndex(function (identi) {
          return identi.identificacion === _id4;
        });

        if (_indice4 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De12A17[_indice4].pape = item.pape;
          this.De12A17.splice(_indice4, 1, this.De12A17[_indice4]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice4 = this.De18A28.findIndex(function (identi) {
          return identi.identificacion === _id4;
        });

        if (_indice4 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De18A28[_indice4].pape = item.pape;
          this.De18A28.splice(_indice4, 1, this.De18A28[_indice4]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice4 = this.De29A59.findIndex(function (identi) {
          return identi.identificacion === _id4;
        });

        if (_indice4 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De29A59[_indice4].pape = item.pape;
          this.De29A59.splice(_indice4, 1, this.De29A59[_indice4]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice4 = this.De60.findIndex(function (identi) {
          return identi.identificacion === _id4;
        });

        if (_indice4 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De60[_indice4].pape = item.pape;
          this.De60.splice(_indice4, 1, this.De60[_indice4]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice4 = this.Migra.findIndex(function (identi) {
          return identi.identificacion === _id4;
        });

        if (_indice4 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.Migra[_indice4].pape = item.pape;
          this.Migra.splice(_indice4, 1, this.Migra[_indice4]);
        }
      }

      if (opcion == "sape") {
        //SABER LA IDENTIFICACION EN EL VECTOR DE JEFES SEGUN EL INDICE Q
        //VIENE DE LA TABLA
        var _id5 = this.vectorJefes[index].identificacion; //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY

        var _indice5 = this.factores.findIndex(function (identi) {
          return identi.identificacion === _id5;
        });

        if (_indice5 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.factores[_indice5].sape = item.sape;
          this.factores.splice(_indice5, 1, this.factores[_indice5]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice5 = this.De10A59.findIndex(function (identi) {
          return identi.identificacion === _id5;
        });

        if (_indice5 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De10A59[_indice5].sape = item.sape;
          this.De10A59.splice(_indice5, 1, this.De10A59[_indice5]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice5 = this.ParPost.findIndex(function (identi) {
          return identi.identificacion === _id5;
        });

        if (_indice5 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.ParPost[_indice5].sape = item.sape;
          this.ParPost.splice(_indice5, 1, this.ParPost[_indice5]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice5 = this.De12A17.findIndex(function (identi) {
          return identi.identificacion === _id5;
        });

        if (_indice5 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De12A17[_indice5].sape = item.sape;
          this.De12A17.splice(_indice5, 1, this.De12A17[_indice5]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice5 = this.De18A28.findIndex(function (identi) {
          return identi.identificacion === _id5;
        });

        if (_indice5 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De18A28[_indice5].sape = item.sape;
          this.De18A28.splice(_indice5, 1, this.De18A28[_indice5]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice5 = this.De29A59.findIndex(function (identi) {
          return identi.identificacion === _id5;
        });

        if (_indice5 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De29A59[_indice5].sape = item.sape;
          this.De29A59.splice(_indice5, 1, this.De29A59[_indice5]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice5 = this.De60.findIndex(function (identi) {
          return identi.identificacion === _id5;
        });

        if (_indice5 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De60[_indice5].sape = item.sape;
          this.De60.splice(_indice5, 1, this.De60[_indice5]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice5 = this.Migra.findIndex(function (identi) {
          return identi.identificacion === _id5;
        });

        if (_indice5 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.Migra[_indice5].sape = item.sape;
          this.Migra.splice(_indice5, 1, this.Migra[_indice5]);
        }
      }

      if (opcion == "salario") {
        item.salario = event.target.value.replace(/[.*+\-?^${}()|[\]\\]/g, "");
        var val = (item.salario / 1).toFixed(0).replace(".", ",");
        item.salario = val.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

        if (item.salario == "NaN") {
          item.salario = "";
        }

        if (item.salario == "0") {
          item.salario = "";
        }
      }
    },
    AFactores: function AFactores(vector, edad) {
      this.factores.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        edad: edad,
        dialogos: "",
        sancion: "",
        castigo_verbal: "",
        castigo_fisico: "",
        alcohol: "",
        tabaco: "",
        sustancias_psico: "",
        apuestas: "",
        violencia_fisica: "",
        violencia_psico: "",
        violencia_economica: "",
        abuso_sexual: "",
        actividad_fisica: "",
        consumo_frutas: "",
        religiosos: "",
        sociales: "",
        culturales: "",
        recreativos: "",
        estado: "Activo"
      });
    },
    AAFECTACION: function AAFECTACION(vector, edad) {
      this.afectacion.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        edad: edad,
        presentado: "",
        prueba: "",
        afectado: "",
        nivel: "",
        porcentaje: "",
        perdida: "",
        sobrelleva: "",
        percibe: "",
        principal: "",
        tiempo: "",
        estado: "Activo"
      });
    },
    datediff: function datediff(date1, date2) {
      var fecha1 = date1.split("-");
      var fecha2 = date2.split("-");
      var y1 = fecha1[0],
          m1 = fecha1[1],
          d1 = fecha1[2],
          y2 = fecha2[0],
          m2 = fecha2[1],
          d2 = fecha2[2];

      if (d1 < d2) {
        m1--;
        d1 += this.DaysInMonth(y2, m2);
      }

      if (m1 < m2) {
        y1--;
        m1 += 12;
      }

      return [y1 - y2, m1 - m2, d1 - d2];
    },
    DaysInMonth: function DaysInMonth(Y, M) {
      return new Date(Y, M, 1, 12).getDate();
    },
    validarTablaJefes: function () {
      var _validarTablaJefes = _asyncToGenerator(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee7() {
        var _this8 = this;

        var _loop3, i;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee7$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                _loop3 =
                /*#__PURE__*/
                _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _loop3(i) {
                  var parametros;
                  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _loop3$(_context7) {
                    while (1) {
                      switch (_context7.prev = _context7.next) {
                        case 0:
                          parametros = {
                            _token: _this8.csrf,
                            identificacion: _this8.datosJefe[i].identificacion
                          };
                          _context7.prev = 1;
                          _context7.next = 4;
                          return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["validarJefe"](parametros).then(function (respuesta) {
                            if (respuesta.data.OPC == "EXISTE") {
                              var val = (respuesta.data.identificacion / 1).toFixed(0).replace(".", ",");
                              var iden = val.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

                              _this8.$swal("Validar...!", "El Documento <b>" + iden + "</b> De La Fila <b>" + (i + 1) + "</b> Se Encuentra Registrado", "warning"); // item.identificacion="";


                              return false;
                            } else {
                              // VERIFICAR SI ESTA EN LA TABLA
                              var resultado = _this8.datosJefe.filter(function (identi) {
                                return identi.identificacion.includes(_this8.datosJefe[i].identificacion);
                              }); // VERIFICAR SI ESTA EN LA TABLA


                              if (resultado.length > 1) {
                                _this8.$swal("Validar...!", "El Documento <b>" + _this8.datosJefe[i].identificacion + "</b> De La Fila <b>" + (i + 1) + "</b>  Se Encuentra Agregado En La Tabla de Jefes de Hogar", "warning"); // item.identificacion="";


                                return false;
                              } else {
                                if (_this8.datosJefe[i].tipo_id === "") {
                                  _this8.$swal("Error...!", "Por favor seleccione un <b>tipo de identificación</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");

                                  return false;
                                }

                                if (_this8.datosJefe[i].identificacion === "") {
                                  _this8.$swal("Error...!", "Por favor digite una <b>identificación</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");

                                  return false;
                                }

                                if (_this8.datosJefe[i].pnom === "") {
                                  _this8.$swal("Error...!", "Por favor digite el <b>primer nombre</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");

                                  return false;
                                }

                                if (_this8.datosJefe[i].pape === "") {
                                  _this8.$swal("Error...!", "Por favor digite el <b>primer apellido</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");

                                  return false;
                                }

                                if (_this8.datosJefe[i].sexo === "") {
                                  _this8.$swal("Error...!", "Por favor seleccione el <b>sexo</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");

                                  return false;
                                }

                                if (_this8.datosJefe[i].parentesco === "") {
                                  _this8.$swal("Error...!", "Por favor seleccione el <b>parentesco</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");

                                  return false;
                                }

                                if (_this8.datosJefe[i].estado_civil === "") {
                                  _this8.$swal("Error...!", "Por favor seleccione el <b>estado civil</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");

                                  return false;
                                }

                                if (_this8.datosJefe[i].fecha_nacimiento === "") {
                                  _this8.$swal("Error...!", "Por favor seleccione la <b>fecha de nacimiento</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");

                                  return false;
                                }

                                if (_this8.datosJefe[i].afiliacion_entidad === "") {
                                  _this8.$swal("Error...!", "Por favor seleccione la <b>eps</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");

                                  return false;
                                }

                                if (_this8.datosJefe[i].tipo_afiliacion === "") {
                                  _this8.$swal("Error...!", "Por favor seleccione el <b>tipo de afiliación</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");

                                  return false;
                                }

                                if (_this8.datosJefe[i].nivel_escolaridad === "") {
                                  _this8.$swal("Error...!", "Por favor seleccione el <b>nivel de escolaridad</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");

                                  return false;
                                }

                                if (_this8.datosJefe[i].ocupacion === "") {
                                  _this8.$swal("Error...!", "Por favor seleccione la <b>ocupación</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");

                                  return false;
                                }

                                if (_this8.datosJefe[i].etnia === "") {
                                  _this8.$swal("Error...!", "Por favor seleccione la <b>etnia</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");

                                  return false;
                                }

                                if (_this8.datosJefe[i].clasificacion === "") {
                                  _this8.$swal("Error...!", "Por favor seleccione la <b>clasificacion de la etnia</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");

                                  return false;
                                }

                                if (_this8.datosJefe[i].salario === "") {
                                  _this8.$swal("Error...!", "Por favor digite el <b>salario</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");

                                  return false;
                                }

                                return true;
                              }
                            }
                          })["catch"](function (error) {});

                        case 4:
                          _context7.next = 8;
                          break;

                        case 6:
                          _context7.prev = 6;
                          _context7.t0 = _context7["catch"](1);

                        case 8:
                        case "end":
                          return _context7.stop();
                      }
                    }
                  }, _loop3, null, [[1, 6]]);
                });
                i = 0;

              case 2:
                if (!(i < this.datosJefe.length)) {
                  _context8.next = 7;
                  break;
                }

                return _context8.delegateYield(_loop3(i), "t0", 4);

              case 4:
                i++;
                _context8.next = 2;
                break;

              case 7:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee7, this);
      }));

      function validarTablaJefes() {
        return _validarTablaJefes.apply(this, arguments);
      }

      return validarTablaJefes;
    }(),
    editarItemJefe: function editarItemJefe(index, item) {
      this.bandeGuaEdiJefe = false;
      this.indiceEditJefe = index;
      this.caracData.id = item.id;
      this.caracData.id_hogar = item.id_hogar;
      this.caracData.telefono = item.telefono;
      this.caracData.puntaje_sisben = item.puntaje_sisben;
      this.caracData.afiliacion_entidad = item.afiliacion_entidad;
      this.caracData.otra_eps = item.otra_eps;
      this.caracData.tipo_id = item.tipo_id;
      this.caracData.identificacion = item.identificacion;
      this.caracData.sexo = item.sexo;
      this.caracData.parentesco = item.parentesco;
      this.caracData.pnom = item.pnom;
      this.caracData.snom = item.snom;
      this.caracData.pape = item.pape;
      this.caracData.sape = item.sape;
      this.caracData.salario = item.salario;
      this.caracData.id_compania = item.id_compania;
      this.caracData.estado = item.estado;
      this.caracData.estado_civil = item.estado_civil;
      this.caracData.fecha_nacimiento = item.fecha_nacimiento;
      this.caracData.tipo_afiliacion = item.tipo_afiliacion;
      this.caracData.embarazo = item.embarazo;
      this.caracData.embarazo_multiple = item.embarazo_multiple;
      this.caracData.discapacidad = item.discapacidad;
      this.caracData.nivel_escolaridad = item.nivel_escolaridad;
      this.caracData.ocupacion = item.ocupacion;
      this.caracData.colegio = item.colegio;
      this.caracData.grado = item.grado;
      this.caracData.etnia = item.etnia;
      this.caracData.clasificacion = item.clasificacion;
      this.caracData.entiende = item.entiende;
      this.caracData.pyp = item.pyp;
      this.caracData.migrante = item.migrante;
      this.caracData.edad = item.edad;
      this.caracData.orientacion = item.orientacion;
      this.caracData.identidad_genero = item.identidad_genero;
      this.caracData.perdida_peso = item.perdida_peso;
      this.caracData.programa_icbf = item.programa_icbf;
      this.ocupacionAuxiliar = item.textoOcupacion;
      this.caracData.enfermedad_infecciosa = item.enfermedad_infecciosa;
      this.caracData.enfermedad_cronica = item.enfermedad_cronica;
      this.caracData.peso = item.peso;
      this.caracData.talla = item.talla;
      this.$refs.identificacionJefe.focus();
      this.idEditar = item.id;
      this.identificacionEditar = item.identificacion;
      this.fechaEditar = item.fecha_nacimiento;
      this.edadEditar = item.edad;
      this.embarazoEditar = item.embarazo;
      this.identificacionJefe = item.identificacion;
      var id = item.identificacion; //INACTIVAR LA FILA DE JEFES

      this.datosJefe[this.indiceEditJefe].estado = "Inactivo";
      this.datosJefe.splice(this.indiceEditJefe, 1, this.datosJefe[this.indiceEditJefe]); //INACTIVAR LA FILA DE JEFES
      //SABER EL INDICE DE LA IDENTIFICACION DE De10A59

      var indice = this.De10A59.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.De10A59[indice].estado = "Inactivo";
        this.De10A59.splice(indice, 1, this.De10A59[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE De10A59
      //SABER EL INDICE DE LA IDENTIFICACION DE ParPost


      indice = this.ParPost.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.ParPost[indice].estado = "Inactivo";
        this.ParPost.splice(indice, 1, this.ParPost[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE ParPost
      //SABER EL INDICE DE LA IDENTIFICACION DE De12A17


      indice = this.De12A17.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.De12A17[indice].estado = "Inactivo";
        this.De12A17.splice(indice, 1, this.De12A17[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE De12A17
      //SABER EL INDICE DE LA IDENTIFICACION DE De18A28


      indice = this.De18A28.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.De18A28[indice].estado = "Inactivo";
        this.De18A28.splice(indice, 1, this.De18A28[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE De18A28
      //SABER EL INDICE DE LA IDENTIFICACION DE De29A59


      indice = this.De29A59.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.De29A59[indice].estado = "Inactivo";
        this.De29A59.splice(indice, 1, this.De29A59[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE De29A59
      //SABER EL INDICE DE LA IDENTIFICACION DE De60


      indice = this.De60.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.De60[indice].estado = "Inactivo";
        this.De60.splice(indice, 1, this.De60[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE De60
      //SABER EL INDICE DE LA IDENTIFICACION DE EnCro


      indice = this.EnCro.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.EnCro[indice].estado = "Inactivo";
        this.EnCro.splice(indice, 1, this.EnCro[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE EnCro        
      //SABER EL INDICE DE LA IDENTIFICACION DE EnInf


      indice = this.EnInf.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.EnInf[indice].estado = "Inactivo";
        this.EnInf.splice(indice, 1, this.EnInf[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE EnInf
      //SABER EL INDICE DE LA IDENTIFICACION DE Migra


      indice = this.Migra.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.Migra[indice].estado = "Inactivo";
        this.Migra.splice(indice, 1, this.Migra[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE Migra        

    },
    CancelarEditarJefe: function CancelarEditarJefe() {
      this.datosJefe[this.indiceEditJefe].estado = "Activo";
      this.datosJefe.splice(this.indiceEditJefe, 1, this.datosJefe[this.indiceEditJefe]);
      var id = this.identificacionEditar; //SABER EL INDICE DE LA IDENTIFICACION DE De10A59

      var indice = this.De10A59.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.De10A59[indice].estado = "Activo";
        this.De10A59.splice(indice, 1, this.De10A59[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE De10A59
      //SABER EL INDICE DE LA IDENTIFICACION DE ParPost


      indice = this.ParPost.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.ParPost[indice].estado = "Activo";
        this.ParPost.splice(indice, 1, this.ParPost[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE ParPost
      //SABER EL INDICE DE LA IDENTIFICACION DE De12A17


      indice = this.De12A17.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.De12A17[indice].estado = "Activo";
        this.De12A17.splice(indice, 1, this.De12A17[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE De12A17
      //SABER EL INDICE DE LA IDENTIFICACION DE De18A28


      indice = this.De18A28.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.De18A28[indice].estado = "Activo";
        this.De18A28.splice(indice, 1, this.De18A28[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE De18A28
      //SABER EL INDICE DE LA IDENTIFICACION DE De29A59


      indice = this.De29A59.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.De29A59[indice].estado = "Activo";
        this.De29A59.splice(indice, 1, this.De29A59[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE De29A59
      //SABER EL INDICE DE LA IDENTIFICACION DE De60


      indice = this.De60.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.De60[indice].estado = "Activo";
        this.De60.splice(indice, 1, this.De60[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE De60
      //SABER EL INDICE DE LA IDENTIFICACION DE EnCro


      indice = this.EnCro.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.EnCro[indice].estado = "Activo";
        this.EnCro.splice(indice, 1, this.EnCro[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE EnCro        
      //SABER EL INDICE DE LA IDENTIFICACION DE EnInf


      indice = this.EnInf.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.EnInf[indice].estado = "Activo";
        this.EnInf.splice(indice, 1, this.EnInf[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE EnInf
      //SABER EL INDICE DE LA IDENTIFICACION DE Migra


      indice = this.Migra.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.Migra[indice].estado = "Activo";
        this.Migra.splice(indice, 1, this.Migra[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE Migra        


      this.limpiar2();
    },
    editarJefe: function () {
      var _editarJefe = _asyncToGenerator(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee8() {
        var _this9 = this;

        var parametros;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee8$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                this.caracData.identificacion = this.caracData.identificacion.replace(/[.*+\-?^${}()|[\]\\]/g, "");

                if (!(this.identificacionEditar === this.caracData.identificacion)) {
                  _context9.next = 5;
                  break;
                }

                this.ediJe();
                _context9.next = 16;
                break;

              case 5:
                if (!(this.checkForm() === true)) {
                  _context9.next = 16;
                  break;
                }

                // VALIDAR SI EL JEFE DE HOGAR SE ENCUENTRA AGREGADO
                parametros = {
                  _token: this.csrf,
                  identificacion: this.caracData.identificacion
                };
                _context9.prev = 7;
                _context9.next = 10;
                return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["validarJefe"](parametros).then(function (respuesta) {
                  if (respuesta.data.OPC == "EXISTE") {
                    var val = (respuesta.data.identificacion / 1).toFixed(0).replace(".", ",");
                    var iden = val.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

                    _this9.$swal("Validar...!", "El Documento <b>" + iden + "</b> Se Encuentra Registrado", "warning");

                    return false;
                  } else {
                    // VERIFICAR SI ESTA EN LA TABLA
                    var resultado = _this9.datosJefe.filter(function (identi) {
                      return identi.identificacion == _this9.caracData.identificacion;
                    }); // VERIFICAR SI ESTA EN LA TABLA


                    if (resultado.length) {
                      _this9.$swal("Validar...!", "El Documento <b>" + _this9.caracData.identificacion + "</b> Se Encuentra Agregado", "warning");

                      return false;
                    } else {
                      _this9.ediJe();
                    }
                  }
                })["catch"](function (error) {
                  _this9.errorDevuelto = error.response.data.errors;
                  _this9.entrarPorError = true;
                });

              case 10:
                _context9.next = 16;
                break;

              case 12:
                _context9.prev = 12;
                _context9.t0 = _context9["catch"](7);
                this.errorDevuelto = _context9.t0.response.data.errors;
                this.entrarPorError = true;

              case 16:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee8, this, [[7, 12]]);
      }));

      function editarJefe() {
        return _editarJefe.apply(this, arguments);
      }

      return editarJefe;
    }(),
    ediJe: function ediJe() {
      var nacimiento = moment(this.caracData.fecha_nacimiento);
      var hoy = moment();
      var edad = 0;

      if (nacimiento < hoy) {
        edad = hoy.diff(nacimiento, "years"); //Calculamos la diferencia en años
      }

      if (edad < 14) {
        this.$swal("Validar...!", "El Valor de la edad introducido no es aceptable, debe ser mayor ó igual a 14 años", "warning");
        return false;
      }

      var textoEps = "";

      if (this.caracData.afiliacion_entidad === "OTRA") {
        textoEps = "OTRA";
      } else {
        if (this.caracData.afiliacion_entidad === "NINGUNA") {
          textoEps = "NINGUNA";
        } else {
          textoEps = this.showText(this.caracData.afiliacion_entidad, this.admini_options);
        }
      }

      if (this.caracData.tipo_afiliacion === "CONTRIBUTIVO" || this.caracData.tipo_afiliacion === "ESPECIAL") {
        this.SAPU = true;
        this.estratificacionData.afiliacion_salud_privada = "SI";
      }

      this.ocupacionAuxiliar = "";
      this.mOCOL1 = false;

      for (var i = 0; i < this.datos.length; i++) {
        if (this.datos[i].jefe === this.identificacionJefe) {
          this.datos[i].jefe = this.caracData.identificacion;
          this.datos.splice(i, 1, this.datos[i]);
        }
      }

      var id = this.vectorJefes[this.indiceEditJefe].identificacion;

      if (this.caracData.fecha_nacimiento !== this.fechaEditar) {
        if (edad !== this.edadEditar) {
          //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY
          var indice = this.factores.findIndex(function (identi) {
            return identi.identificacion === id;
          });

          if (indice >= 0) {
            this.factores[indice].tipo_id = this.caracData.tipo_id;
            this.factores[indice].sexo = this.caracData.sexo;
            this.factores[indice].identificacion = this.caracData.identificacion;
            this.factores[indice].pnom = this.caracData.pnom;
            this.factores[indice].snom = this.caracData.snom;
            this.factores[indice].pape = this.caracData.pape;
            this.factores[indice].sape = this.caracData.sape;
            this.factores[indice].estado = "Activo";
            this.factores.splice(indice, 1, this.factores[indice]);
          } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


          indice = this.afectacion.findIndex(function (identi) {
            return identi.identificacion === id;
          });

          if (indice >= 0) {
            this.afectacion[indice].tipo_id = this.caracData.tipo_id;
            this.afectacion[indice].sexo = this.caracData.sexo;
            this.afectacion[indice].identificacion = this.caracData.identificacion;
            this.afectacion[indice].pnom = this.caracData.pnom;
            this.afectacion[indice].snom = this.caracData.snom;
            this.afectacion[indice].pape = this.caracData.pape;
            this.afectacion[indice].sape = this.caracData.sape;
            this.afectacion[indice].estado = "Activo";
            this.afectacion.splice(indice, 1, this.afectacion[indice]);
          } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


          indice = this.estratificacion.findIndex(function (identi) {
            return identi.id_jefe === id;
          });

          if (indice >= 0) {
            this.estratificacion[indice].id_jefe = this.caracData.identificacion;
            this.estratificacion[indice].estado = "Activo";
            this.estratificacion.splice(indice, 1, this.estratificacion[indice]);
          } // ELIMINO EN LOS CICLOS ESTA IDENTIFICACION Y LUEGO AGREGO EN LA EDAD CORRESPONDIENTE


          this.eliEdad(this.identificacionEditar, this.caracData, edad, "JEFE");
        } else {
          //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY
          var _indice6 = this.factores.findIndex(function (identi) {
            return identi.identificacion === id;
          });

          if (_indice6 >= 0) {
            this.factores[_indice6].tipo_id = this.caracData.tipo_id;
            this.factores[_indice6].sexo = this.caracData.sexo;
            this.factores[_indice6].identificacion = this.caracData.identificacion;
            this.factores[_indice6].pnom = this.caracData.pnom;
            this.factores[_indice6].snom = this.caracData.snom;
            this.factores[_indice6].pape = this.caracData.pape;
            this.factores[_indice6].sape = this.caracData.sape;
            this.factores[_indice6].estado = "Activo";
            this.factores.splice(_indice6, 1, this.factores[_indice6]);
          } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


          _indice6 = this.afectacion.findIndex(function (identi) {
            return identi.identificacion === id;
          });

          if (_indice6 >= 0) {
            this.afectacion[_indice6].tipo_id = this.caracData.tipo_id;
            this.afectacion[_indice6].sexo = this.caracData.sexo;
            this.afectacion[_indice6].identificacion = this.caracData.identificacion;
            this.afectacion[_indice6].pnom = this.caracData.pnom;
            this.afectacion[_indice6].snom = this.caracData.snom;
            this.afectacion[_indice6].pape = this.caracData.pape;
            this.afectacion[_indice6].sape = this.caracData.sape;
            this.afectacion[_indice6].estado = "Activo";
            this.afectacion.splice(_indice6, 1, this.afectacion[_indice6]);
          } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


          _indice6 = this.estratificacion.findIndex(function (identi) {
            return identi.id_jefe === id;
          });

          if (_indice6 >= 0) {
            this.estratificacion[_indice6].id_jefe = this.caracData.identificacion;
            this.estratificacion[_indice6].estado = "Activo";
            this.estratificacion.splice(_indice6, 1, this.estratificacion[_indice6]);
          } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


          _indice6 = this.De10A59.findIndex(function (identi) {
            return identi.identificacion === id;
          });

          if (_indice6 >= 0) {
            this.De10A59[_indice6].tipo_id = this.caracData.tipo_id;
            this.De10A59[_indice6].sexo = this.caracData.sexo;
            this.De10A59[_indice6].identificacion = this.caracData.identificacion;
            this.De10A59[_indice6].pnom = this.caracData.pnom;
            this.De10A59[_indice6].snom = this.caracData.snom;
            this.De10A59[_indice6].pape = this.caracData.pape;
            this.De10A59[_indice6].sape = this.caracData.sape;
            this.De10A59[_indice6].estado = "Activo";
            this.De10A59.splice(_indice6, 1, this.De10A59[_indice6]);
          }

          if (this.embarazoEditar === "SI") {
            _indice6 = this.ParPost.findIndex(function (identi) {
              return identi.identificacion === id;
            });

            if (this.caracData.embarazo === "SI") {
              //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY            
              if (_indice6 >= 0) {
                this.ParPost[_indice6].tipo_id = this.caracData.tipo_id;
                this.ParPost[_indice6].sexo = this.caracData.sexo;
                this.ParPost[_indice6].identificacion = this.caracData.identificacion;
                this.ParPost[_indice6].pnom = this.caracData.pnom;
                this.ParPost[_indice6].snom = this.caracData.snom;
                this.ParPost[_indice6].pape = this.caracData.pape;
                this.ParPost[_indice6].sape = this.caracData.sape;
                this.ParPost[_indice6].peso = this.caracData.peso;
                this.ParPost[_indice6].talla = this.caracData.talla;
                this.ParPost[_indice6].imc = this.calcularImc(this.caracData.peso, this.caracData.talla);
                this.ParPost[_indice6].estado = "Activo";
                this.ParPost.splice(_indice6, 1, this.ParPost[_indice6]);
              }
            } else if (this.caracData.embarazo === "NO") {
              //ELIMINO
              this.ParPost[_indice6].estado = "Inactivo";
              this.ParPost.splice(_indice6, 1, this.ParPost[_indice6]);
            }
          } else {
            if (this.caracData.embarazo === "SI") {
              //AGREGO
              this.AParPost(this.caracData, edad, "JEFE");
            }
          } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


          _indice6 = this.De12A17.findIndex(function (identi) {
            return identi.identificacion === id;
          });

          if (_indice6 >= 0) {
            this.De12A17[_indice6].tipo_id = this.caracData.tipo_id;
            this.De12A17[_indice6].sexo = this.caracData.sexo;
            this.De12A17[_indice6].identificacion = this.caracData.identificacion;
            this.De12A17[_indice6].pnom = this.caracData.pnom;
            this.De12A17[_indice6].snom = this.caracData.snom;
            this.De12A17[_indice6].pape = this.caracData.pape;
            this.De12A17[_indice6].sape = this.caracData.sape;
            this.De12A17[_indice6].peso = this.caracData.peso;
            this.De12A17[_indice6].talla = this.caracData.talla;
            this.De12A17[_indice6].imc = this.calcularImc(this.caracData.peso, this.caracData.talla);
            this.De12A17[_indice6].estado = "Activo";
            this.De12A17.splice(_indice6, 1, this.De12A17[_indice6]);
          } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


          _indice6 = this.De18A28.findIndex(function (identi) {
            return identi.identificacion === id;
          });

          if (_indice6 >= 0) {
            this.De18A28[_indice6].tipo_id = this.caracData.tipo_id;
            this.De18A28[_indice6].sexo = this.caracData.sexo;
            this.De18A28[_indice6].identificacion = this.caracData.identificacion;
            this.De18A28[_indice6].pnom = this.caracData.pnom;
            this.De18A28[_indice6].snom = this.caracData.snom;
            this.De18A28[_indice6].pape = this.caracData.pape;
            this.De18A28[_indice6].sape = this.caracData.sape;
            this.De18A28[_indice6].peso = this.caracData.peso;
            this.De18A28[_indice6].talla = this.caracData.talla;
            this.De18A28[_indice6].imc = this.calcularImc(this.caracData.peso, this.caracData.talla);
            this.De18A28[_indice6].estado = "Activo";
            this.De18A28.splice(_indice6, 1, this.De18A28[_indice6]);
          } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


          _indice6 = this.De29A59.findIndex(function (identi) {
            return identi.identificacion === id;
          });

          if (_indice6 >= 0) {
            this.De29A59[_indice6].tipo_id = this.caracData.tipo_id;
            this.De29A59[_indice6].sexo = this.caracData.sexo;
            this.De29A59[_indice6].identificacion = this.caracData.identificacion;
            this.De29A59[_indice6].pnom = this.caracData.pnom;
            this.De29A59[_indice6].snom = this.caracData.snom;
            this.De29A59[_indice6].pape = this.caracData.pape;
            this.De29A59[_indice6].sape = this.caracData.sape;
            this.De29A59[_indice6].peso = this.caracData.peso;
            this.De29A59[_indice6].talla = this.caracData.talla;
            this.De29A59[_indice6].imc = this.calcularImc(this.caracData.peso, this.caracData.talla);
            this.De29A59[_indice6].estado = "Activo";
            this.De29A59.splice(_indice6, 1, this.De29A59[_indice6]);
          } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


          _indice6 = this.De60.findIndex(function (identi) {
            return identi.identificacion === id;
          });

          if (_indice6 >= 0) {
            this.De60[_indice6].tipo_id = this.caracData.tipo_id;
            this.De60[_indice6].sexo = this.caracData.sexo;
            this.De60[_indice6].identificacion = this.caracData.identificacion;
            this.De60[_indice6].pnom = this.caracData.pnom;
            this.De60[_indice6].snom = this.caracData.snom;
            this.De60[_indice6].pape = this.caracData.pape;
            this.De60[_indice6].sape = this.caracData.sape;
            this.De60[_indice6].peso = this.caracData.peso;
            this.De60[_indice6].talla = this.caracData.talla;
            this.De60[_indice6].imc = this.calcularImc(this.caracData.peso, this.caracData.talla);
            this.De60[_indice6].estado = "Activo";
            this.De60.splice(_indice6, 1, this.De60[_indice6]);
          } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


          _indice6 = this.EnCro.findIndex(function (identi) {
            return identi.identificacion === id;
          });

          if (_indice6 >= 0) {
            this.EnCro[_indice6].tipo_id = this.caracData.tipo_id;
            this.EnCro[_indice6].sexo = this.caracData.sexo;
            this.EnCro[_indice6].identificacion = this.caracData.identificacion;
            this.EnCro[_indice6].pnom = this.caracData.pnom;
            this.EnCro[_indice6].snom = this.caracData.snom;
            this.EnCro[_indice6].pape = this.caracData.pape;
            this.EnCro[_indice6].sape = this.caracData.sape;
            this.EnCro[_indice6].estado = "Activo";
            this.EnCro.splice(_indice6, 1, this.EnCro[_indice6]);
          } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


          _indice6 = this.EnInf.findIndex(function (identi) {
            return identi.identificacion === id;
          });

          if (_indice6 >= 0) {
            this.EnInf[_indice6].tipo_id = this.caracData.tipo_id;
            this.EnInf[_indice6].sexo = this.caracData.sexo;
            this.EnInf[_indice6].identificacion = this.caracData.identificacion;
            this.EnInf[_indice6].pnom = this.caracData.pnom;
            this.EnInf[_indice6].snom = this.caracData.snom;
            this.EnInf[_indice6].pape = this.caracData.pape;
            this.EnInf[_indice6].sape = this.caracData.sape;
            this.EnInf[_indice6].estado = "Activo";
            this.EnInf.splice(_indice6, 1, this.EnInf[_indice6]);
          } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


          _indice6 = this.Migra.findIndex(function (identi) {
            return identi.identificacion === id;
          });

          if (_indice6 >= 0) {
            this.Migra[_indice6].tipo_id = this.caracData.tipo_id;
            this.Migra[_indice6].sexo = this.caracData.sexo;
            this.Migra[_indice6].identificacion = this.caracData.identificacion;
            this.Migra[_indice6].pnom = this.caracData.pnom;
            this.Migra[_indice6].snom = this.caracData.snom;
            this.Migra[_indice6].pape = this.caracData.pape;
            this.Migra[_indice6].sape = this.caracData.sape;
            this.Migra[_indice6].estado = "Activo";
            this.Migra.splice(_indice6, 1, this.Migra[_indice6]);
          }
        }
      } else {
        //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY
        var _indice7 = this.factores.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (_indice7 >= 0) {
          this.factores[_indice7].tipo_id = this.caracData.tipo_id;
          this.factores[_indice7].sexo = this.caracData.sexo;
          this.factores[_indice7].identificacion = this.caracData.identificacion;
          this.factores[_indice7].pnom = this.caracData.pnom;
          this.factores[_indice7].snom = this.caracData.snom;
          this.factores[_indice7].pape = this.caracData.pape;
          this.factores[_indice7].sape = this.caracData.sape;
          this.factores[_indice7].estado = "Activo";
          this.factores.splice(_indice7, 1, this.factores[_indice7]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice7 = this.afectacion.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (_indice7 >= 0) {
          this.afectacion[_indice7].tipo_id = this.caracData.tipo_id;
          this.afectacion[_indice7].sexo = this.caracData.sexo;
          this.afectacion[_indice7].identificacion = this.caracData.identificacion;
          this.afectacion[_indice7].pnom = this.caracData.pnom;
          this.afectacion[_indice7].snom = this.caracData.snom;
          this.afectacion[_indice7].pape = this.caracData.pape;
          this.afectacion[_indice7].sape = this.caracData.sape;
          this.afectacion[_indice7].estado = "Activo";
          this.afectacion.splice(_indice7, 1, this.afectacion[_indice7]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice7 = this.estratificacion.findIndex(function (identi) {
          return identi.id_jefe === id;
        });

        if (_indice7 >= 0) {
          this.estratificacion[_indice7].id_jefe = this.caracData.identificacion;
          this.estratificacion[_indice7].estado = "Activo";
          this.estratificacion.splice(_indice7, 1, this.estratificacion[_indice7]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice7 = this.De10A59.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (_indice7 >= 0) {
          this.De10A59[_indice7].tipo_id = this.caracData.tipo_id;
          this.De10A59[_indice7].sexo = this.caracData.sexo;
          this.De10A59[_indice7].identificacion = this.caracData.identificacion;
          this.De10A59[_indice7].pnom = this.caracData.pnom;
          this.De10A59[_indice7].snom = this.caracData.snom;
          this.De10A59[_indice7].pape = this.caracData.pape;
          this.De10A59[_indice7].sape = this.caracData.sape;
          this.De10A59[_indice7].estado = "Activo";
          this.De10A59.splice(_indice7, 1, this.De10A59[_indice7]);
        }

        if (this.embarazoEditar === "SI") {
          _indice7 = this.ParPost.findIndex(function (identi) {
            return identi.identificacion === id;
          });

          if (this.caracData.embarazo === "SI") {
            //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY            
            if (_indice7 >= 0) {
              this.ParPost[_indice7].tipo_id = this.caracData.tipo_id;
              this.ParPost[_indice7].sexo = this.caracData.sexo;
              this.ParPost[_indice7].identificacion = this.caracData.identificacion;
              this.ParPost[_indice7].pnom = this.caracData.pnom;
              this.ParPost[_indice7].snom = this.caracData.snom;
              this.ParPost[_indice7].pape = this.caracData.pape;
              this.ParPost[_indice7].sape = this.caracData.sape;
              this.ParPost[_indice7].peso = this.caracData.peso;
              this.ParPost[_indice7].talla = this.caracData.talla;
              this.ParPost[_indice7].imc = this.calcularImc(this.caracData.peso, this.caracData.talla);
              this.ParPost[_indice7].estado = "Activo";
              this.ParPost.splice(_indice7, 1, this.ParPost[_indice7]);
            }
          } else if (this.caracData.embarazo === "NO") {
            //ELIMINO
            this.ParPost[_indice7].estado = "Inactivo";
            this.ParPost.splice(_indice7, 1, this.ParPost[_indice7]);
          }
        } else {
          if (this.caracData.embarazo === "SI") {
            //AGREGO
            this.AParPost(this.caracData, edad, "JEFE");
          }
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice7 = this.De12A17.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (_indice7 >= 0) {
          this.De12A17[_indice7].tipo_id = this.caracData.tipo_id;
          this.De12A17[_indice7].sexo = this.caracData.sexo;
          this.De12A17[_indice7].identificacion = this.caracData.identificacion;
          this.De12A17[_indice7].pnom = this.caracData.pnom;
          this.De12A17[_indice7].snom = this.caracData.snom;
          this.De12A17[_indice7].pape = this.caracData.pape;
          this.De12A17[_indice7].sape = this.caracData.sape;
          this.De12A17[_indice7].peso = this.caracData.peso;
          this.De12A17[_indice7].talla = this.caracData.talla;
          this.De12A17[_indice7].imc = this.calcularImc(this.caracData.peso, this.caracData.talla);
          this.De12A17[_indice7].estado = "Activo";
          this.De12A17.splice(_indice7, 1, this.De12A17[_indice7]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice7 = this.De18A28.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (_indice7 >= 0) {
          this.De18A28[_indice7].tipo_id = this.caracData.tipo_id;
          this.De18A28[_indice7].sexo = this.caracData.sexo;
          this.De18A28[_indice7].identificacion = this.caracData.identificacion;
          this.De18A28[_indice7].pnom = this.caracData.pnom;
          this.De18A28[_indice7].snom = this.caracData.snom;
          this.De18A28[_indice7].pape = this.caracData.pape;
          this.De18A28[_indice7].sape = this.caracData.sape;
          this.De18A28[_indice7].peso = this.caracData.peso;
          this.De18A28[_indice7].talla = this.caracData.talla;
          this.De18A28[_indice7].imc = this.calcularImc(this.caracData.peso, this.caracData.talla);
          this.De18A28[_indice7].estado = "Activo";
          this.De18A28.splice(_indice7, 1, this.De18A28[_indice7]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice7 = this.De29A59.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (_indice7 >= 0) {
          this.De29A59[_indice7].tipo_id = this.caracData.tipo_id;
          this.De29A59[_indice7].sexo = this.caracData.sexo;
          this.De29A59[_indice7].identificacion = this.caracData.identificacion;
          this.De29A59[_indice7].pnom = this.caracData.pnom;
          this.De29A59[_indice7].snom = this.caracData.snom;
          this.De29A59[_indice7].pape = this.caracData.pape;
          this.De29A59[_indice7].sape = this.caracData.sape;
          this.De29A59[_indice7].peso = this.caracData.peso;
          this.De29A59[_indice7].talla = this.caracData.talla;
          this.De29A59[_indice7].imc = this.calcularImc(this.caracData.peso, this.caracData.talla);
          this.De29A59[_indice7].estado = "Activo";
          this.De29A59.splice(_indice7, 1, this.De29A59[_indice7]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice7 = this.De60.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (_indice7 >= 0) {
          this.De60[_indice7].tipo_id = this.caracData.tipo_id;
          this.De60[_indice7].sexo = this.caracData.sexo;
          this.De60[_indice7].identificacion = this.caracData.identificacion;
          this.De60[_indice7].pnom = this.caracData.pnom;
          this.De60[_indice7].snom = this.caracData.snom;
          this.De60[_indice7].pape = this.caracData.pape;
          this.De60[_indice7].sape = this.caracData.sape;
          this.De60[_indice7].peso = this.caracData.peso;
          this.De60[_indice7].talla = this.caracData.talla;
          this.De60[_indice7].imc = this.calcularImc(this.caracData.peso, this.caracData.talla);
          this.De60[_indice7].estado = "Activo";
          this.De60.splice(_indice7, 1, this.De60[_indice7]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice7 = this.EnCro.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (_indice7 >= 0) {
          this.EnCro[_indice7].tipo_id = this.caracData.tipo_id;
          this.EnCro[_indice7].sexo = this.caracData.sexo;
          this.EnCro[_indice7].identificacion = this.caracData.identificacion;
          this.EnCro[_indice7].pnom = this.caracData.pnom;
          this.EnCro[_indice7].snom = this.caracData.snom;
          this.EnCro[_indice7].pape = this.caracData.pape;
          this.EnCro[_indice7].sape = this.caracData.sape;
          this.EnCro[_indice7].estado = "Activo";
          this.EnCro.splice(_indice7, 1, this.EnCro[_indice7]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice7 = this.EnInf.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (_indice7 >= 0) {
          this.EnInf[_indice7].tipo_id = this.caracData.tipo_id;
          this.EnInf[_indice7].sexo = this.caracData.sexo;
          this.EnInf[_indice7].identificacion = this.caracData.identificacion;
          this.EnInf[_indice7].pnom = this.caracData.pnom;
          this.EnInf[_indice7].snom = this.caracData.snom;
          this.EnInf[_indice7].pape = this.caracData.pape;
          this.EnInf[_indice7].sape = this.caracData.sape;
          this.EnInf[_indice7].estado = "Activo";
          this.EnInf.splice(_indice7, 1, this.EnInf[_indice7]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice7 = this.Migra.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (_indice7 >= 0) {
          this.Migra[_indice7].tipo_id = this.caracData.tipo_id;
          this.Migra[_indice7].sexo = this.caracData.sexo;
          this.Migra[_indice7].identificacion = this.caracData.identificacion;
          this.Migra[_indice7].pnom = this.caracData.pnom;
          this.Migra[_indice7].snom = this.caracData.snom;
          this.Migra[_indice7].pape = this.caracData.pape;
          this.Migra[_indice7].sape = this.caracData.sape;
          this.Migra[_indice7].estado = "Activo";
          this.Migra.splice(_indice7, 1, this.Migra[_indice7]);
        }
      }

      this.datosJefe[this.indiceEditJefe].id = this.caracData.id;
      this.datosJefe[this.indiceEditJefe].id_hogar = this.caracData.id_hogar;
      this.datosJefe[this.indiceEditJefe].telefono = this.caracData.telefono;
      this.datosJefe[this.indiceEditJefe].puntaje_sisben = this.caracData.puntaje_sisben;
      this.datosJefe[this.indiceEditJefe].afiliacion_entidad = this.caracData.afiliacion_entidad;
      this.datosJefe[this.indiceEditJefe].textoEps = this.showText(Number(this.caracData.afiliacion_entidad), this.admini_options);
      this.datosJefe[this.indiceEditJefe].otra_eps = this.caracData.otra_eps;
      this.datosJefe[this.indiceEditJefe].tipo_id = this.caracData.tipo_id;
      this.datosJefe[this.indiceEditJefe].identificacion = this.caracData.identificacion;
      this.datosJefe[this.indiceEditJefe].sexo = this.caracData.sexo;
      this.datosJefe[this.indiceEditJefe].parentesco = this.caracData.parentesco;
      this.datosJefe[this.indiceEditJefe].textoParentesco = this.showText(Number(this.caracData.parentesco), this.parentesco_options);
      this.datosJefe[this.indiceEditJefe].pnom = this.caracData.pnom;
      this.datosJefe[this.indiceEditJefe].snom = this.caracData.snom;
      this.datosJefe[this.indiceEditJefe].pape = this.caracData.pape;
      this.datosJefe[this.indiceEditJefe].sape = this.caracData.sape;
      this.datosJefe[this.indiceEditJefe].salario = this.caracData.salario;
      this.datosJefe[this.indiceEditJefe].id_compania = this.caracData.id_compania; // this.datosJefe[this.indiceEditJefe].estado = this.caracData.estado;

      this.datosJefe[this.indiceEditJefe].estado = "Activo";
      this.datosJefe[this.indiceEditJefe].estado_civil = this.caracData.estado_civil;
      this.datosJefe[this.indiceEditJefe].textoEstado = this.showText(Number(this.caracData.estado_civil), this.estado_options);
      this.datosJefe[this.indiceEditJefe].fecha_nacimiento = this.caracData.fecha_nacimiento;
      this.datosJefe[this.indiceEditJefe].tipo_afiliacion = this.caracData.tipo_afiliacion;
      this.datosJefe[this.indiceEditJefe].embarazo = this.caracData.embarazo;
      this.datosJefe[this.indiceEditJefe].embarazo_multiple = this.caracData.embarazo_multiple;
      this.datosJefe[this.indiceEditJefe].discapacidad = this.caracData.discapacidad;
      this.datosJefe[this.indiceEditJefe].nivel_escolaridad = this.caracData.nivel_escolaridad;
      this.datosJefe[this.indiceEditJefe].textoNivel = this.showText(Number(this.caracData.nivel_escolaridad), this.escolaridad_options);
      this.datosJefe[this.indiceEditJefe].ocupacion = this.caracData.ocupacion;
      this.datosJefe[this.indiceEditJefe].textoOcupacion = this.showText(Number(this.caracData.ocupacion), this.ocupacion_options);
      this.datosJefe[this.indiceEditJefe].colegio = this.caracData.colegio;
      this.datosJefe[this.indiceEditJefe].textoColegio = this.showText(Number(this.caracData.colegio), this.colegio_options);
      this.datosJefe[this.indiceEditJefe].grado = this.caracData.grado;
      this.datosJefe[this.indiceEditJefe].etnia = this.caracData.etnia;
      this.datosJefe[this.indiceEditJefe].textoEtnia = this.showText(Number(this.caracData.etnia), this.etnia_options);
      this.datosJefe[this.indiceEditJefe].clasificacion = this.caracData.clasificacion;
      this.datosJefe[this.indiceEditJefe].textoClasificacion = this.showText2(Number(this.caracData.clasificacion), this.clasifi_options, this.caracData.etnia);
      this.datosJefe[this.indiceEditJefe].entiende = this.caracData.entiende;
      this.datosJefe[this.indiceEditJefe].pyp = this.caracData.pyp;
      this.datosJefe[this.indiceEditJefe].migrante = this.caracData.migrante;
      this.datosJefe[this.indiceEditJefe].edad = this.caracData.edad;
      this.datosJefe[this.indiceEditJefe].orientacion = this.caracData.orientacion;
      this.datosJefe[this.indiceEditJefe].identidad_genero = this.caracData.identidad_genero;
      this.datosJefe[this.indiceEditJefe].perdida_peso = this.caracData.perdida_peso;
      this.datosJefe[this.indiceEditJefe].programa_icbf = this.caracData.programa_icbf; // this.datosJefe[this.indiceEditJefe].textoOcupacion = this.ocupacionAuxiliar;

      this.datosJefe[this.indiceEditJefe].enfermedad_infecciosa = this.caracData.enfermedad_infecciosa;
      this.datosJefe[this.indiceEditJefe].enfermedad_cronica = this.caracData.enfermedad_cronica;
      this.datosJefe[this.indiceEditJefe].textoEnfermedad_infecciosa = this.showText(Number(this.caracData.enfermedad_infecciosa), this.enfinf_options);
      this.datosJefe[this.indiceEditJefe].textoEnfermedad_cronica = this.showText(Number(this.caracData.enfermedad_cronica), this.enfcro_options);
      this.datosJefe[this.indiceEditJefe].peso = this.caracData.peso;
      this.datosJefe[this.indiceEditJefe].talla = this.caracData.talla;
      this.datosJefe.splice(this.indiceEditJefe, 1, this.datosJefe[this.indiceEditJefe]);
      this.limpiar2();
    },
    eliEdad: function eliEdad(identificacion, vector, edad, opcion) {
      var indice = this.Men1A.findIndex(function (identi) {
        return identi.identificacion === identificacion;
      });

      if (indice >= 0) {
        this.Men1A[indice].estado = "Inactivo";
        this.Men1A.splice(indice, 1, this.Men1A[indice]);
      }

      indice = this.De1A5.findIndex(function (identi) {
        return identi.identificacion === identificacion;
      });

      if (indice >= 0) {
        this.De1A5[indice].estado = "Inactivo";
        this.De1A5.splice(indice, 1, this.De1A5[indice]);
      }

      indice = this.De6A11.findIndex(function (identi) {
        return identi.identificacion === identificacion;
      });

      if (indice >= 0) {
        this.De6A11[indice].estado = "Inactivo";
        this.De6A11.splice(indice, 1, this.De6A11[indice]);
      }

      indice = this.De10A59.findIndex(function (identi) {
        return identi.identificacion === identificacion;
      });

      if (indice >= 0) {
        this.De10A59[indice].estado = "Inactivo";
        this.De10A59.splice(indice, 1, this.De10A59[indice]);
      }

      indice = this.De12A17.findIndex(function (identi) {
        return identi.identificacion === identificacion;
      });

      if (indice >= 0) {
        this.De12A17[indice].estado = "Inactivo";
        this.De12A17.splice(indice, 1, this.De12A17[indice]);
      }

      indice = this.De18A28.findIndex(function (identi) {
        return identi.identificacion === identificacion;
      });

      if (indice >= 0) {
        this.De18A28[indice].estado = "Inactivo";
        this.De18A28.splice(indice, 1, this.De18A28[indice]);
      }

      indice = this.De29A59.findIndex(function (identi) {
        return identi.identificacion === identificacion;
      });

      if (indice >= 0) {
        this.De29A59[indice].estado = "Inactivo";
        this.De29A59.splice(indice, 1, this.De29A59[indice]);
      }

      indice = this.De60.findIndex(function (identi) {
        return identi.identificacion === identificacion;
      });

      if (indice >= 0) {
        this.De60[indice].estado = "Inactivo";
        this.De60.splice(indice, 1, this.De60[indice]);
      }

      indice = this.EnCro.findIndex(function (identi) {
        return identi.identificacion === identificacion;
      });

      if (indice >= 0) {
        this.EnCro[indice].estado = "Inactivo";
        this.EnCro.splice(indice, 1, this.EnCro[indice]);
      }

      indice = this.EnInf.findIndex(function (identi) {
        return identi.identificacion === identificacion;
      });

      if (indice >= 0) {
        this.EnInf[indice].estado = "Inactivo";
        this.EnInf.splice(indice, 1, this.EnInf[indice]);
      }

      indice = this.Migra.findIndex(function (identi) {
        return identi.identificacion === identificacion;
      });

      if (indice >= 0) {
        this.Migra[indice].estado = "Inactivo";
        this.Migra.splice(indice, 1, this.Migra[indice]);
      } // AGREGAR NIÑOS MENORES DE 1 AÑO


      if (edad <= 0) {
        this.Amenores1Anio(vector, hoy.diff(nacimiento, "months"), opcion);
      } // AGREGAR NIÑOS MENORES DE 1 AÑO
      // AGREGAR DE 1 A 5 AÑOS


      if (edad >= 1 && edad <= 5) {
        this.Ade1a5Anio(vector, edad, opcion);
      } // AGREGAR DE 1 A 5 AÑOS
      // AGREGAR DE 6 A 11 AÑOS


      if (edad >= 6 && edad <= 11) {
        this.Ade6a11Anio(vector, edad, opcion);
      } // AGREGAR DE 6 A 11 AÑOS
      // AGREGAR EXCEPSIONES MENOR DE 10 AÑOS


      if (edad < 10) {
        if (vector.excepciones === "1") {
          this.Ade10a59Anio(vector, edad, opcion);
        }
      } // AGREGAR EXCEPSIONES MENOR DE 10 AÑOS
      // AGREGAR DE 10 A 59 AÑOS


      if (edad >= 10 && edad <= 59) {
        this.Ade10a59Anio(vector, edad, opcion);
      } // AGREGAR DE 10 A 59 AÑOS
      // AGREGAR PARTO POSTPARTO


      if (vector.embarazo === "SI") {
        this.AParPost(vector, edad, opcion);
      } // AGREGAR PARTO POSTPARTO
      // AGREGAR DE 12 A 17 AÑOS


      if (edad >= 12 && edad <= 17) {
        this.Ade12a17Anio(vector, edad, opcion);
      } // AGREGAR DE 12 A 17 AÑOS
      // AGREGAR DE 18 A 28 AÑOS


      if (edad >= 18 && edad <= 28) {
        this.Ade18a28Anio(vector, edad, opcion);
      } // AGREGAR DE 18 A 28 AÑOS
      // AGREGAR DE 29 A 59 AÑOS


      if (edad >= 29 && edad <= 59) {
        this.Ade29a59Anio(vector, edad, opcion);
      } // AGREGAR DE 29 A 59 AÑOS
      // AGREGAR DE 60 ó MAS AÑOS


      if (edad >= 60) {
        this.Ade60Anio(vector, edad, opcion);
      } // AGREGAR DE 60 ó MAS AÑOS
      // AGREGAR MIGRANTES


      if (vector.migrante === "SI") {
        this.AMigra(vector, edad, opcion);
      } // AGREGAR MIGRANTES               

    },
    //OPCIONES DEL JEFE DE HOGAR
    //OPCIONES DE LOS INTEGRANTES
    agregar: function () {
      var _agregar = _asyncToGenerator(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee9() {
        var _this10 = this;

        var parametros;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee9$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                if (!(this.CA1.tipo_id == "0")) {
                  _context10.next = 3;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione un tipo de identificación!", "error");
                return _context10.abrupt("return");

              case 3:
                if (!(this.CA1.identificacion == "")) {
                  _context10.next = 6;
                  break;
                }

                this.$swal("Error...!", "Por favor digite el documento de identificación!", "error");
                return _context10.abrupt("return");

              case 6:
                if (!(this.CA1.sexo == "0")) {
                  _context10.next = 9;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione el sexo!", "error");
                return _context10.abrupt("return");

              case 9:
                if (!(this.CA1.orientacion === "0")) {
                  _context10.next = 12;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione la orientación sexual!", "error");
                return _context10.abrupt("return");

              case 12:
                if (!(this.CA1.identidad_genero === "0")) {
                  _context10.next = 15;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione la identidad de genero!", "error");
                return _context10.abrupt("return");

              case 15:
                if (!(this.CA1.parentesco == "0")) {
                  _context10.next = 18;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione el parentesco!", "error");
                return _context10.abrupt("return");

              case 18:
                if (!(this.CA1.pnom == "0")) {
                  _context10.next = 21;
                  break;
                }

                this.$swal("Error...!", "Por favor digite el primer nombre!", "error");
                return _context10.abrupt("return");

              case 21:
                if (!(this.CA1.pape == "0")) {
                  _context10.next = 24;
                  break;
                }

                this.$swal("Error...!", "Por favor digite el primer apellido!", "error");
                return _context10.abrupt("return");

              case 24:
                if (!(this.CA1.estado_civil == "0")) {
                  _context10.next = 27;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione el estado civil!", "error");
                return _context10.abrupt("return");

              case 27:
                if (!(this.CA1.fecha_nac == "")) {
                  _context10.next = 30;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione la fecha de nacimiento!", "error");
                return _context10.abrupt("return");

              case 30:
                if (!(this.CA1.afi_entidad === "")) {
                  _context10.next = 35;
                  break;
                }

                this.$refs.afi_entidad.focus();
                bande = false;
                this.$swal("Error...!", "Por favor seleccione la eps!", "error");
                return _context10.abrupt("return");

              case 35:
                if (!(this.CA1.tipo_afiliacion === "")) {
                  _context10.next = 40;
                  break;
                }

                this.$refs.tipo_afiliacion.focus();
                bande = false;
                this.$swal("Error...!", "Por favor seleccione el tipo de afiliación!", "error");
                return _context10.abrupt("return");

              case 40:
                if (!(this.CA1.escolaridad == "0")) {
                  _context10.next = 43;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione el nivel de escolaridad!", "error");
                return _context10.abrupt("return");

              case 43:
                if (!(this.CA1.ocupacion == "0")) {
                  _context10.next = 46;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione la ocupación!", "error");
                return _context10.abrupt("return");

              case 46:
                if (!(this.CA1.etnia == "0")) {
                  _context10.next = 49;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione la etnia!", "error");
                return _context10.abrupt("return");

              case 49:
                if (!(this.CA1.clasificacion == "0")) {
                  _context10.next = 52;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione la clasificacion de la etnia!", "error");
                return _context10.abrupt("return");

              case 52:
                if (!(this.CA1.entiende == "0")) {
                  _context10.next = 55;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione la opción entiende español!", "error");
                return _context10.abrupt("return");

              case 55:
                if (!(this.CA1.pyp == "0")) {
                  _context10.next = 58;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione la opción PYP!", "error");
                return _context10.abrupt("return");

              case 58:
                if (!(this.CA1.migrante == "0")) {
                  _context10.next = 61;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione la opción migrante!", "error");
                return _context10.abrupt("return");

              case 61:
                if (!(this.CA1.jefe == "0")) {
                  _context10.next = 64;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione el un jefe de hogar!", "error");
                return _context10.abrupt("return");

              case 64:
                if (!(this.CA1.perdida_peso === "")) {
                  _context10.next = 69;
                  break;
                }

                this.$refs.perdida_peso.focus();
                bande = false;
                this.$swal("Error...!", "Por favor seleccione la perdida de peso en los ultimos 3 meses!", "error");
                return _context10.abrupt("return");

              case 69:
                if (!(this.CA1.programa_icbf === "")) {
                  _context10.next = 74;
                  break;
                }

                this.$refs.programa_icbf.focus();
                bande = false;
                this.$swal("Error...!", "Por favor seleccione si Pertenece a algún programa del ICBF!", "error");
                return _context10.abrupt("return");

              case 74:
                if (!(this.CA1.enfermedad_infecciosa === "0")) {
                  _context10.next = 78;
                  break;
                }

                bande = false;
                this.$swal("Error...!", "Por favor seleccione si tiene alguna enfermedad infecciosa!", "error");
                return _context10.abrupt("return");

              case 78:
                if (!(this.CA1.enfermedad_cronica === "0")) {
                  _context10.next = 82;
                  break;
                }

                bande = false;
                this.$swal("Error...!", "Por favor seleccione si tiene alguna enfermedad cronica!", "error");
                return _context10.abrupt("return");

              case 82:
                if (!(this.CA1.peso === "0")) {
                  _context10.next = 86;
                  break;
                }

                bande = false;
                this.$swal("Error...!", "Por favor digite el peso!", "error");
                return _context10.abrupt("return");

              case 86:
                if (!(this.CA1.talla === "0")) {
                  _context10.next = 90;
                  break;
                }

                bande = false;
                this.$swal("Error...!", "Por favor digite la talla!", "error");
                return _context10.abrupt("return");

              case 90:
                // VALIDAR SI EL INTEGRANTE SE ENCUENTRA AGREGADO
                this.CA1.identificacion = this.CA1.identificacion.replace(/[.*+\-?^${}()|[\]\\]/g, "");
                parametros = {
                  _token: this.csrf,
                  identificacion: this.CA1.identificacion
                };
                _context10.prev = 92;
                _context10.next = 95;
                return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["validar"](parametros).then(function (respuesta) {
                  if (respuesta.data.OPC == "EXISTE") {
                    var val = (respuesta.data.identificacion / 1).toFixed(0).replace(".", ",");
                    var iden = val.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

                    _this10.$swal("Validar...!", "El Documento <b>" + iden + "</b> Se Encuentra Registrado", "warning");

                    return false;
                  } else {
                    // VERIFICAR SI ESTA EN LA TABLA
                    var resultado = _this10.datos.filter(function (identi) {
                      return identi.identificacion == _this10.CA1.identificacion;
                    }); // VERIFICAR SI ESTA EN LA TABLA


                    if (resultado.length > 0) {
                      _this10.$swal("Validar...!", "El Documento <b>" + _this10.CA1.identificacion + "</b> Se Encuentra Agregado", "warning");

                      return false;
                    } else {
                      var _nacimiento2 = moment(_this10.CA1.fecha_nac);

                      var _hoy2 = moment();

                      var edad = 0;

                      if (_nacimiento2 < _hoy2) {
                        edad = _hoy2.diff(_nacimiento2, "years"); //Calculamos la diferencia en años
                      }

                      var textoEps = "";

                      if (_this10.CA1.afi_entidad === "OTRA") {
                        textoEps = "OTRA";
                      } else {
                        if (_this10.CA1.afi_entidad === "NINGUNA") {
                          textoEps = "NINGUNA";
                        } else {
                          textoEps = _this10.showText(_this10.CA1.afi_entidad, _this10.admini_options);
                        }
                      }

                      _this10.datos.push({
                        id: 0,
                        tipo_id: _this10.CA1.tipo_id,
                        identificacion: _this10.CA1.identificacion,
                        sexo: _this10.CA1.sexo,
                        parentesco: _this10.CA1.parentesco,
                        textoParentesco: _this10.showText(_this10.CA1.parentesco, _this10.parentesco_options),
                        pnom: _this10.CA1.pnom,
                        snom: _this10.CA1.snom,
                        pape: _this10.CA1.pape,
                        sape: _this10.CA1.sape,
                        estado_civil: _this10.CA1.estado_civil,
                        textoEstado: _this10.showText(_this10.CA1.estado_civil, _this10.estado_options),
                        fecha_nac: _this10.CA1.fecha_nac,
                        edad: edad,
                        afi_entidad: _this10.CA1.afi_entidad,
                        textoEps: textoEps,
                        otra_eps: _this10.CA1.otra_eps,
                        tipo_afiliacion: _this10.CA1.tipo_afiliacion,
                        embarazo: _this10.CA1.embarazo,
                        embarazo_multiple: _this10.CA1.embarazo_multiple,
                        discapacidad: _this10.CA1.discapacidad,
                        escolaridad: _this10.CA1.escolaridad,
                        textoEscolaridad: _this10.showText(_this10.CA1.escolaridad, _this10.escolaridad_options),
                        ocupacion: _this10.CA1.ocupacion,
                        textoOcupacion: _this10.showText(_this10.CA1.ocupacion, _this10.ocupacion_options),
                        colegio: _this10.CA1.colegio,
                        textoColegio: _this10.showText(_this10.CA1.colegio, _this10.colegio_options),
                        grado: _this10.CA1.grado,
                        entiende: _this10.CA1.entiende,
                        migrante: _this10.CA1.migrante,
                        pyp: _this10.CA1.pyp,
                        etnia: _this10.CA1.etnia,
                        textoEtnia: _this10.showText(_this10.CA1.etnia, _this10.etnia_options),
                        clasificacion: _this10.CA1.clasificacion,
                        textoClasificacion: _this10.showText2(_this10.CA1.clasificacion, _this10.clasifi_options, _this10.CA1.etnia),
                        puntaje_sisben: _this10.CA1.puntaje_sisben,
                        jefe: _this10.CA1.jefe,
                        orientacion: _this10.CA1.orientacion,
                        identidad_genero: _this10.CA1.identidad_genero,
                        telefono: _this10.CA1.telefono,
                        perdida_peso: _this10.CA1.perdida_peso,
                        programa_icbf: _this10.CA1.programa_icbf,
                        excepciones: _this10.CA1.excepciones,
                        textoExcepciones: _this10.showText(_this10.CA1.excepciones, _this10.opciones7),
                        identi_auxi: "",
                        estado: "Activo",
                        enfermedad_infecciosa: _this10.CA1.enfermedad_infecciosa,
                        textoEnfermedad_infecciosa: _this10.showText(_this10.CA1.enfermedad_infecciosa, _this10.enfinf_options),
                        enfermedad_cronica: _this10.CA1.enfermedad_cronica,
                        textoEnfermedad_cronica: _this10.showText(_this10.CA1.enfermedad_cronica, _this10.enfcro_options),
                        peso: _this10.CA1.peso,
                        talla: _this10.CA1.talla
                      });

                      if (_this10.CA1.tipo_afiliacion === "CONTRIBUTIVO" || _this10.CA1.tipo_afiliacion === "ESPECIAL") {
                        _this10.SAPU = true;
                        _this10.estratificacionData.afiliacion_salud_privada = "SI";
                      }

                      _this10.ocupacionAuxiliar2 = "";
                      _this10.mOCOL2 = false;

                      var indice = _this10.datos.findIndex(function (identi) {
                        return identi.identificacion === _this10.CA1.identificacion;
                      });

                      _this10.vectorIntegrante.push({
                        index: indice,
                        identificacion: _this10.CA1.identificacion
                      }); // AGREGAR NIÑOS MENORES DE 1 AÑO


                      if (edad <= 0) {
                        _this10.Amenores1Anio(_this10.CA1, _hoy2.diff(_nacimiento2, "months"), "INTE");
                      } // AGREGAR NIÑOS MENORES DE 1 AÑO
                      // AGREGAR DE 1 A 5 AÑOS


                      if (edad >= 1 && edad <= 5) {
                        _this10.Ade1a5Anio(_this10.CA1, edad, "INTE");
                      } // AGREGAR DE 1 A 5 AÑOS
                      // AGREGAR DE 6 A 11 AÑOS


                      if (edad >= 6 && edad <= 11) {
                        _this10.Ade6a11Anio(_this10.CA1, edad, "INTE");
                      } // AGREGAR DE 6 A 11 AÑOS
                      // AGREGAR EXCEPSIONES MENOR DE 10 AÑOS


                      if (edad < 10) {
                        if (_this10.CA1.excepciones === "1") {
                          _this10.Ade10a59Anio(_this10.CA1, edad, "INTE");
                        }
                      } // AGREGAR EXCEPSIONES MENOR DE 10 AÑOS
                      // AGREGAR DE 10 A 59 AÑOS


                      if (edad >= 10 && edad <= 59) {
                        _this10.Ade10a59Anio(_this10.CA1, edad, "INTE");
                      } // AGREGAR DE 10 A 59 AÑOS
                      // AGREGAR PARTO POSTPARTO
                      // alert(this.CA1.embarazo_multiple);


                      if (_this10.CA1.embarazo === "SI") {
                        _this10.AParPost(_this10.CA1, edad, "INTE");
                      } // AGREGAR PARTO POSTPARTO
                      // AGREGAR DE 12 A 17 AÑOS


                      if (edad >= 12 && edad <= 17) {
                        _this10.Ade12a17Anio(_this10.CA1, edad, "INTE");
                      } // AGREGAR DE 12 A 17 AÑOS
                      // AGREGAR DE 18 A 28 AÑOS


                      if (edad >= 18 && edad <= 28) {
                        _this10.Ade18a28Anio(_this10.CA1, edad, "INTE");
                      } // AGREGAR DE 18 A 28 AÑOS
                      // AGREGAR DE 29 A 59 AÑOS


                      if (edad >= 29 && edad <= 59) {
                        _this10.Ade29a59Anio(_this10.CA1, edad, "INTE");
                      } // AGREGAR DE 29 A 59 AÑOS
                      // AGREGAR DE 60 ó MAS AÑOS


                      if (edad >= 60) {
                        _this10.Ade60Anio(_this10.CA1, edad, "INTE");
                      } // AGREGAR DE 60 ó MAS AÑOS
                      // AGREGAR MIGRANTES


                      if (_this10.CA1.migrante === "SI") {
                        _this10.AMigra(_this10.CA1, edad, "INTE");
                      } // AGREGAR MIGRANTES


                      _this10.limpiar();
                    }
                  }
                })["catch"](function (error) {
                  _this10.errorDevuelto = error.response.data.errors;
                  _this10.entrarPorError = true;
                });

              case 95:
                _context10.next = 108;
                break;

              case 97:
                _context10.prev = 97;
                _context10.t0 = _context10["catch"](92);
                _context10.t1 = _context10.t0.response.status;
                _context10.next = _context10.t1 === 419 ? 102 : _context10.t1 === 422 ? 104 : 106;
                break;

              case 102:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context10.abrupt("break", 108);

              case 104:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context10.abrupt("break", 108);

              case 106:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context10.abrupt("break", 108);

              case 108:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee9, this, [[92, 97]]);
      }));

      function agregar() {
        return _agregar.apply(this, arguments);
      }

      return agregar;
    }(),
    calculaEdad: function calculaEdad() {
      var a = moment();
      var b = moment(this.CA1.fecha_nac);
      var years = a.diff(b, "year");
      b.add(years, "years");
      var months = a.diff(b, "months");
      b.add(months, "months");
      var days = a.diff(b, "days");

      if (years == 0) {
        if (months <= 1) {
          if (days <= 1) {
            this.CA1.meses = months + " MES";
            this.CA1.dias = days + " DIA";
          } else {
            this.CA1.meses = months + " MES";
            this.CA1.dias = days + " DIAS";
          }
        } else {
          if (days <= 1) {
            this.CA1.meses = months + " MESES";
            this.CA1.dias = days + " DIA";
          } else {
            this.CA1.meses = months + " MESES";
            this.CA1.dias = days + " DIAS";
          }
        }
      }
    },
    updateIntegrante: function updateIntegrante(item, valor, opcion, index) {
      if (opcion === "tipo_id") {
        //SABER LA IDENTIFICACION EN EL VECTOR DE INTEGRANTES SEGUN EL INDICE Q
        //VIENE DE LA TABLA
        var id = this.vectorIntegrante[index].identificacion; //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY

        var indice = this.Men1A.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.Men1A[indice].tipo_id = valor;
          this.Men1A.splice(indice, 1, this.Men1A[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De1A5.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.De1A5[indice].tipo_id = valor;
          this.De1A5.splice(indice, 1, this.De1A5[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De6A11.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.De6A11[indice].tipo_id = valor;
          this.De6A11.splice(indice, 1, this.De6A11[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De10A59.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.De10A59[indice].tipo_id = valor;
          this.De10A59.splice(indice, 1, this.De10A59[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.ParPost.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.ParPost[indice].tipo_id = valor;
          this.ParPost.splice(indice, 1, this.ParPost[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De12A17.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.De12A17[indice].tipo_id = valor;
          this.De12A17.splice(indice, 1, this.De12A17[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De18A28.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.De18A28[indice].tipo_id = valor;
          this.De18A28.splice(indice, 1, this.De18A28[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De29A59.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.De29A59[indice].tipo_id = valor;
          this.De29A59.splice(indice, 1, this.De29A59[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De60.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.De60[indice].tipo_id = valor;
          this.De60.splice(indice, 1, this.De60[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.Migra.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.Migra[indice].tipo_id = valor;
          this.Migra.splice(indice, 1, this.Migra[indice]);
        }
      }

      if (opcion === "sexo") {
        if (item.sexo === "0") {
          item.embarazo = "0";
          item.embarazo_multiple = "0";
        }

        if (item.sexo === "MASCULINO") {
          item.embarazo = "NOAPLICA";
          item.embarazo_multiple = "NOAPLICA";
        }

        if (item.sexo === "FEMENINO") {
          item.embarazo = "0";
          item.embarazo_multiple = "0";
        } //SABER LA IDENTIFICACION EN EL VECTOR DE INTEGRANTES SEGUN EL INDICE Q
        //VIENE DE LA TABLA


        var _id6 = this.vectorIntegrante[index].identificacion; //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY

        var _indice8 = this.Men1A.findIndex(function (identi) {
          return identi.identificacion === _id6;
        });

        if (_indice8 >= 0) {
          this.Men1A[_indice8].sexo = valor;
          this.Men1A.splice(_indice8, 1, this.Men1A[_indice8]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice8 = this.De1A5.findIndex(function (identi) {
          return identi.identificacion === _id6;
        });

        if (_indice8 >= 0) {
          this.De1A5[_indice8].sexo = valor;
          this.De1A5.splice(_indice8, 1, this.De1A5[_indice8]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice8 = this.De6A11.findIndex(function (identi) {
          return identi.identificacion === _id6;
        });

        if (_indice8 >= 0) {
          this.De6A11[_indice8].sexo = valor;
          this.De6A11.splice(_indice8, 1, this.De6A11[_indice8]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice8 = this.De10A59.findIndex(function (identi) {
          return identi.identificacion === _id6;
        });

        if (_indice8 >= 0) {
          this.De10A59[_indice8].sexo = valor;
          this.De10A59.splice(_indice8, 1, this.De10A59[_indice8]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice8 = this.ParPost.findIndex(function (identi) {
          return identi.identificacion === _id6;
        });

        if (_indice8 >= 0) {
          this.ParPost[_indice8].sexo = valor;
          this.ParPost.splice(_indice8, 1, this.ParPost[_indice8]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice8 = this.De12A17.findIndex(function (identi) {
          return identi.identificacion === _id6;
        });

        if (_indice8 >= 0) {
          this.De12A17[_indice8].sexo = valor;
          this.De12A17.splice(_indice8, 1, this.De12A17[_indice8]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice8 = this.De18A28.findIndex(function (identi) {
          return identi.identificacion === _id6;
        });

        if (_indice8 >= 0) {
          this.De18A28[_indice8].sexo = valor;
          this.De18A28.splice(_indice8, 1, this.De18A28[_indice8]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice8 = this.De29A59.findIndex(function (identi) {
          return identi.identificacion === _id6;
        });

        if (_indice8 >= 0) {
          this.De29A59[_indice8].sexo = valor;
          this.De29A59.splice(_indice8, 1, this.De29A59[_indice8]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice8 = this.De60.findIndex(function (identi) {
          return identi.identificacion === _id6;
        });

        if (_indice8 >= 0) {
          this.De60[_indice8].sexo = valor;
          this.De60.splice(_indice8, 1, this.De60[_indice8]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice8 = this.Migra.findIndex(function (identi) {
          return identi.identificacion === _id6;
        });

        if (_indice8 >= 0) {
          this.Migra[_indice8].sexo = valor;
          this.Migra.splice(_indice8, 1, this.Migra[_indice8]);
        }
      }

      if (opcion === "embarazo") {
        if (item.embarazo === "0") {
          item.embarazo_multiple = "0";
        }

        if (item.embarazo === "SI") {
          item.embarazo_multiple = "0";
        }

        if (item.embarazo === "NO") {
          item.embarazo_multiple = "NO";
        }
      }

      if (opcion === "afi_entidad") {
        if (item.afi_entidad === "NINGUNA") {
          item.tipo_afiliacion = "0";
        } else {
          if (item.afi_entidad === "OTRA") {
            item.otra_eps = "";
          } else {
            item.tipo_afiliacion = "0";
          }
        }
      }

      if (opcion === "escolaridad") {
        item.colegio = "";
        item.grado = "0";
      }
    },
    changeupdateIntegrante: function changeupdateIntegrante(item, event, opcion, index) {
      if (opcion == "identificacion") {
        //SABER LA IDENTIFICACION EN EL VECTOR DE INTEGRANTES SEGUN EL INDICE Q
        //VIENE DE LA TABLA
        var id = this.vectorIntegrante[index].identificacion; //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY

        var indice = this.Men1A.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.Men1A[indice].identificacion = item.identificacion;
          this.Men1A.splice(indice, 1, this.Men1A[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De1A5.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.De1A5[indice].identificacion = item.identificacion;
          this.De1A5.splice(indice, 1, this.De1A5[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De6A11.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          this.De6A11[indice].identificacion = item.identificacion;
          this.De6A11.splice(indice, 1, this.De6A11[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De10A59.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De10A59[indice].identificacion = item.identificacion;
          this.De10A59.splice(indice, 1, this.De10A59[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.ParPost.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.ParPost[indice].identificacion = item.identificacion;
          this.ParPost.splice(indice, 1, this.ParPost[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De12A17.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De12A17[indice].identificacion = item.identificacion;
          this.De12A17.splice(indice, 1, this.De12A17[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De18A28.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De18A28[indice].identificacion = item.identificacion;
          this.De18A28.splice(indice, 1, this.De18A28[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De29A59.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De29A59[indice].identificacion = item.identificacion;
          this.De29A59.splice(indice, 1, this.De29A59[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.De60.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De60[indice].identificacion = item.identificacion;
          this.De60.splice(indice, 1, this.De60[indice]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        indice = this.Migra.findIndex(function (identi) {
          return identi.identificacion === id;
        });

        if (indice >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.Migra[indice].identificacion = item.identificacion;
          this.Migra.splice(indice, 1, this.Migra[indice]);
        } //CAMBIAR LA IDENTIFICACION DEL VECTOR JEFE POR LA NUEVA IDENTIFICACION
        //DIGITADA EN LA TABLA


        this.vectorIntegrante[index].identificacion = item.identificacion; // Vue.set(this.vectorJefes, 1, this.vectorJefes[index]);

        this.vectorIntegrante.splice(index, 1, this.vectorIntegrante[index]);
      }

      if (opcion == "pnom") {
        //SABER LA IDENTIFICACION EN EL VECTOR DE INTEGRANTES SEGUN EL INDICE Q
        //VIENE DE LA TABLA
        var _id7 = this.vectorIntegrante[index].identificacion; //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY

        var _indice9 = this.Men1A.findIndex(function (identi) {
          return identi.identificacion === _id7;
        });

        if (_indice9 >= 0) {
          this.Men1A[_indice9].pnom = item.pnom;
          this.Men1A.splice(_indice9, 1, this.Men1A[_indice9]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice9 = this.De1A5.findIndex(function (identi) {
          return identi.identificacion === _id7;
        });

        if (_indice9 >= 0) {
          this.De1A5[_indice9].pnom = item.pnom;
          this.De1A5.splice(_indice9, 1, this.De1A5[_indice9]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice9 = this.De6A11.findIndex(function (identi) {
          return identi.identificacion === _id7;
        });

        if (_indice9 >= 0) {
          this.De6A11[_indice9].pnom = item.pnom;
          this.De6A11.splice(_indice9, 1, this.De6A11[_indice9]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice9 = this.De10A59.findIndex(function (identi) {
          return identi.identificacion === _id7;
        });

        if (_indice9 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De10A59[_indice9].pnom = item.pnom;
          this.De10A59.splice(_indice9, 1, this.De10A59[_indice9]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice9 = this.ParPost.findIndex(function (identi) {
          return identi.identificacion === _id7;
        });

        if (_indice9 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.ParPost[_indice9].pnom = item.pnom;
          this.ParPost.splice(_indice9, 1, this.ParPost[_indice9]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice9 = this.De12A17.findIndex(function (identi) {
          return identi.identificacion === _id7;
        });

        if (_indice9 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De12A17[_indice9].pnom = item.pnom;
          this.De12A17.splice(_indice9, 1, this.De12A17[_indice9]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice9 = this.De18A28.findIndex(function (identi) {
          return identi.identificacion === _id7;
        });

        if (_indice9 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De18A28[_indice9].pnom = item.pnom;
          this.De18A28.splice(_indice9, 1, this.De18A28[_indice9]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice9 = this.De29A59.findIndex(function (identi) {
          return identi.identificacion === _id7;
        });

        if (_indice9 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De29A59[_indice9].pnom = item.pnom;
          this.De29A59.splice(_indice9, 1, this.De29A59[_indice9]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice9 = this.De60.findIndex(function (identi) {
          return identi.identificacion === _id7;
        });

        if (_indice9 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De60[_indice9].pnom = item.pnom;
          this.De60.splice(_indice9, 1, this.De60[_indice9]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice9 = this.Migra.findIndex(function (identi) {
          return identi.identificacion === _id7;
        });

        if (_indice9 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.Migra[_indice9].pnom = item.pnom;
          this.Migra.splice(_indice9, 1, this.Migra[_indice9]);
        }
      }

      if (opcion == "snom") {
        //SABER LA IDENTIFICACION EN EL VECTOR DE INTEGRANTES SEGUN EL INDICE Q
        //VIENE DE LA TABLA
        var _id8 = this.vectorIntegrante[index].identificacion; //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY

        var _indice10 = this.Men1A.findIndex(function (identi) {
          return identi.identificacion === _id8;
        });

        if (_indice10 >= 0) {
          this.Men1A[_indice10].snom = item.snom;
          this.Men1A.splice(_indice10, 1, this.Men1A[_indice10]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice10 = this.De1A5.findIndex(function (identi) {
          return identi.identificacion === _id8;
        });

        if (_indice10 >= 0) {
          this.De1A5[_indice10].snom = item.snom;
          this.De1A5.splice(_indice10, 1, this.De1A5[_indice10]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice10 = this.De6A11.findIndex(function (identi) {
          return identi.identificacion === _id8;
        });

        if (_indice10 >= 0) {
          this.De6A11[_indice10].snom = item.snom;
          this.De6A11.splice(_indice10, 1, this.De6A11[_indice10]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice10 = this.De10A59.findIndex(function (identi) {
          return identi.identificacion === _id8;
        });

        if (_indice10 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De10A59[_indice10].snom = item.snom;
          this.De10A59.splice(_indice10, 1, this.De10A59[_indice10]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice10 = this.ParPost.findIndex(function (identi) {
          return identi.identificacion === _id8;
        });

        if (_indice10 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.ParPost[_indice10].snom = item.snom;
          this.ParPost.splice(_indice10, 1, this.ParPost[_indice10]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice10 = this.De12A17.findIndex(function (identi) {
          return identi.identificacion === _id8;
        });

        if (_indice10 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De12A17[_indice10].snom = item.snom;
          this.De12A17.splice(_indice10, 1, this.De12A17[_indice10]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice10 = this.De18A28.findIndex(function (identi) {
          return identi.identificacion === _id8;
        });

        if (_indice10 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De18A28[_indice10].snom = item.snom;
          this.De18A28.splice(_indice10, 1, this.De18A28[_indice10]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice10 = this.De29A59.findIndex(function (identi) {
          return identi.identificacion === _id8;
        });

        if (_indice10 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De29A59[_indice10].snom = item.snom;
          this.De29A59.splice(_indice10, 1, this.De29A59[_indice10]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice10 = this.De60.findIndex(function (identi) {
          return identi.identificacion === _id8;
        });

        if (_indice10 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De60[_indice10].snom = item.snom;
          this.De60.splice(_indice10, 1, this.De60[_indice10]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice10 = this.Migra.findIndex(function (identi) {
          return identi.identificacion === _id8;
        });

        if (_indice10 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.Migra[_indice10].snom = item.snom;
          this.Migra.splice(_indice10, 1, this.Migra[_indice10]);
        }
      }

      if (opcion == "pape") {
        //SABER LA IDENTIFICACION EN EL VECTOR DE INTEGRANTES SEGUN EL INDICE Q
        //VIENE DE LA TABLA
        var _id9 = this.vectorIntegrante[index].identificacion; //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY

        var _indice11 = this.Men1A.findIndex(function (identi) {
          return identi.identificacion === _id9;
        });

        if (_indice11 >= 0) {
          this.Men1A[_indice11].pape = item.pape;
          this.Men1A.splice(_indice11, 1, this.Men1A[_indice11]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice11 = this.De1A5.findIndex(function (identi) {
          return identi.identificacion === _id9;
        });

        if (_indice11 >= 0) {
          this.De1A5[_indice11].pape = item.pape;
          this.De1A5.splice(_indice11, 1, this.De1A5[_indice11]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice11 = this.De6A11.findIndex(function (identi) {
          return identi.identificacion === _id9;
        });

        if (_indice11 >= 0) {
          this.De6A11[_indice11].pape = item.pape;
          this.De6A11.splice(_indice11, 1, this.De6A11[_indice11]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice11 = this.De10A59.findIndex(function (identi) {
          return identi.identificacion === _id9;
        });

        if (_indice11 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De10A59[_indice11].pape = item.pape;
          this.De10A59.splice(_indice11, 1, this.De10A59[_indice11]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice11 = this.ParPost.findIndex(function (identi) {
          return identi.identificacion === _id9;
        });

        if (_indice11 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.ParPost[_indice11].pape = item.pape;
          this.ParPost.splice(_indice11, 1, this.ParPost[_indice11]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice11 = this.De12A17.findIndex(function (identi) {
          return identi.identificacion === _id9;
        });

        if (_indice11 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De12A17[_indice11].pape = item.pape;
          this.De12A17.splice(_indice11, 1, this.De12A17[_indice11]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice11 = this.De18A28.findIndex(function (identi) {
          return identi.identificacion === _id9;
        });

        if (_indice11 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De18A28[_indice11].pape = item.pape;
          this.De18A28.splice(_indice11, 1, this.De18A28[_indice11]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice11 = this.De29A59.findIndex(function (identi) {
          return identi.identificacion === _id9;
        });

        if (_indice11 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De29A59[_indice11].pape = item.pape;
          this.De29A59.splice(_indice11, 1, this.De29A59[_indice11]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice11 = this.De60.findIndex(function (identi) {
          return identi.identificacion === _id9;
        });

        if (_indice11 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De60[_indice11].pape = item.pape;
          this.De60.splice(_indice11, 1, this.De60[_indice11]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice11 = this.Migra.findIndex(function (identi) {
          return identi.identificacion === _id9;
        });

        if (_indice11 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.Migra[_indice11].pape = item.pape;
          this.Migra.splice(_indice11, 1, this.Migra[_indice11]);
        }
      }

      if (opcion == "sape") {
        //SABER LA IDENTIFICACION EN EL VECTOR DE INTEGRANTES SEGUN EL INDICE Q
        //VIENE DE LA TABLA
        var _id10 = this.vectorIntegrante[index].identificacion; //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY

        var _indice12 = this.Men1A.findIndex(function (identi) {
          return identi.identificacion === _id10;
        });

        if (_indice12 >= 0) {
          this.Men1A[_indice12].sape = item.sape;
          this.Men1A.splice(_indice12, 1, this.Men1A[_indice12]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice12 = this.De1A5.findIndex(function (identi) {
          return identi.identificacion === _id10;
        });

        if (_indice12 >= 0) {
          this.De1A5[_indice12].sape = item.sape;
          this.De1A5.splice(_indice12, 1, this.De1A5[_indice12]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice12 = this.De6A11.findIndex(function (identi) {
          return identi.identificacion === _id10;
        });

        if (_indice12 >= 0) {
          this.De6A11[_indice12].sape = item.sape;
          this.De6A11.splice(_indice12, 1, this.De6A11[_indice12]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice12 = this.De10A59.findIndex(function (identi) {
          return identi.identificacion === _id10;
        });

        if (_indice12 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De10A59[_indice12].sape = item.sape;
          this.De10A59.splice(_indice12, 1, this.De10A59[_indice12]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice12 = this.ParPost.findIndex(function (identi) {
          return identi.identificacion === _id10;
        });

        if (_indice12 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.ParPost[_indice12].sape = item.sape;
          this.ParPost.splice(_indice12, 1, this.ParPost[_indice12]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice12 = this.De12A17.findIndex(function (identi) {
          return identi.identificacion === _id10;
        });

        if (_indice12 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De12A17[_indice12].sape = item.sape;
          this.De12A17.splice(_indice12, 1, this.De12A17[_indice12]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice12 = this.De18A28.findIndex(function (identi) {
          return identi.identificacion === _id10;
        });

        if (_indice12 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De18A28[_indice12].sape = item.sape;
          this.De18A28.splice(_indice12, 1, this.De18A28[_indice12]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice12 = this.De29A59.findIndex(function (identi) {
          return identi.identificacion === _id10;
        });

        if (_indice12 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De29A59[_indice12].sape = item.sape;
          this.De29A59.splice(_indice12, 1, this.De29A59[_indice12]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice12 = this.De60.findIndex(function (identi) {
          return identi.identificacion === _id10;
        });

        if (_indice12 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.De60[_indice12].sape = item.sape;
          this.De60.splice(_indice12, 1, this.De60[_indice12]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice12 = this.Migra.findIndex(function (identi) {
          return identi.identificacion === _id10;
        });

        if (_indice12 >= 0) {
          //CAMBIAR LA IDENTIFICACION DE ESTE VECTOR POR LA IDENTIFICACION DEL VECTOR JEFES
          this.Migra[_indice12].sape = item.sape;
          this.Migra.splice(_indice12, 1, this.Migra[_indice12]);
        }
      }
    },
    limpiar: function limpiar() {
      this.CA1.tipo_id = "0";
      this.CA1.identificacion = "";
      this.CA1.sexo = "0";
      this.CA1.parentesco = "0";
      this.CA1.pnom = "";
      this.CA1.snom = "";
      this.CA1.pape = "";
      this.CA1.sape = "";
      this.CA1.estado_civil = "0";
      this.CA1.fecha_nac = "";
      this.CA1.edad = 0;
      this.CA1.afi_entidad = "0";
      this.CA1.tipo_afiliacion = "0";
      this.CA1.otra_eps = "";
      this.CA1.embarazo = "0";
      this.CA1.embarazo_multiple = "0";
      this.CA1.discapacidad = "0";
      this.CA1.escolaridad = "0";
      this.CA1.ocupacion = "0";
      this.CA1.colegio = "";
      this.CA1.grado = "0";
      this.CA1.entiende = "0";
      this.CA1.migrante = "0";
      this.CA1.pyp = "0";
      this.CA1.etnia = "0";
      this.CA1.clasificacion = "0";
      this.CA1.puntaje_sisben = "";
      this.CA1.jefe = "0";
      this.CA1.telefono = "";
      this.CA1.orientacion = "0";
      this.CA1.identidad_genero = "0";
      this.CA1.perdida_peso = "0";
      this.CA1.programa_icbf = "0";
      this.CA1.excepciones = "0";
      this.CA1.meses = "";
      this.CA1.dias = "";
      this.ocupacionAuxiliar2 = "";
      this.bandeGuaEdiInte = true;
      this.indiceEditInte = null;
      this.idEditar = null;
      this.identificacionEditar = null;
      this.fechaEditar = null;
      this.edadEditar = null;
      this.embarazoEditar = null;
      this.CA1.enfermedad_infecciosa = "0";
      this.CA1.enfermedad_cronica = "0";
      this.CA1.peso = "0";
      this.CA1.talla = "0";
    },
    eliminarItem: function eliminarItem(index, item) {
      var _this11 = this;

      var nombre = " " + item.pnom + " " + item.snom + " " + item.pape + " " + item.sape;
      this.$swal({
        title: "¿Desea anular el integrante  " + nombre + "?",
        text: "",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Aceptar",
        cancelButtonText: "Cancelar"
      }).then(function (result) {
        if (result.value) {
          if (item.id === 0) {
            _this11.datos.splice(index, 1);

            _this11.vectorIntegrante.splice(index, 1);

            var identificacion = item.identificacion;
            _this11.Men1A = _this11.Men1A.filter(function (men) {
              return men.identificacion != identificacion;
            });
            _this11.De1A5 = _this11.De1A5.filter(function (men) {
              return men.identificacion != identificacion;
            });
            _this11.De6A11 = _this11.De6A11.filter(function (men) {
              return men.identificacion != identificacion;
            });
            _this11.De10A59 = _this11.De10A59.filter(function (men) {
              return men.identificacion != identificacion;
            });
            _this11.ParPost = _this11.ParPost.filter(function (men) {
              return men.identificacion != identificacion;
            });
            _this11.De12A17 = _this11.De12A17.filter(function (men) {
              return men.identificacion != identificacion;
            });
            _this11.De18A28 = _this11.De18A28.filter(function (men) {
              return men.identificacion != identificacion;
            });
            _this11.De29A59 = _this11.De29A59.filter(function (men) {
              return men.identificacion != identificacion;
            });
            _this11.De60 = _this11.De60.filter(function (men) {
              return men.identificacion != identificacion;
            });
            _this11.EnCro = _this11.EnCro.filter(function (men) {
              return men.identificacion != identificacion;
            });
            _this11.EnInf = _this11.EnInf.filter(function (men) {
              return men.identificacion != identificacion;
            });
            _this11.Migra = _this11.Migra.filter(function (men) {
              return men.identificacion != identificacion;
            });
          } else {
            var _identificacion2 = item.identificacion;

            var indice = _this11.datos.findIndex(function (identi) {
              return identi.identificacion === _identificacion2;
            });

            if (indice >= 0) {
              _this11.datos[indice].estado = "Inactivo";

              _this11.datos.splice(indice, 1, _this11.datos[indice]);
            }

            indice = _this11.Men1A.findIndex(function (identi) {
              return identi.identificacion === _identificacion2;
            });

            if (indice >= 0) {
              _this11.Men1A[indice].estado = "Inactivo";

              _this11.Men1A.splice(indice, 1, _this11.Men1A[indice]);
            }

            indice = _this11.De1A5.findIndex(function (identi) {
              return identi.identificacion === _identificacion2;
            });

            if (indice >= 0) {
              _this11.De1A5[indice].estado = "Inactivo";

              _this11.De1A5.splice(indice, 1, _this11.De1A5[indice]);
            }

            indice = _this11.De6A11.findIndex(function (identi) {
              return identi.identificacion === _identificacion2;
            });

            if (indice >= 0) {
              _this11.De6A11[indice].estado = "Inactivo";

              _this11.De6A11.splice(indice, 1, _this11.De6A11[indice]);
            }

            indice = _this11.De10A59.findIndex(function (identi) {
              return identi.identificacion === _identificacion2;
            });

            if (indice >= 0) {
              _this11.De10A59[indice].estado = "Inactivo";

              _this11.De10A59.splice(indice, 1, _this11.De10A59[indice]);
            }

            indice = _this11.De12A17.findIndex(function (identi) {
              return identi.identificacion === _identificacion2;
            });

            if (indice >= 0) {
              _this11.De12A17[indice].estado = "Inactivo";

              _this11.De12A17.splice(indice, 1, _this11.De12A17[indice]);
            }

            indice = _this11.De18A28.findIndex(function (identi) {
              return identi.identificacion === _identificacion2;
            });

            if (indice >= 0) {
              _this11.De18A28[indice].estado = "Inactivo";

              _this11.De18A28.splice(indice, 1, _this11.De18A28[indice]);
            }

            indice = _this11.De29A59.findIndex(function (identi) {
              return identi.identificacion === _identificacion2;
            });

            if (indice >= 0) {
              _this11.De29A59[indice].estado = "Inactivo";

              _this11.De29A59.splice(indice, 1, _this11.De29A59[indice]);
            }

            indice = _this11.De60.findIndex(function (identi) {
              return identi.identificacion === _identificacion2;
            });

            if (indice >= 0) {
              _this11.De60[indice].estado = "Inactivo";

              _this11.De60.splice(indice, 1, _this11.De60[indice]);
            }

            indice = _this11.EnCro.findIndex(function (identi) {
              return identi.identificacion === _identificacion2;
            });

            if (indice >= 0) {
              _this11.EnCro[indice].estado = "Inactivo";

              _this11.EnCro.splice(indice, 1, _this11.EnCro[indice]);
            }

            indice = _this11.EnInf.findIndex(function (identi) {
              return identi.identificacion === _identificacion2;
            });

            if (indice >= 0) {
              _this11.EnInf[indice].estado = "Inactivo";

              _this11.EnInf.splice(indice, 1, _this11.EnInf[indice]);
            }

            indice = _this11.Migra.findIndex(function (identi) {
              return identi.identificacion === _identificacion2;
            });

            if (indice >= 0) {
              _this11.Migra[indice].estado = "Inactivo";

              _this11.Migra.splice(indice, 1, _this11.Migra[indice]);
            }
          }

          _this11.$swal("Eliminar...!", "Datos En Proceso de Eliminación!", "success");
        }
      });
    },
    validarTablaIntegrantes: function () {
      var _validarTablaIntegrantes = _asyncToGenerator(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee10() {
        var _this12 = this;

        var _loop4, i;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee10$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                _loop4 =
                /*#__PURE__*/
                _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _loop4(i) {
                  var parametros;
                  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _loop4$(_context11) {
                    while (1) {
                      switch (_context11.prev = _context11.next) {
                        case 0:
                          parametros = {
                            _token: _this12.csrf,
                            identificacion: _this12.datos[i].identificacion
                          };
                          _context11.prev = 1;
                          _context11.next = 4;
                          return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["validarJefe"](parametros).then(function (respuesta) {
                            if (respuesta.data.OPC == "EXISTE") {
                              var val = (respuesta.data.identificacion / 1).toFixed(0).replace(".", ",");
                              var iden = val.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

                              _this12.$swal("Validar...!", "El Documento <b>" + iden + "</b> De La Fila <b>" + (i + 1) + "</b> Se Encuentra Registrado", "warning"); // item.identificacion="";


                              return false;
                            } else {
                              // VERIFICAR SI ESTA EN LA TABLA
                              var resultado = _this12.datos.filter(function (identi) {
                                return identi.identificacion.includes(_this12.datos[i].identificacion);
                              }); // VERIFICAR SI ESTA EN LA TABLA


                              if (resultado.length > 1) {
                                _this12.$swal("Validar...!", "El Documento <b>" + _this12.datos[i].identificacion + "</b> De La Fila <b>" + (i + 1) + "</b>  Se Encuentra Agregado En La Tabla de Integrantes", "warning"); // item.identificacion="";


                                return false;
                              } else {
                                if (_this12.datos[i].tipo_id === "0") {
                                  _this12.$swal("Error...!", "Por favor seleccione un <b>tipo de identificación</b> en la fila " + (i + 1) + " de los integrantes", "error");

                                  return false;
                                }

                                if (_this12.datos[i].identificacion === "") {
                                  _this12.$swal("Error...!", "Por favor digite una <b>identificación</b> en la fila " + (i + 1) + " de los integrantes", "error");

                                  return false;
                                }

                                if (_this12.datos[i].pnom === "") {
                                  _this12.$swal("Error...!", "Por favor digite el <b>primer nombre</b> en la fila " + (i + 1) + " de los integrantes", "error");

                                  return false;
                                }

                                if (_this12.datos[i].pape === "") {
                                  _this12.$swal("Error...!", "Por favor digite el <b>primer apellido</b> en la fila " + (i + 1) + " de los integrantes", "error");

                                  return false;
                                }

                                if (_this12.datos[i].sexo === "0") {
                                  _this12.$swal("Error...!", "Por favor seleccione el <b>sexo</b> en la fila " + (i + 1) + " de los integrantes", "error");

                                  return false;
                                }

                                if (_this12.datos[i].parentesco === "0") {
                                  _this12.$swal("Error...!", "Por favor seleccione el <b>parentesco</b> en la fila " + (i + 1) + " de los integrantes", "error");

                                  return false;
                                }

                                if (_this12.datos[i].estado_civil === "0") {
                                  _this12.$swal("Error...!", "Por favor seleccione el <b>estado civil</b> en la fila " + (i + 1) + " de los integrantes", "error");

                                  return false;
                                }

                                if (_this12.datos[i].fecha_nac === "") {
                                  _this12.$swal("Error...!", "Por favor seleccione la <b>fecha de nacimiento</b> en la fila " + (i + 1) + " de los integrantes", "error");

                                  return false;
                                }

                                if (_this12.datos[i].afi_entidad === "0") {
                                  _this12.$swal("Error...!", "Por favor seleccione la <b>eps</b> en la fila " + (i + 1) + " de los integrantes", "error");

                                  return false;
                                }

                                if (_this12.datos[i].tipo_afiliacion === "0") {
                                  _this12.$swal("Error...!", "Por favor seleccione el <b>tipo de afiliación</b> en la fila " + (i + 1) + " de los integrantes", "error");

                                  return false;
                                }

                                if (_this12.datos[i].escolaridad === "0") {
                                  _this12.$swal("Error...!", "Por favor seleccione el <b>nivel de escolaridad</b> en la fila " + (i + 1) + " de los integrantes", "error");

                                  return false;
                                }

                                if (_this12.datos[i].ocupacion === "0") {
                                  _this12.$swal("Error...!", "Por favor seleccione la <b>ocupación</b> en la fila " + (i + 1) + " de los integrantes", "error");

                                  return false;
                                }

                                if (_this12.datos[i].etnia === "0") {
                                  _this12.$swal("Error...!", "Por favor seleccione la <b>etnia</b> en la fila " + (i + 1) + " de los integrantes", "error");

                                  return false;
                                }

                                if (_this12.datos[i].clasificacion === "0") {
                                  _this12.$swal("Error...!", "Por favor seleccione la <b>clasificacion de la etnia</b> en la fila " + (i + 1) + " de los integrantes", "error");

                                  return false;
                                }

                                if (_this12.datos[i].jefe === "0") {
                                  _this12.$swal("Error...!", "Por favor seleccione el <b>jefe de hogar</b> en la fila " + (i + 1) + " de los integrantes", "error");

                                  return false;
                                }

                                return true;
                              }
                            }
                          })["catch"](function (error) {});

                        case 4:
                          _context11.next = 8;
                          break;

                        case 6:
                          _context11.prev = 6;
                          _context11.t0 = _context11["catch"](1);

                        case 8:
                        case "end":
                          return _context11.stop();
                      }
                    }
                  }, _loop4, null, [[1, 6]]);
                });
                i = 0;

              case 2:
                if (!(i < this.datos.length)) {
                  _context12.next = 7;
                  break;
                }

                return _context12.delegateYield(_loop4(i), "t0", 4);

              case 4:
                i++;
                _context12.next = 2;
                break;

              case 7:
              case "end":
                return _context12.stop();
            }
          }
        }, _callee10, this);
      }));

      function validarTablaIntegrantes() {
        return _validarTablaIntegrantes.apply(this, arguments);
      }

      return validarTablaIntegrantes;
    }(),
    editarItemInte: function editarItemInte(index, item) {
      var _this13 = this;

      this.bandeGuaEdiInte = false;
      this.indiceEditInte = index;
      this.CA1.id = item.id;
      this.CA1.tipo_id = item.tipo_id;
      this.CA1.identificacion = item.identificacion;
      this.CA1.sexo = item.sexo;
      this.CA1.parentesco = item.parentesco;
      this.CA1.pnom = item.pnom;
      this.CA1.snom = item.snom;
      this.CA1.pape = item.pape;
      this.CA1.sape = item.sape;
      this.CA1.estado_civil = item.estado_civil;
      this.CA1.fecha_nac = item.fecha_nac;
      this.CA1.edad = item.edad;
      this.CA1.puntaje_sisben = item.puntaje_sisben;
      this.CA1.afi_entidad = item.afi_entidad;
      this.CA1.otra_eps = item.otra_eps;
      this.CA1.tipo_afiliacion = item.tipo_afiliacion;
      this.CA1.embarazo = item.embarazo;
      setTimeout(function () {
        _this13.CA1.embarazo_multiple = item.embarazo_multiple;
      }, 1000);
      this.CA1.discapacidad = item.discapacidad;
      this.CA1.escolaridad = item.escolaridad;
      this.CA1.ocupacion = item.ocupacion;
      this.CA1.colegio = item.colegio;
      this.CA1.grado = item.grado;
      this.CA1.entiende = item.entiende;
      this.CA1.migrante = item.migrante;
      this.CA1.pyp = item.pyp;
      this.CA1.etnia = item.etnia;
      this.CA1.clasificacion = item.clasificacion;
      this.CA1.id_hogar = item.id_hogar;
      this.CA1.jefe = item.jefe;
      this.CA1.orientacion = item.orientacion;
      this.CA1.identidad_genero = item.identidad_genero;
      this.CA1.telefono = item.telefono;
      this.CA1.perdida_peso = item.perdida_peso;
      this.CA1.programa_icbf = item.programa_icbf;
      this.CA1.excepciones = item.excepciones;
      this.CA1.meses = item.meses;
      this.CA1.dias = item.dias;
      this.ocupacionAuxiliar2 = item.textoOcupacion;
      this.CA1.enfermedad_infecciosa = item.enfermedad_infecciosa;
      this.CA1.enfermedad_cronica = item.enfermedad_cronica;
      this.CA1.peso = item.peso;
      this.CA1.talla = item.talla;
      this.$refs.identificacionInte.focus();
      this.idEditar = item.id;
      this.identificacionEditar = item.identificacion;
      this.fechaEditar = item.fecha_nac;
      this.edadEditar = item.edad;
      this.embarazoEditar = item.embarazo;
      var id = item.identificacion; //INACTIVAR LA FILA DE INTEGRANTES

      this.datos[this.indiceEditInte].estado = "Inactivo";
      this.datos.splice(this.indiceEditInte, 1, this.datos[this.indiceEditInte]); //INACTIVAR LA FILA DE INTEGRANTES
      //SABER EL INDICE DE LA IDENTIFICACION DE Men1A

      var indice = this.Men1A.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.Men1A[indice].estado = "Inactivo";
        this.Men1A.splice(indice, 1, this.Men1A[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE Men1A
      //SABER EL INDICE DE LA IDENTIFICACION DE De1A5


      indice = this.De1A5.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.De1A5[indice].estado = "Inactivo";
        this.De1A5.splice(indice, 1, this.De1A5[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE De1A5
      //SABER EL INDICE DE LA IDENTIFICACION DE De6A11


      indice = this.De6A11.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.De6A11[indice].estado = "Inactivo";
        this.De6A11.splice(indice, 1, this.De6A11[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE De6A11
      //SABER EL INDICE DE LA IDENTIFICACION DE De10A59


      indice = this.De10A59.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.De10A59[indice].estado = "Inactivo";
        this.De10A59.splice(indice, 1, this.De10A59[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE De10A59
      //SABER EL INDICE DE LA IDENTIFICACION DE ParPost


      indice = this.ParPost.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.ParPost[indice].estado = "Inactivo";
        this.ParPost.splice(indice, 1, this.ParPost[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE ParPost
      //SABER EL INDICE DE LA IDENTIFICACION DE De12A17


      indice = this.De12A17.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.De12A17[indice].estado = "Inactivo";
        this.De12A17.splice(indice, 1, this.De12A17[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE De12A17
      //SABER EL INDICE DE LA IDENTIFICACION DE De18A28


      indice = this.De18A28.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.De18A28[indice].estado = "Inactivo";
        this.De18A28.splice(indice, 1, this.De18A28[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE De18A28
      //SABER EL INDICE DE LA IDENTIFICACION DE De29A59


      indice = this.De29A59.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.De29A59[indice].estado = "Inactivo";
        this.De29A59.splice(indice, 1, this.De29A59[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE De29A59
      //SABER EL INDICE DE LA IDENTIFICACION DE De60


      indice = this.De60.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.De60[indice].estado = "Inactivo";
        this.De60.splice(indice, 1, this.De60[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE De60
      //SABER EL INDICE DE LA IDENTIFICACION DE EnCro


      indice = this.EnCro.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.EnCro[indice].estado = "Inactivo";
        this.EnCro.splice(indice, 1, this.EnCro[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE EnCro        
      //SABER EL INDICE DE LA IDENTIFICACION DE EnInf


      indice = this.EnInf.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.EnInf[indice].estado = "Inactivo";
        this.EnInf.splice(indice, 1, this.EnInf[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE EnInf
      //SABER EL INDICE DE LA IDENTIFICACION DE Migra


      indice = this.Migra.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.Migra[indice].estado = "Inactivo";
        this.Migra.splice(indice, 1, this.Migra[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE Migra        

    },
    CancelarEditarInte: function CancelarEditarInte() {
      this.datos[this.indiceEditInte].estado = "Activo";
      this.datos.splice(this.indiceEditInte, 1, this.datos[this.indiceEditInte]);
      var id = this.identificacionEditar; //INACTIVAR LA FILA DE INTEGRANTES

      this.datos[this.indiceEditInte].estado = "Activo";
      this.datos.splice(this.indiceEditInte, 1, this.datos[this.indiceEditInte]); //INACTIVAR LA FILA DE INTEGRANTES
      //SABER EL INDICE DE LA IDENTIFICACION DE Men1A

      var indice = this.Men1A.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.Men1A[indice].estado = "Activo";
        this.Men1A.splice(indice, 1, this.Men1A[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE Men1A
      //SABER EL INDICE DE LA IDENTIFICACION DE De1A5


      indice = this.De1A5.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.De1A5[indice].estado = "Activo";
        this.De1A5.splice(indice, 1, this.De1A5[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE De1A5
      //SABER EL INDICE DE LA IDENTIFICACION DE De6A11


      indice = this.De6A11.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.De6A11[indice].estado = "Activo";
        this.De6A11.splice(indice, 1, this.De6A11[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE De6A11
      //SABER EL INDICE DE LA IDENTIFICACION DE De10A59


      indice = this.De10A59.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.De10A59[indice].estado = "Activo";
        this.De10A59.splice(indice, 1, this.De10A59[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE De10A59
      //SABER EL INDICE DE LA IDENTIFICACION DE ParPost


      indice = this.ParPost.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.ParPost[indice].estado = "Activo";
        this.ParPost.splice(indice, 1, this.ParPost[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE ParPost
      //SABER EL INDICE DE LA IDENTIFICACION DE De12A17


      indice = this.De12A17.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.De12A17[indice].estado = "Activo";
        this.De12A17.splice(indice, 1, this.De12A17[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE De12A17
      //SABER EL INDICE DE LA IDENTIFICACION DE De18A28


      indice = this.De18A28.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.De18A28[indice].estado = "Activo";
        this.De18A28.splice(indice, 1, this.De18A28[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE De18A28
      //SABER EL INDICE DE LA IDENTIFICACION DE De29A59


      indice = this.De29A59.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.De29A59[indice].estado = "Activo";
        this.De29A59.splice(indice, 1, this.De29A59[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE De29A59
      //SABER EL INDICE DE LA IDENTIFICACION DE De60


      indice = this.De60.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.De60[indice].estado = "Activo";
        this.De60.splice(indice, 1, this.De60[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE De60
      //SABER EL INDICE DE LA IDENTIFICACION DE EnCro


      indice = this.EnCro.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.EnCro[indice].estado = "Activo";
        this.EnCro.splice(indice, 1, this.EnCro[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE EnCro        
      //SABER EL INDICE DE LA IDENTIFICACION DE EnInf


      indice = this.EnInf.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.EnInf[indice].estado = "Activo";
        this.EnInf.splice(indice, 1, this.EnInf[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE EnInf
      //SABER EL INDICE DE LA IDENTIFICACION DE Migra


      indice = this.Migra.findIndex(function (identi) {
        return identi.identificacion === id;
      });

      if (indice >= 0) {
        this.Migra[indice].estado = "Activo";
        this.Migra.splice(indice, 1, this.Migra[indice]);
      } //SABER EL INDICE DE LA IDENTIFICACION DE Migra        


      this.limpiar();
    },
    editarInte: function () {
      var _editarInte = _asyncToGenerator(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee11() {
        var _this14 = this;

        var parametros;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee11$(_context13) {
          while (1) {
            switch (_context13.prev = _context13.next) {
              case 0:
                if (!(this.CA1.tipo_id == "0")) {
                  _context13.next = 3;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione un tipo de identificación!", "error");
                return _context13.abrupt("return");

              case 3:
                if (!(this.CA1.identificacion == "")) {
                  _context13.next = 6;
                  break;
                }

                this.$swal("Error...!", "Por favor digite el documento de identificación!", "error");
                return _context13.abrupt("return");

              case 6:
                if (!(this.CA1.sexo == "0")) {
                  _context13.next = 9;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione el sexo!", "error");
                return _context13.abrupt("return");

              case 9:
                if (!(this.CA1.orientacion === "0")) {
                  _context13.next = 12;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione la orientación sexual!", "error");
                return _context13.abrupt("return");

              case 12:
                if (!(this.CA1.identidad_genero === "0")) {
                  _context13.next = 15;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione la identidad de genero!", "error");
                return _context13.abrupt("return");

              case 15:
                if (!(this.CA1.parentesco == "0")) {
                  _context13.next = 18;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione el parentesco!", "error");
                return _context13.abrupt("return");

              case 18:
                if (!(this.CA1.pnom == "0")) {
                  _context13.next = 21;
                  break;
                }

                this.$swal("Error...!", "Por favor digite el primer nombre!", "error");
                return _context13.abrupt("return");

              case 21:
                if (!(this.CA1.pape == "0")) {
                  _context13.next = 24;
                  break;
                }

                this.$swal("Error...!", "Por favor digite el primer apellido!", "error");
                return _context13.abrupt("return");

              case 24:
                if (!(this.CA1.estado_civil == "0")) {
                  _context13.next = 27;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione el estado civil!", "error");
                return _context13.abrupt("return");

              case 27:
                if (!(this.CA1.fecha_nac == "")) {
                  _context13.next = 30;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione la fecha de nacimiento!", "error");
                return _context13.abrupt("return");

              case 30:
                if (!(this.CA1.escolaridad == "0")) {
                  _context13.next = 33;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione el nivel de escolaridad!", "error");
                return _context13.abrupt("return");

              case 33:
                if (!(this.CA1.ocupacion == "0")) {
                  _context13.next = 36;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione la ocupación!", "error");
                return _context13.abrupt("return");

              case 36:
                if (!(this.CA1.etnia == "0")) {
                  _context13.next = 39;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione la etnia!", "error");
                return _context13.abrupt("return");

              case 39:
                if (!(this.CA1.clasificacion == "0")) {
                  _context13.next = 42;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione la clasificacion de la etnia!", "error");
                return _context13.abrupt("return");

              case 42:
                if (!(this.CA1.entiende == "0")) {
                  _context13.next = 45;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione la opción entiende español!", "error");
                return _context13.abrupt("return");

              case 45:
                if (!(this.CA1.pyp == "0")) {
                  _context13.next = 48;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione la opción PYP!", "error");
                return _context13.abrupt("return");

              case 48:
                if (!(this.CA1.migrante == "0")) {
                  _context13.next = 51;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione la opción migrante!", "error");
                return _context13.abrupt("return");

              case 51:
                if (!(this.CA1.jefe == "0")) {
                  _context13.next = 54;
                  break;
                }

                this.$swal("Error...!", "Por favor seleccione el un jefe de hogar!", "error");
                return _context13.abrupt("return");

              case 54:
                if (!(this.CA1.perdida_peso === "")) {
                  _context13.next = 59;
                  break;
                }

                this.$refs.perdida_peso.focus();
                bande = false;
                this.$swal("Error...!", "Por favor seleccione la perdida de peso en los ultimos 3 meses!", "error");
                return _context13.abrupt("return");

              case 59:
                if (!(this.CA1.programa_icbf === "")) {
                  _context13.next = 64;
                  break;
                }

                this.$refs.programa_icbf.focus();
                bande = false;
                this.$swal("Error...!", "Por favor seleccione si Pertenece a algún programa del ICBF!", "error");
                return _context13.abrupt("return");

              case 64:
                if (!(this.CA1.excepciones === "0")) {
                  _context13.next = 68;
                  break;
                }

                bande = false;
                this.$swal("Error...!", "Por favor seleccione si la opción excepciones!", "error");
                return _context13.abrupt("return");

              case 68:
                this.CA1.identificacion = this.CA1.identificacion.replace(/[.*+\-?^${}()|[\]\\]/g, "");

                if (!(this.identificacionEditar === this.CA1.identificacion)) {
                  _context13.next = 73;
                  break;
                }

                this.ediIn();
                _context13.next = 90;
                break;

              case 73:
                parametros = {
                  _token: this.csrf,
                  identificacion: this.CA1.identificacion
                };
                _context13.prev = 74;
                _context13.next = 77;
                return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["validar"](parametros).then(function (respuesta) {
                  if (respuesta.data.OPC == "EXISTE") {
                    var val = (respuesta.data.identificacion / 1).toFixed(0).replace(".", ",");
                    var iden = val.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");

                    _this14.$swal("Validar...!", "El Documento <b>" + iden + "</b> Se Encuentra Registrado", "warning");

                    return false;
                  } else {
                    // VERIFICAR SI ESTA EN LA TABLA
                    var resultado = _this14.datos.filter(function (identi) {
                      return identi.identificacion == _this14.CA1.identificacion;
                    }); // VERIFICAR SI ESTA EN LA TABLA


                    if (resultado.length > 0) {
                      _this14.$swal("Validar...!", "El Documento <b>" + _this14.CA1.identificacion + "</b> Se Encuentra Agregado", "warning");

                      return false;
                    } else {
                      _this14.ediIn();
                    }
                  }
                })["catch"](function (error) {
                  _this14.errorDevuelto = error.response.data.errors;
                  _this14.entrarPorError = true;
                });

              case 77:
                _context13.next = 90;
                break;

              case 79:
                _context13.prev = 79;
                _context13.t0 = _context13["catch"](74);
                _context13.t1 = _context13.t0.response.status;
                _context13.next = _context13.t1 === 419 ? 84 : _context13.t1 === 422 ? 86 : 88;
                break;

              case 84:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context13.abrupt("break", 90);

              case 86:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context13.abrupt("break", 90);

              case 88:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context13.abrupt("break", 90);

              case 90:
              case "end":
                return _context13.stop();
            }
          }
        }, _callee11, this, [[74, 79]]);
      }));

      function editarInte() {
        return _editarInte.apply(this, arguments);
      }

      return editarInte;
    }(),
    ediIn: function ediIn() {
      this.CA1.identificacion = this.CA1.identificacion.replace(/[.*+\-?^${}()|[\]\\]/g, "");
      var nacimiento = moment(this.CA1.fecha_nac);
      var hoy = moment();
      var edad = 0;

      if (nacimiento < hoy) {
        edad = hoy.diff(nacimiento, "years"); //Calculamos la diferencia en años
      }

      var textoEps = "";

      if (this.CA1.afi_entidad === "OTRA") {
        textoEps = "OTRA";
      } else {
        if (this.CA1.afi_entidad === "NINGUNA") {
          textoEps = "NINGUNA";
        } else {
          textoEps = this.showText(this.CA1.afi_entidad, this.admini_options);
        }
      }

      if (this.CA1.tipo_afiliacion === "CONTRIBUTIVO" || this.CA1.tipo_afiliacion === "ESPECIAL") {
        this.SAPU = true;
        this.estratificacionData.afiliacion_salud_privada = "SI";
      }

      this.ocupacionAuxiliar2 = "";
      this.mOCOL2 = false;

      if (this.CA1.fecha_nac !== this.fechaEditar) {
        if (edad !== this.edadEditar) {
          // ELIMINO EN LOS CICLOS ESTA IDENTIFICACION Y LUEGO AGREGO EN LA EDAD CORRESPONDIENTE
          this.eliEdad(this.identificacionEditar, this.CA1, edad, "INTE");
        } else {
          var id = this.vectorIntegrante[this.indiceEditInte].identificacion; //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY

          var indice = this.Men1A.findIndex(function (identi) {
            return identi.identificacion === id;
          });

          if (indice >= 0) {
            this.Men1A[indice].tipo_id = this.CA1.tipo_id;
            this.Men1A[indice].sexo = this.CA1.sexo;
            this.Men1A[indice].identificacion = this.CA1.identificacion;
            this.Men1A[indice].pnom = this.CA1.pnom;
            this.Men1A[indice].snom = this.CA1.snom;
            this.Men1A[indice].pape = this.CA1.pape;
            this.Men1A[indice].sape = this.CA1.sape;
            this.Men1A[indice].peso_actual = this.CA1.peso;
            this.Men1A[indice].longitud_actual = this.CA1.talla;
            this.Men1A[indice].estado = "Activo";
            this.Men1A.splice(indice, 1, this.Men1A[indice]);
          } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


          indice = this.De1A5.findIndex(function (identi) {
            return identi.identificacion === id;
          });

          if (indice >= 0) {
            this.De1A5[indice].tipo_id = this.CA1.tipo_id;
            this.De1A5[indice].sexo = this.CA1.sexo;
            this.De1A5[indice].identificacion = this.CA1.identificacion;
            this.De1A5[indice].pnom = this.CA1.pnom;
            this.De1A5[indice].snom = this.CA1.snom;
            this.De1A5[indice].pape = this.CA1.pape;
            this.De1A5[indice].sape = this.CA1.sape;
            this.De1A5[indice].peso = this.CA1.peso;
            this.De1A5[indice].talla = this.CA1.talla;
            this.De1A5[indice].imc = this.calcularImc(this.CA1.peso, this.CA1.talla);
            this.De1A5[indice].estado = "Activo";
            this.De1A5.splice(indice, 1, this.De1A5[indice]);
          } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


          indice = this.De6A11.findIndex(function (identi) {
            return identi.identificacion === id;
          });

          if (indice >= 0) {
            this.De6A11[indice].tipo_id = this.CA1.tipo_id;
            this.De6A11[indice].sexo = this.CA1.sexo;
            this.De6A11[indice].identificacion = this.CA1.identificacion;
            this.De6A11[indice].pnom = this.CA1.pnom;
            this.De6A11[indice].snom = this.CA1.snom;
            this.De6A11[indice].pape = this.CA1.pape;
            this.De6A11[indice].sape = this.CA1.sape;
            this.De6A11[indice].peso = this.CA1.peso;
            this.De6A11[indice].talla = this.CA1.talla;
            this.De6A11[indice].imc = this.calcularImc(this.CA1.peso, this.CA1.talla);
            this.De6A11[indice].estado = "Activo";
            this.De6A11.splice(indice, 1, this.De6A11[indice]);
          } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


          indice = this.De10A59.findIndex(function (identi) {
            return identi.identificacion === id;
          });

          if (indice >= 0) {
            this.De10A59[indice].tipo_id = this.CA1.tipo_id;
            this.De10A59[indice].sexo = this.CA1.sexo;
            this.De10A59[indice].identificacion = this.CA1.identificacion;
            this.De10A59[indice].pnom = this.CA1.pnom;
            this.De10A59[indice].snom = this.CA1.snom;
            this.De10A59[indice].pape = this.CA1.pape;
            this.De10A59[indice].sape = this.CA1.sape;
            this.De10A59[indice].estado = "Activo";
            this.De10A59.splice(indice, 1, this.De10A59[indice]);
          }

          if (this.embarazoEditar === "SI") {
            indice = this.ParPost.findIndex(function (identi) {
              return identi.identificacion === id;
            });

            if (this.CA1.embarazo === "SI") {
              //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY            
              if (indice >= 0) {
                this.ParPost[indice].tipo_id = this.CA1.tipo_id;
                this.ParPost[indice].sexo = this.CA1.sexo;
                this.ParPost[indice].identificacion = this.CA1.identificacion;
                this.ParPost[indice].pnom = this.CA1.pnom;
                this.ParPost[indice].snom = this.CA1.snom;
                this.ParPost[indice].pape = this.CA1.pape;
                this.ParPost[indice].sape = this.CA1.sape;
                this.ParPost[indice].peso = this.CA1.peso;
                this.ParPost[indice].talla = this.CA1.talla;
                this.ParPost[indice].imc = this.calcularImc(this.CA1.peso, this.CA1.talla);
                this.ParPost[indice].estado = "Activo";
                this.ParPost.splice(indice, 1, this.ParPost[indice]);
              }
            } else if (this.CA1.embarazo === "NO") {
              //ELIMINO
              this.ParPost[indice].estado = "Inactivo";
              this.ParPost.splice(indice, 1, this.ParPost[indice]);
            }
          } else {
            if (this.CA1.embarazo === "SI") {
              //AGREGO
              this.AParPost(this.CA1, edad, "INTE");
            }
          } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


          indice = this.De12A17.findIndex(function (identi) {
            return identi.identificacion === id;
          });

          if (indice >= 0) {
            this.De12A17[indice].tipo_id = this.CA1.tipo_id;
            this.De12A17[indice].sexo = this.CA1.sexo;
            this.De12A17[indice].identificacion = this.CA1.identificacion;
            this.De12A17[indice].pnom = this.CA1.pnom;
            this.De12A17[indice].snom = this.CA1.snom;
            this.De12A17[indice].pape = this.CA1.pape;
            this.De12A17[indice].sape = this.CA1.sape;
            this.De12A17[indice].peso = this.CA1.peso;
            this.De12A17[indice].talla = this.CA1.talla;
            this.De12A17[indice].imc = this.calcularImc(this.CA1.peso, this.CA1.talla);
            this.De12A17[indice].estado = "Activo";
            this.De12A17.splice(indice, 1, this.De12A17[indice]);
          } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


          indice = this.De18A28.findIndex(function (identi) {
            return identi.identificacion === id;
          });

          if (indice >= 0) {
            this.De18A28[indice].tipo_id = this.CA1.tipo_id;
            this.De18A28[indice].sexo = this.CA1.sexo;
            this.De18A28[indice].identificacion = this.CA1.identificacion;
            this.De18A28[indice].pnom = this.CA1.pnom;
            this.De18A28[indice].snom = this.CA1.snom;
            this.De18A28[indice].pape = this.CA1.pape;
            this.De18A28[indice].sape = this.CA1.sape;
            this.De18A28[indice].peso = this.CA1.peso;
            this.De18A28[indice].talla = this.CA1.talla;
            this.De18A28[indice].imc = this.calcularImc(this.CA1.peso, this.CA1.talla);
            this.De18A28[indice].estado = "Activo";
            this.De18A28.splice(indice, 1, this.De18A28[indice]);
          } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


          indice = this.De29A59.findIndex(function (identi) {
            return identi.identificacion === id;
          });

          if (indice >= 0) {
            this.De29A59[indice].tipo_id = this.CA1.tipo_id;
            this.De29A59[indice].sexo = this.CA1.sexo;
            this.De29A59[indice].identificacion = this.CA1.identificacion;
            this.De29A59[indice].pnom = this.CA1.pnom;
            this.De29A59[indice].snom = this.CA1.snom;
            this.De29A59[indice].pape = this.CA1.pape;
            this.De29A59[indice].sape = this.CA1.sape;
            this.De29A59[indice].peso = this.CA1.peso;
            this.De29A59[indice].talla = this.CA1.talla;
            this.De29A59[indice].imc = this.calcularImc(this.CA1.peso, this.CA1.talla);
            this.De29A59[indice].estado = "Activo";
            this.De29A59.splice(indice, 1, this.De29A59[indice]);
          } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


          indice = this.De60.findIndex(function (identi) {
            return identi.identificacion === id;
          });

          if (indice >= 0) {
            this.De60[indice].tipo_id = this.CA1.tipo_id;
            this.De60[indice].sexo = this.CA1.sexo;
            this.De60[indice].identificacion = this.CA1.identificacion;
            this.De60[indice].pnom = this.CA1.pnom;
            this.De60[indice].snom = this.CA1.snom;
            this.De60[indice].pape = this.CA1.pape;
            this.De60[indice].sape = this.CA1.sape;
            this.De60[indice].peso = this.CA1.peso;
            this.De60[indice].talla = this.CA1.talla;
            this.De60[indice].imc = this.calcularImc(this.CA1.peso, this.CA1.talla);
            this.De60[indice].estado = "Activo";
            this.De60.splice(indice, 1, this.De60[indice]);
          } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


          indice = this.EnCro.findIndex(function (identi) {
            return identi.identificacion === id;
          });

          if (indice >= 0) {
            this.EnCro[indice].tipo_id = this.CA1.tipo_id;
            this.EnCro[indice].sexo = this.CA1.sexo;
            this.EnCro[indice].identificacion = this.CA1.identificacion;
            this.EnCro[indice].pnom = this.CA1.pnom;
            this.EnCro[indice].snom = this.CA1.snom;
            this.EnCro[indice].pape = this.CA1.pape;
            this.EnCro[indice].sape = this.CA1.sape;
            this.EnCro[indice].estado = "Activo";
            this.EnCro.splice(indice, 1, this.EnCro[indice]);
          } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


          indice = this.EnInf.findIndex(function (identi) {
            return identi.identificacion === id;
          });

          if (indice >= 0) {
            this.EnInf[indice].tipo_id = this.CA1.tipo_id;
            this.EnInf[indice].sexo = this.CA1.sexo;
            this.EnInf[indice].identificacion = this.CA1.identificacion;
            this.EnInf[indice].pnom = this.CA1.pnom;
            this.EnInf[indice].snom = this.CA1.snom;
            this.EnInf[indice].pape = this.CA1.pape;
            this.EnInf[indice].sape = this.CA1.sape;
            this.EnInf[indice].estado = "Activo";
            this.EnInf.splice(indice, 1, this.EnInf[indice]);
          } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


          indice = this.Migra.findIndex(function (identi) {
            return identi.identificacion === id;
          });

          if (indice >= 0) {
            this.Migra[indice].tipo_id = this.CA1.tipo_id;
            this.Migra[indice].sexo = this.CA1.sexo;
            this.Migra[indice].identificacion = this.CA1.identificacion;
            this.Migra[indice].pnom = this.CA1.pnom;
            this.Migra[indice].snom = this.CA1.snom;
            this.Migra[indice].pape = this.CA1.pape;
            this.Migra[indice].sape = this.CA1.sape;
            this.Migra[indice].estado = "Activo";
            this.Migra.splice(indice, 1, this.Migra[indice]);
          }
        }
      } else {
        var _id11 = this.vectorIntegrante[this.indiceEditInte].identificacion; //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY

        var _indice13 = this.Men1A.findIndex(function (identi) {
          return identi.identificacion === _id11;
        });

        if (_indice13 >= 0) {
          this.Men1A[_indice13].tipo_id = this.CA1.tipo_id;
          this.Men1A[_indice13].sexo = this.CA1.sexo;
          this.Men1A[_indice13].identificacion = this.CA1.identificacion;
          this.Men1A[_indice13].pnom = this.CA1.pnom;
          this.Men1A[_indice13].snom = this.CA1.snom;
          this.Men1A[_indice13].pape = this.CA1.pape;
          this.Men1A[_indice13].sape = this.CA1.sape;
          this.Men1A[_indice13].peso_actual = this.CA1.peso;
          this.Men1A[_indice13].longitud_actual = this.CA1.talla;
          this.Men1A[_indice13].estado = "Activo";
          this.Men1A.splice(_indice13, 1, this.Men1A[_indice13]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice13 = this.De1A5.findIndex(function (identi) {
          return identi.identificacion === _id11;
        });

        if (_indice13 >= 0) {
          this.De1A5[_indice13].tipo_id = this.CA1.tipo_id;
          this.De1A5[_indice13].sexo = this.CA1.sexo;
          this.De1A5[_indice13].identificacion = this.CA1.identificacion;
          this.De1A5[_indice13].pnom = this.CA1.pnom;
          this.De1A5[_indice13].snom = this.CA1.snom;
          this.De1A5[_indice13].pape = this.CA1.pape;
          this.De1A5[_indice13].sape = this.CA1.sape;
          this.De1A5[_indice13].peso = this.CA1.peso;
          this.De1A5[_indice13].talla = this.CA1.talla;
          this.De1A5[_indice13].imc = this.calcularImc(this.CA1.peso, this.CA1.talla);
          this.De1A5[_indice13].estado = "Activo";
          this.De1A5.splice(_indice13, 1, this.De1A5[_indice13]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice13 = this.De6A11.findIndex(function (identi) {
          return identi.identificacion === _id11;
        });

        if (_indice13 >= 0) {
          this.De6A11[_indice13].tipo_id = this.CA1.tipo_id;
          this.De6A11[_indice13].sexo = this.CA1.sexo;
          this.De6A11[_indice13].identificacion = this.CA1.identificacion;
          this.De6A11[_indice13].pnom = this.CA1.pnom;
          this.De6A11[_indice13].snom = this.CA1.snom;
          this.De6A11[_indice13].pape = this.CA1.pape;
          this.De6A11[_indice13].sape = this.CA1.sape;
          this.De6A11[_indice13].peso = this.CA1.peso;
          this.De6A11[_indice13].talla = this.CA1.talla;
          this.De6A11[_indice13].imc = this.calcularImc(this.CA1.peso, this.CA1.talla);
          this.De6A11[_indice13].estado = "Activo";
          this.De6A11.splice(_indice13, 1, this.De6A11[_indice13]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice13 = this.De10A59.findIndex(function (identi) {
          return identi.identificacion === _id11;
        });

        if (_indice13 >= 0) {
          this.De10A59[_indice13].tipo_id = this.CA1.tipo_id;
          this.De10A59[_indice13].sexo = this.CA1.sexo;
          this.De10A59[_indice13].identificacion = this.CA1.identificacion;
          this.De10A59[_indice13].pnom = this.CA1.pnom;
          this.De10A59[_indice13].snom = this.CA1.snom;
          this.De10A59[_indice13].pape = this.CA1.pape;
          this.De10A59[_indice13].sape = this.CA1.sape;
          this.De10A59[_indice13].estado = "Activo";
          this.De10A59.splice(_indice13, 1, this.De10A59[_indice13]);
        }

        if (this.embarazoEditar === "SI") {
          _indice13 = this.ParPost.findIndex(function (identi) {
            return identi.identificacion === _id11;
          });

          if (this.CA1.embarazo === "SI") {
            //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY            
            if (_indice13 >= 0) {
              this.ParPost[_indice13].tipo_id = this.CA1.tipo_id;
              this.ParPost[_indice13].sexo = this.CA1.sexo;
              this.ParPost[_indice13].identificacion = this.CA1.identificacion;
              this.ParPost[_indice13].pnom = this.CA1.pnom;
              this.ParPost[_indice13].snom = this.CA1.snom;
              this.ParPost[_indice13].pape = this.CA1.pape;
              this.ParPost[_indice13].sape = this.CA1.sape;
              this.ParPost[_indice13].peso = this.CA1.peso;
              this.ParPost[_indice13].talla = this.CA1.talla;
              this.ParPost[_indice13].imc = this.calcularImc(this.CA1.peso, this.CA1.talla);
              this.ParPost[_indice13].estado = "Activo";
              this.ParPost.splice(_indice13, 1, this.ParPost[_indice13]);
            }
          } else if (this.CA1.embarazo === "NO") {
            //ELIMINO
            this.ParPost[_indice13].estado = "Inactivo";
            this.ParPost.splice(_indice13, 1, this.ParPost[_indice13]);
          }
        } else {
          if (this.CA1.embarazo === "SI") {
            //AGREGO
            this.AParPost(this.CA1, edad, "INTE");
          }
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice13 = this.De12A17.findIndex(function (identi) {
          return identi.identificacion === _id11;
        });

        if (_indice13 >= 0) {
          this.De12A17[_indice13].tipo_id = this.CA1.tipo_id;
          this.De12A17[_indice13].sexo = this.CA1.sexo;
          this.De12A17[_indice13].identificacion = this.CA1.identificacion;
          this.De12A17[_indice13].pnom = this.CA1.pnom;
          this.De12A17[_indice13].snom = this.CA1.snom;
          this.De12A17[_indice13].pape = this.CA1.pape;
          this.De12A17[_indice13].sape = this.CA1.sape;
          this.De12A17[_indice13].peso = this.CA1.peso;
          this.De12A17[_indice13].talla = this.CA1.talla;
          this.De12A17[_indice13].imc = this.calcularImc(this.CA1.peso, this.CA1.talla);
          this.De12A17[_indice13].estado = "Activo";
          this.De12A17.splice(_indice13, 1, this.De12A17[_indice13]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice13 = this.De18A28.findIndex(function (identi) {
          return identi.identificacion === _id11;
        });

        if (_indice13 >= 0) {
          this.De18A28[_indice13].tipo_id = this.CA1.tipo_id;
          this.De18A28[_indice13].sexo = this.CA1.sexo;
          this.De18A28[_indice13].identificacion = this.CA1.identificacion;
          this.De18A28[_indice13].pnom = this.CA1.pnom;
          this.De18A28[_indice13].snom = this.CA1.snom;
          this.De18A28[_indice13].pape = this.CA1.pape;
          this.De18A28[_indice13].sape = this.CA1.sape;
          this.De18A28[_indice13].peso = this.CA1.peso;
          this.De18A28[_indice13].talla = this.CA1.talla;
          this.De18A28[_indice13].imc = this.calcularImc(this.CA1.peso, this.CA1.talla);
          this.De18A28[_indice13].estado = "Activo";
          this.De18A28.splice(_indice13, 1, this.De18A28[_indice13]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice13 = this.De29A59.findIndex(function (identi) {
          return identi.identificacion === _id11;
        });

        if (_indice13 >= 0) {
          this.De29A59[_indice13].tipo_id = this.CA1.tipo_id;
          this.De29A59[_indice13].sexo = this.CA1.sexo;
          this.De29A59[_indice13].identificacion = this.CA1.identificacion;
          this.De29A59[_indice13].pnom = this.CA1.pnom;
          this.De29A59[_indice13].snom = this.CA1.snom;
          this.De29A59[_indice13].pape = this.CA1.pape;
          this.De29A59[_indice13].sape = this.CA1.sape;
          this.De29A59[_indice13].peso = this.CA1.peso;
          this.De29A59[_indice13].talla = this.CA1.talla;
          this.De29A59[_indice13].imc = this.calcularImc(this.CA1.peso, this.CA1.talla);
          this.De29A59[_indice13].estado = "Activo";
          this.De29A59.splice(_indice13, 1, this.De29A59[_indice13]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice13 = this.De60.findIndex(function (identi) {
          return identi.identificacion === _id11;
        });

        if (_indice13 >= 0) {
          this.De60[_indice13].tipo_id = this.CA1.tipo_id;
          this.De60[_indice13].sexo = this.CA1.sexo;
          this.De60[_indice13].identificacion = this.CA1.identificacion;
          this.De60[_indice13].pnom = this.CA1.pnom;
          this.De60[_indice13].snom = this.CA1.snom;
          this.De60[_indice13].pape = this.CA1.pape;
          this.De60[_indice13].sape = this.CA1.sape;
          this.De60[_indice13].peso = this.CA1.peso;
          this.De60[_indice13].talla = this.CA1.talla;
          this.De60[_indice13].imc = this.calcularImc(this.CA1.peso, this.CA1.talla);
          this.De60[_indice13].estado = "Activo";
          this.De60.splice(_indice13, 1, this.De60[_indice13]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice13 = this.EnCro.findIndex(function (identi) {
          return identi.identificacion === _id11;
        });

        if (_indice13 >= 0) {
          this.EnCro[_indice13].tipo_id = this.CA1.tipo_id;
          this.EnCro[_indice13].sexo = this.CA1.sexo;
          this.EnCro[_indice13].identificacion = this.CA1.identificacion;
          this.EnCro[_indice13].pnom = this.CA1.pnom;
          this.EnCro[_indice13].snom = this.CA1.snom;
          this.EnCro[_indice13].pape = this.CA1.pape;
          this.EnCro[_indice13].sape = this.CA1.sape;
          this.EnCro[_indice13].estado = "Activo";
          this.EnCro.splice(_indice13, 1, this.EnCro[_indice13]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice13 = this.EnInf.findIndex(function (identi) {
          return identi.identificacion === _id11;
        });

        if (_indice13 >= 0) {
          this.EnInf[_indice13].tipo_id = this.CA1.tipo_id;
          this.EnInf[_indice13].sexo = this.CA1.sexo;
          this.EnInf[_indice13].identificacion = this.CA1.identificacion;
          this.EnInf[_indice13].pnom = this.CA1.pnom;
          this.EnInf[_indice13].snom = this.CA1.snom;
          this.EnInf[_indice13].pape = this.CA1.pape;
          this.EnInf[_indice13].sape = this.CA1.sape;
          this.EnInf[_indice13].estado = "Activo";
          this.EnInf.splice(_indice13, 1, this.EnInf[_indice13]);
        } //SABER EL INDICE DE LA IDENTIFICACION QUE ESTA EN ESTE ARRAY


        _indice13 = this.Migra.findIndex(function (identi) {
          return identi.identificacion === _id11;
        });

        if (_indice13 >= 0) {
          this.Migra[_indice13].tipo_id = this.CA1.tipo_id;
          this.Migra[_indice13].sexo = this.CA1.sexo;
          this.Migra[_indice13].identificacion = this.CA1.identificacion;
          this.Migra[_indice13].pnom = this.CA1.pnom;
          this.Migra[_indice13].snom = this.CA1.snom;
          this.Migra[_indice13].pape = this.CA1.pape;
          this.Migra[_indice13].sape = this.CA1.sape;
          this.Migra[_indice13].estado = "Activo";
          this.Migra.splice(_indice13, 1, this.Migra[_indice13]);
        }
      }

      this.datos[this.indiceEditInte].id = this.CA1.id;
      this.datos[this.indiceEditInte].estado = "Activo";
      this.datos[this.indiceEditInte].tipo_id = this.CA1.tipo_id;
      this.datos[this.indiceEditInte].identificacion = this.CA1.identificacion;
      this.datos[this.indiceEditInte].sexo = this.CA1.sexo;
      this.datos[this.indiceEditInte].parentesco = this.CA1.parentesco;
      this.datos[this.indiceEditInte].textoParentesco = this.showText(Number(this.CA1.parentesco), this.parentesco_options);
      this.datos[this.indiceEditInte].pnom = this.CA1.pnom;
      this.datos[this.indiceEditInte].snom = this.CA1.snom;
      this.datos[this.indiceEditInte].pape = this.CA1.pape;
      this.datos[this.indiceEditInte].sape = this.CA1.sape;
      this.datos[this.indiceEditInte].estado_civil = this.CA1.estado_civil;
      this.datos[this.indiceEditInte].textoEstado = this.showText(Number(this.CA1.estado_civil), this.estado_options);
      this.datos[this.indiceEditInte].fecha_nac = this.CA1.fecha_nac;
      this.datos[this.indiceEditInte].edad = this.CA1.edad;
      this.datos[this.indiceEditInte].puntaje_sisben = this.CA1.puntaje_sisben;
      this.datos[this.indiceEditInte].afi_entidad = this.CA1.afi_entidad;
      this.datos[this.indiceEditInte].textoEps = this.showText(Number(this.CA1.afi_entidad), this.admini_options);
      this.datos[this.indiceEditInte].otra_eps = this.CA1.otra_eps;
      this.datos[this.indiceEditInte].tipo_afiliacion = this.CA1.tipo_afiliacion;
      this.datos[this.indiceEditInte].embarazo = this.CA1.embarazo;
      this.datos[this.indiceEditInte].embarazo_multiple = this.CA1.embarazo_multiple;
      this.datos[this.indiceEditInte].discapacidad = this.CA1.discapacidad;
      this.datos[this.indiceEditInte].escolaridad = this.CA1.escolaridad;
      this.datos[this.indiceEditInte].textoEscolaridad = this.showText(Number(this.CA1.escolaridad), this.escolaridad_options);
      this.datos[this.indiceEditInte].ocupacion = this.CA1.ocupacion;
      this.datos[this.indiceEditInte].textoOcupacion = this.showText(Number(this.CA1.ocupacion), this.ocupacion_options);
      this.datos[this.indiceEditInte].colegio = this.CA1.colegio;
      this.datos[this.indiceEditInte].textoColegio = this.showText(Number(this.CA1.colegio), this.colegio_options);
      this.datos[this.indiceEditInte].grado = this.CA1.grado;
      this.datos[this.indiceEditInte].entiende = this.CA1.entiende;
      this.datos[this.indiceEditInte].migrante = this.CA1.migrante;
      this.datos[this.indiceEditInte].pyp = this.CA1.pyp;
      this.datos[this.indiceEditInte].etnia = this.CA1.etnia;
      this.datos[this.indiceEditInte].textoEtnia = this.showText(Number(this.CA1.etnia), this.etnia_options);
      this.datos[this.indiceEditInte].clasificacion = this.CA1.clasificacion;
      this.datos[this.indiceEditInte].textoClasificacion = this.showText2(Number(this.CA1.clasificacion), this.clasifi_options, this.CA1.etnia);
      this.datos[this.indiceEditInte].id_hogar = this.CA1.id_hogar;
      this.datos[this.indiceEditInte].jefe = this.CA1.jefe;
      this.datos[this.indiceEditInte].orientacion = this.CA1.orientacion;
      this.datos[this.indiceEditInte].identidad_genero = this.CA1.identidad_genero;
      this.datos[this.indiceEditInte].telefono = this.CA1.telefono;
      this.datos[this.indiceEditInte].perdida_peso = this.CA1.perdida_peso;
      this.datos[this.indiceEditInte].programa_icbf = this.CA1.programa_icbf;
      this.datos[this.indiceEditInte].excepciones = this.CA1.excepciones;
      this.datos[this.indiceEditInte].textoExcepciones = this.showText(this.CA1.excepciones, this.opciones7);
      this.datos[this.indiceEditInte].meses = this.CA1.meses;
      this.datos[this.indiceEditInte].dias = this.CA1.dias;
      this.datos[this.indiceEditInte].ocupacionAuxiliar = this.CA1.textoOcupacion2;
      this.datos[this.indiceEditInte].enfermedad_infecciosa = this.CA1.enfermedad_infecciosa;
      this.datos[this.indiceEditInte].enfermedad_cronica = this.CA1.enfermedad_cronica;
      this.datos[this.indiceEditInte].textoEnfermedad_infecciosa = this.showText(Number(this.CA1.enfermedad_infecciosa), this.enfinf_options);
      this.datos[this.indiceEditInte].textoEnfermedad_cronica = this.showText(Number(this.CA1.enfermedad_cronica), this.enfcro_options);
      this.datos[this.indiceEditInte].peso = this.CA1.peso;
      this.datos[this.indiceEditInte].talla = this.CA1.talla;
      this.datos.splice(this.indiceEditInte, 1, this.datos[this.indiceEditInte]);
      this.limpiar();
    },
    //OPCIONES DE LOS INTEGRANTES
    //VALIDACIONES DE IDENTIFICACION
    valJef1: function valJef1() {
      for (var i = 0; i < this.datosJefe.length; i++) {
        if (this.datosJefe[i].tipo_id === "") {
          this.$swal("Error...!", "Por favor seleccione un <b>tipo de identificación</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].identificacion === "") {
          this.$swal("Error...!", "Por favor digite una <b>identificación</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].pnom === "") {
          this.$swal("Error...!", "Por favor digite el <b>primer nombre</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].pape === "") {
          this.$swal("Error...!", "Por favor digite el <b>primer apellido</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].sexo === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>sexo</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].orientacion === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>Orientación Sexual</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].identidad_genero === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>Identidad de Genero</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].parentesco === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>parentesco</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].estado_civil === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>estado civil</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].fecha_nacimiento === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>fecha de nacimiento</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].afiliacion_entidad === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>eps</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].tipo_afiliacion === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>tipo de afiliación</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].nivel_escolaridad === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>nivel de escolaridad</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].ocupacion === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>ocupación</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].etnia === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>etnia</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].clasificacion === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>clasificacion de la etnia</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].salario === "") {
          this.$swal("Error...!", "Por favor digite el <b>salario</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].perdida_peso === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>perdida de peso en los ultimos 3 meses</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].programa_icbf === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>Pertenece a algún programa del ICBF</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].enfermedad_infecciosa === "") {
          this.$swal("Error...!", "Por favor seleccione si tiene alguna <b>enfermedad infecciosa</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].enfermedad_cronica === "") {
          this.$swal("Error...!", "Por favor seleccione si tiene alguna <b>enfermedad cronica</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].peso === "") {
          this.$swal("Error...!", "Por favor digite el <b>peso</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        }

        if (this.datosJefe[i].talla === "") {
          this.$swal("Error...!", "Por favor digite la <b>talla</b> en la fila " + (i + 1) + " de los jefes de hogar", "error");
          return false;
        } // VERIFICAR SI ESTA EN LA TABLA


        var resultado = this.buscarIguales(this.datosJefe, this.datosJefe[i].identificacion); // VERIFICAR SI ESTA EN LA TABLA

        if (resultado > 1) {
          this.$swal("Validar...!", "El Documento <b>" + this.datosJefe[i].identificacion + "</b> De La Fila <b>" + (i + 1) + "</b>  Se Encuentra Agregado En La Tabla de Jefes de Hogar", "warning");
          return false;
        }
      }

      return true;
    },
    buscarIguales: function buscarIguales(vector, busqueda) {
      var contador = 0;

      for (var i = 0; i < vector.length; i++) {
        if (vector[i].identificacion === busqueda) {
          contador++;
        }
      }

      return contador;
    },
    valJef2: function () {
      var _valJef = _asyncToGenerator(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee12() {
        var _this15 = this;

        var _loop5, i;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee12$(_context15) {
          while (1) {
            switch (_context15.prev = _context15.next) {
              case 0:
                _loop5 =
                /*#__PURE__*/
                _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _loop5(i) {
                  var parametros;
                  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _loop5$(_context14) {
                    while (1) {
                      switch (_context14.prev = _context14.next) {
                        case 0:
                          parametros = {
                            _token: _this15.csrf,
                            identificacion: _this15.datosJefe[i].identificacion
                          };
                          _context14.prev = 1;
                          _context14.next = 4;
                          return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["validarJefe"](parametros).then(function (respuesta) {
                            if (respuesta.data.OPC == "EXISTE") {
                              _this15.vectorAyuda.push({
                                identificacion: respuesta.data.identificacion,
                                fila: i + 1,
                                error: "ERROR1"
                              });

                              return false;
                            } else {}
                          })["catch"](function (error) {});

                        case 4:
                          _context14.next = 8;
                          break;

                        case 6:
                          _context14.prev = 6;
                          _context14.t0 = _context14["catch"](1);

                        case 8:
                        case "end":
                          return _context14.stop();
                      }
                    }
                  }, _loop5, null, [[1, 6]]);
                });
                i = 0;

              case 2:
                if (!(i < this.datosJefe.length)) {
                  _context15.next = 7;
                  break;
                }

                return _context15.delegateYield(_loop5(i), "t0", 4);

              case 4:
                i++;
                _context15.next = 2;
                break;

              case 7:
              case "end":
                return _context15.stop();
            }
          }
        }, _callee12, this);
      }));

      function valJef2() {
        return _valJef.apply(this, arguments);
      }

      return valJef2;
    }(),
    valInt1: function valInt1() {
      for (var i = 0; i < this.datos.length; i++) {
        if (this.datos[i].tipo_id === "") {
          this.$swal("Error...!", "Por favor seleccione un <b>tipo de identificación</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].identificacion === "") {
          this.$swal("Error...!", "Por favor digite una <b>identificación</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].pnom === "") {
          this.$swal("Error...!", "Por favor digite el <b>primer nombre</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].pape === "") {
          this.$swal("Error...!", "Por favor digite el <b>primer apellido</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].sexo === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>sexo</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].orientacion === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>Orientación Sexual</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].identidad_genero === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>Identidad de Genero</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].parentesco === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>parentesco</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].estado_civil === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>estado civil</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].fecha_nac === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>fecha de nacimiento</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].afi_entidad === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>eps</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].tipo_afiliacion === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>tipo de afiliación</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].escolaridad === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>nivel de escolaridad</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].ocupacion === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>ocupación</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].etnia === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>etnia</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].clasificacion === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>clasificacion de la etnia</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].jefe === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>jefe de hogar</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].perdida_peso === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>perdida de peso en los ultimos 3 meses</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].programa_icbf === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>Pertenece a algún programa del ICBF</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        } // if (this.datos[i].excepciones === "") {
        //   this.$swal(
        //     "Error...!",
        //     "Por favor seleccione la opción <b>excepciones</b> en la fila " +
        //       (i + 1) +
        //       " de los integrantes",
        //     "error"
        //   );
        //   return false;
        // }          


        if (this.datos[i].enfermedad_infecciosa === "") {
          this.$swal("Error...!", "Por favor seleccione si tiene alguna <b>enfermedad infecciosa</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].enfermedad_cronica === "") {
          this.$swal("Error...!", "Por favor seleccione si tiene alguna <b>enfermedad cronica</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].peso === "") {
          this.$swal("Error...!", "Por favor digite el <b>peso</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        }

        if (this.datos[i].talla === "") {
          this.$swal("Error...!", "Por favor digite la <b>talla</b> en la fila " + (i + 1) + " de los integrantes", "error");
          return false;
        } // VERIFICAR SI ESTA EN LA TABLA


        var resultado = this.buscarIguales(this.datos, this.datos[i].identificacion); // VERIFICAR SI ESTA EN LA TABLA

        if (resultado > 1) {
          this.$swal("Validar...!", "El Documento <b>" + this.datos[i].identificacion + "</b> De La Fila <b>" + (i + 1) + "</b>  Se Encuentra Agregado En La Tabla de Integrantes", "warning"); // item.identificacion="";

          return false;
        }
      }

      return true;
    },
    valInt2: function () {
      var _valInt = _asyncToGenerator(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee13() {
        var _this16 = this;

        var _loop6, i;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee13$(_context17) {
          while (1) {
            switch (_context17.prev = _context17.next) {
              case 0:
                _loop6 =
                /*#__PURE__*/
                _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _loop6(i) {
                  var parametros;
                  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _loop6$(_context16) {
                    while (1) {
                      switch (_context16.prev = _context16.next) {
                        case 0:
                          parametros = {
                            _token: _this16.csrf,
                            identificacion: _this16.datos[i].identificacion
                          };
                          _context16.prev = 1;
                          _context16.next = 4;
                          return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["validar"](parametros).then(function (respuesta) {
                            if (respuesta.data.OPC == "EXISTE") {
                              _this16.vectorAyuda.push({
                                identificacion: respuesta.data.identificacion,
                                fila: i + 1,
                                error: "ERROR1"
                              });

                              return false;
                            } else {}
                          })["catch"](function (error) {});

                        case 4:
                          _context16.next = 8;
                          break;

                        case 6:
                          _context16.prev = 6;
                          _context16.t0 = _context16["catch"](1);

                        case 8:
                        case "end":
                          return _context16.stop();
                      }
                    }
                  }, _loop6, null, [[1, 6]]);
                });
                i = 0;

              case 2:
                if (!(i < this.datos.length)) {
                  _context17.next = 7;
                  break;
                }

                return _context17.delegateYield(_loop6(i), "t0", 4);

              case 4:
                i++;
                _context17.next = 2;
                break;

              case 7:
              case "end":
                return _context17.stop();
            }
          }
        }, _callee13, this);
      }));

      function valInt2() {
        return _valInt.apply(this, arguments);
      }

      return valInt2;
    }(),
    valFactores: function valFactores() {
      for (var i = 0; i < this.factores.length; i++) {
        if (this.factores[i].dialogos === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Dialogos</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].sancion === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Sanción ó Supresión</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].castigo_verbal === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Castigo Verbal</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].castigo_fisico === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Castigo Fisico</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].alcohol === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Alcohol</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].tabaco === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Tabaco</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].sustancias_psico === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Sustancias Psicoactivas</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].apuestas === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Apuestas</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].violencia_fisica === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Violencia Fisica</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].violencia_psico === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Violencia Psicologica</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].violencia_economica === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Violencia Economica</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].abuso_sexual === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Abuso Sexual</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].actividad_fisica === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Actividad Fisica</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].consumo_frutas === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Consumo de Frutas y Verduras</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].religiosos === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Religiosos</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].sociales === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Sociales</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].culturales === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Culturales</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }

        if (this.factores[i].recreativos === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Recreativos</b> en la fila " + (i + 1) + " de la tabla factores de riesgo y protectores de la familia", "error");
          return false;
        }
      }

      return true;
    },
    valAfectacion: function valAfectacion() {
      for (var i = 0; i < this.afectacion.length; i++) {
        if (this.afectacion[i].presentado === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Ha presentado sintomas de Covid-19</b> en la fila " + (i + 1) + " de la tabla afectación contingencia covid-19", "error");
          return false;
        }

        if (this.afectacion[i].prueba === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Se realizó alguna vez la prueba de covid-19</b> en la fila " + (i + 1) + " de la tabla afectación contingencia covid-19", "error");
          return false;
        }

        if (this.afectacion[i].afectado === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Se ha sentido afectado por el cofinanciamiento</b> en la fila " + (i + 1) + " de la tabla afectación contingencia covid-19", "error");
          return false;
        }

        if (this.afectacion[i].nivel === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Nivel de afectación</b> en la fila " + (i + 1) + " de la tabla afectación contingencia covid-19", "error");
          return false;
        }

        if (this.afectacion[i].porcentaje === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Porcentaje de reducción de ingresos</b> en la fila " + (i + 1) + " de la tabla afectación contingencia covid-19", "error");
          return false;
        }

        if (this.afectacion[i].perdida === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Perdida de familiares</b> en la fila " + (i + 1) + " de la tabla afectación contingencia covid-19", "error");
          return false;
        }

        if (this.afectacion[i].sobrelleva === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Como sobrelleva la situación económica</b> en la fila " + (i + 1) + " de la tabla afectación contingencia covid-19", "error");
          return false;
        }

        if (this.afectacion[i].percibe === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Como percibe la calidad de la educación virtual</b> en la fila " + (i + 1) + " de la tabla afectación contingencia covid-19", "error");
          return false;
        }

        if (this.afectacion[i].principal === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Principal carga economica</b> en la fila " + (i + 1) + " de la tabla afectación contingencia covid-19", "error");
          return false;
        }

        if (this.afectacion[i].tiempo === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>En cuanto tiempo se puede recuperar</b> en la fila " + (i + 1) + " de la tabla afectación contingencia covid-19", "error");
          return false;
        }
      }

      return true;
    },
    //VALIDACIONES DE IDENTIFICACION
    //VALIDACIONES DE LOS CICLOS
    valMen1: function valMen1() {
      for (var i = 0; i < this.Men1A.length; i++) {
        if (this.Men1A[i].lugar_nacimiento === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>lugar de nacimiento</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].hemoclasificacion === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>hemoclasificacion</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].compli_parto === "") {
          this.$swal("Error...!", "Por favor seleccione <b>complicaciones en el parto</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].via_parto === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>via del parto</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].cyc === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>control de CyC</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].valoracion_23 === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>valoración integral de 2 a 3 meses</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].valoracion_68 === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>valoración integral de 6 a 8 meses</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].valoracion_911 === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>valoración integral de 9 a 11 meses</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].lactancia === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>lactancia exclusiva</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].peso_nacer === "") {
          this.$swal("Error...!", "Por favor digite el <b>peso al nacer</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].peso_actual === "") {
          this.$swal("Error...!", "Por favor digite el <b>peso actual</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].longitud_nacer === "") {
          this.$swal("Error...!", "Por favor digite la <b>longitud al nacer</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].longitud_actual === "") {
          this.$swal("Error...!", "Por favor digite la <b>longitud actual</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].longitud_actual === "") {
          this.$swal("Error...!", "Por favor digite la <b>longitud actual</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].cinta === "") {
          this.$swal("Error...!", "Por favor seleccione la opción<b> P. Cefalico </b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].pb === "") {
          this.$swal("Error...!", "Por favor seleccione la opción<b> PB </b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].edemas === "") {
          this.$swal("Error...!", "Por favor seleccione <b>edemas</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].lenguaje === "") {
          this.$swal("Error...!", "Por favor seleccione de la valoración del desarrollo el <b>lenguaje</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].motora === "") {
          this.$swal("Error...!", "Por favor seleccione de la valoración del desarrollo la opcion <b>motora</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].conducta === "") {
          this.$swal("Error...!", "Por favor seleccione de la valoración del desarrollo la <b>conducta</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].visuales === "") {
          this.$swal("Error...!", "Por favor seleccione si tiene problemas <b>visuales</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].auditivos === "") {
          this.$swal("Error...!", "Por favor seleccione si tiene problemas <b>auditivos</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].carnet === "") {
          this.$swal("Error...!", "Por favor seleccione de la vacunación si tiene <b>CARNET(PAI)</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].bcg === "") {
          this.$swal("Error...!", "Por favor seleccione de la vacunación si tiene la vacuna <b>BCG</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].hepb === "") {
          this.$swal("Error...!", "Por favor seleccione de la vacunación si tiene la vacuna <b>HEP-B</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].polio === "") {
          this.$swal("Error...!", "Por favor seleccione de la vacunación si tiene la vacuna <b>POLIO</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].pentavalente === "") {
          this.$swal("Error...!", "Por favor seleccione de la vacunación si tiene la vacuna <b>PENTAVALENTE</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].maltrato === "") {
          this.$swal("Error...!", "Por favor seleccione si sufre de <b>maltrato</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].morbilidad === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>morbilidad</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }

        if (this.Men1A[i].tsh === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>TSH</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) menores de 1 año", "error");
          return false;
        }
      }

      return true;
    },
    valDe1A5: function valDe1A5() {
      for (var i = 0; i < this.De1A5.length; i++) {
        if (this.De1A5[i].beneficiario === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>Beneficiario de un Programa</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].cyc === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>Control de CyC</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].valoracion_1823 === "") {
          this.$swal("Error...!", "Por favor seleccione de la Valoración Integral <b>18-23 meses</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].valoracion_3035 === "") {
          this.$swal("Error...!", "Por favor seleccione de la Valoración Integral <b>30-35 meses</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].valoracion_4 === "") {
          this.$swal("Error...!", "Por favor seleccione de la Valoración Integral <b>4 años</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].peso === "") {
          this.$swal("Error...!", "Por favor digite en la Valoración Nutricional el <b>peso</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].talla === "") {
          this.$swal("Error...!", "Por favor digite en la Valoración Nutricional la <b>talla</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].imc === "") {
          this.$swal("Error...!", "Por favor digite en la Valoración Nutricional el <b>IMC</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].pb === "") {
          this.$swal("Error...!", "Por favor digite en la Valoración Nutricional el <b>P.B</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].pt === "") {
          this.$swal("Error...!", "Por favor digite en la Valoración Nutricional el <b>P/T</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].te === "") {
          this.$swal("Error...!", "Por favor digite en la Valoración Nutricional el <b>T/E</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].pcefalico === "") {
          this.$swal("Error...!", "Por favor digite en la Valoración Nutricional el <b>Perimetro Cefálico</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].lenguaje === "") {
          this.$swal("Error...!", "Por favor seleccione de la Valoración Del Desarrollo el <b>Lenguaje</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].motora === "") {
          this.$swal("Error...!", "Por favor seleccione de la Valoración Del Desarrollo <b>Motora</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].conducta === "") {
          this.$swal("Error...!", "Por favor seleccione de la Valoración Del Desarrollo La <b>Conducta</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].visuales === "") {
          this.$swal("Error...!", "Por favor seleccione de Problemas Los <b>Visuales</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].auditivos === "") {
          this.$swal("Error...!", "Por favor seleccione de Problemas Los <b>Auditivos</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].caries === "") {
          this.$swal("Error...!", "Por favor seleccione de Salud Oral Las <b>Caries</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].nocepillado === "") {
          this.$swal("Error...!", "Por favor digite en Salud Oral El <b>No. Cepillado Dia</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].consultaodon === "") {
          this.$swal("Error...!", "Por favor seleccione de Salud Oral La <b>Consulta Odontologica</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].carnet === "") {
          this.$swal("Error...!", "Por favor seleccione de Vacunación el <b>Carnet (PAI)</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].bcg === "") {
          this.$swal("Error...!", "Por favor seleccione de Vacunación el <b>BCG</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].polio === "") {
          this.$swal("Error...!", "Por favor seleccione de Vacunación el <b>POLIO</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].dpt === "") {
          this.$swal("Error...!", "Por favor seleccione de Vacunación el <b>DPT</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].fiebrea === "") {
          this.$swal("Error...!", "Por favor seleccione de Vacunación la <b>Fiebre Amarilla</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].tripleviral === "") {
          this.$swal("Error...!", "Por favor seleccione de Vacunación la <b>Triple Viral</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].pentavalente === "") {
          this.$swal("Error...!", "Por favor seleccione de Vacunación la <b>Pentavalente</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].desparacitado === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Desparacitado</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].maltrato === "") {
          this.$swal("Error...!", "Por favor seleccione las <b> Señales de Maltrato</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].enfermedad === "") {
          this.$swal("Error...!", "Por favor seleccione la <b> Enfermedad</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }

        if (this.De1A5[i].medicamento === "") {
          this.$swal("Error...!", "Por favor seleccione el <b> Medicamento</b> en la fila " + (i + 1) + " de la tabla primera infancia, niños(as) de 1 a 5 años", "error");
          return false;
        }
      }

      return true;
    },
    valDe6A11: function valDe6A11() {
      for (var i = 0; i < this.De6A11.length; i++) {
        if (this.De6A11[i].cyc === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>Control de CyC</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].atencion === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>Atencion Por</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].peso === "") {
          this.$swal("Error...!", "Por favor digite el <b>Peso</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].talla === "") {
          this.$swal("Error...!", "Por favor digite la <b>Talla</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].imc === "") {
          this.$swal("Error...!", "Por favor digite el <b>IMC/E</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].pb === "") {
          this.$swal("Error...!", "Por favor digite el <b>P.B</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        } // if (this.De6A11[i].pt === "") {
        //   this.$swal(
        //     "Error...!",
        //     "Por favor digite el <b>P/T</b> en la fila " +
        //       (i + 1) +
        //       " de la tabla infancia, niños(as) de 6 a 11 años",
        //     "error"
        //   );
        //   return false;
        // }


        if (this.De6A11[i].te === "") {
          this.$swal("Error...!", "Por favor digite el <b>T/E</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].conducta === "") {
          this.$swal("Error...!", "Por favor seleccione de problemas la <b>Conducta</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].visuales === "") {
          this.$swal("Error...!", "Por favor seleccione de problemas <b>Visuales</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].auditivos === "") {
          this.$swal("Error...!", "Por favor seleccione de problemas <b>Auditivos</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].dientes_sanos === "") {
          this.$swal("Error...!", "Por favor seleccione de salud oral <b>Dientes Sanos</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].consultaodon === "") {
          this.$swal("Error...!", "Por favor seleccione de salud oral la <b>Consulta Odontologica</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].nofluor === "") {
          this.$swal("Error...!", "Por favor seleccione de salud oral el <b>No. Aplicacion Fluor</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].nocepillado === "") {
          this.$swal("Error...!", "Por favor seleccione de salud oral el <b>No. Cepillado Dia</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].maltrato === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Señales Maltrato ó Abuso</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].sustanciaspsico === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Sustancias Psicoactivas</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].desparacitado === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Desparacitado</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].enfermedad === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Enfermedad</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].medicamento === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Medicamento</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].padre === "") {
          this.$swal("Error...!", "Por favor seleccione Relación Familiar <b>Padre</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].madre === "") {
          this.$swal("Error...!", "Por favor seleccione Relación Familiar <b>Madre</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].hermanos === "") {
          this.$swal("Error...!", "Por favor seleccione Relación Familiar <b>Hermanos</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }

        if (this.De6A11[i].conyuge === "") {
          this.$swal("Error...!", "Por favor seleccione Relación Familiar <b>Conyuge</b> en la fila " + (i + 1) + " de la tabla infancia, niños(as) de 6 a 11 años", "error");
          return false;
        }
      }

      return true;
    },
    valDe10A59: function valDe10A59() {
      for (var i = 0; i < this.De10A59.length; i++) {
        if (this.De10A59[i].primera_mes === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>Edad Primera Mestruación</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].flujo_vaginal === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>Flujo Vaginal</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].flujo_uretral === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>Flujo Uretral</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].relaciones_sexuales === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Relaciones Sexuales</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].compa_sexuales === "") {
          this.$swal("Error...!", "Por favor digite el <b>No. Compañeros Sexuales</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].usa_condon === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Usa Condon</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].abortos_seis === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Abortos Antes de 6 Meses</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].embarazo_adolecentes === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Embarazo en Adolecentes</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].metodo === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>Metodo</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].tiempo_metodo === "") {
          this.$swal("Error...!", "Por favor digite el <b>Tiempo de Metodo</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].controles === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Controles Ultimo Año</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].motivo === "") {
          this.$swal("Error...!", "Por favor seleccione en No Planifica el <b>Motivo</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].citologia === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Citologia Cervico Vaginal</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].colposcopia === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Colposcopia</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].examen_seno === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Examen de seno</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].violencia === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Violencia Intrafamiliar</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].tdit === "") {
          this.$swal("Error...!", "Por favor seleccione en Vacunación la <b>TD/IT</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].tripleviral === "") {
          this.$swal("Error...!", "Por favor seleccione en Vacunación la <b>Triple Viral</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].nacidos_vivos === "") {
          this.$swal("Error...!", "Por favor digite los <b>Hijos Nacidos Vivos</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].abortos === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Abortos</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].examen_prostata === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Examen de Prostata</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }

        if (this.De10A59[i].biposia_prostata === "") {
          this.$swal("Error...!", "Por favor seleccione <b>Biposia de Prostata</b> en la fila " + (i + 1) + " de la tabla salud sexual y reproductiva de 10 a 59 años", "error");
          return false;
        }
      }

      return true;
    },
    valParPost: function valParPost() {
      for (var i = 0; i < this.ParPost.length; i++) {
        if (this.ParPost[i].aceptacion === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>Aceptación del Embarazo</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].control_prenatal === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>Control Prenatal</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].atencion_parto === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>Atención del Parto</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].carnet === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>Carnet de Control Prenatal</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].fecha_ultima === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>Fecha Ultima Mestruación</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].fecha_probable === "") {
          this.$swal("Error...!", "Por favor seleccione la <b>Fecha Probable Parto</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].peso === "") {
          this.$swal("Error...!", "Por favor digite el <b>Peso</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].talla === "") {
          this.$swal("Error...!", "Por favor digite la <b>Talla</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].imc === "") {
          this.$swal("Error...!", "Por favor digite el <b>IMC</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].semanas_ges === "") {
          this.$swal("Error...!", "Por favor digite las <b>Semanas de Gestación</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].num_controles === "") {
          this.$swal("Error...!", "Por favor digite el <b>No. Controles Prenatales</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].vih === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>Vih</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].toxoplasma === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>Toxoplasma</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].vdrl === "") {
          this.$swal("Error...!", "Por favor seleccione el <b>V.D.R.L</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].odontologia === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Odontologia</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].vacunaciontdit === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Vacunación TD/IT</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        } // if (this.ParPost[i].fecha_ultimo_parto === "") {
        //   this.$swal(
        //     "Error...!",
        //     "Por favor seleccione la opción <b>Fecha Ultimo Parto</b> en la fila " +
        //       (i + 1) +
        //       " de la gestión de parto y postparto",
        //     "error"
        //   );
        //   return false;
        // }


        if (this.ParPost[i].suplementacion === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Suplementación con Hierro</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].enfermedades_cronicas === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Enfermedades Cronicas</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].sedentarismo === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Sedentarismo</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].fuma === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Fuma</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].consumo === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Consumo SPA</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].bebidas === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Consume Bebidas Alcoholicas</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].tipo_parto === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Tipo de Parto</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].atencion_institucional === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Atención Institucional</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].cc18 === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Consulta de Control 8 Dias</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].morgestacion === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Gestación</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].morparto === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Parto</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }

        if (this.ParPost[i].morposparto === "") {
          this.$swal("Error...!", "Por favor seleccione la opción <b>Postparto</b> en la fila " + (i + 1) + " de la gestión de parto y postparto", "error");
          return false;
        }
      }

      return true;
    },
    valDe12A17: function valDe12A17() {
      for (var i = 0; i < this.De12A17.length; i++) {
        if (this.De12A17[i].peso === "") {
          this.$swal("Error...!", "Por favor digite el <b>Peso</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].talla === "") {
          this.$swal("Error...!", "Por favor digite la <b>Talla</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].imc === "") {
          this.$swal("Error...!", "Por favor digite el <b>IMC</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].pb === "") {
          this.$swal("Error...!", "Por favor digite la <b>PB</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].visuales === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Visuales</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].auditivos === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Auditivos</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].conducta === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>De Conducta</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].enfermedades_cronicas === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Enfermedad Cronica</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].dientes_sanos === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Dientes Sanos</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].consultaodon === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Consulta Odontologica</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].nocepillado === "") {
          this.$swal("Error...!", "Por favor digite la opcion <b>No. Cepillado Dia</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].maltrato === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Señales de Maltrato</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].alcohol === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Alcohol</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].fuma === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Fuma</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].spa === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>SPA</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].desparacitado === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Desparacitado</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].empleo === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Empleo</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].religion === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Religión</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].queesvih === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Sabe que es VIH</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].queescancerutero === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Sabe que es Cancer de Utero</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].queespapiloma === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Sabe que es el Papiloma</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].queescancerseno === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Sabe que es el Cancer de Seno</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].padre === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Padre</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].madre === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Madre</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].hermanos === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Hermanos</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }

        if (this.De12A17[i].conyuge === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Conyuge</b> en la fila " + (i + 1) + " de la tabla adolescentes de 12 a 17 años", "error");
          return false;
        }
      }

      return true;
    },
    valDe18A28: function valDe18A28() {
      for (var i = 0; i < this.De18A28.length; i++) {
        if (this.De18A28[i].peso === "") {
          this.$swal("Error...!", "Por favor digite el <b>Peso</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].talla === "") {
          this.$swal("Error...!", "Por favor digite la <b>Talla</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].imc === "") {
          this.$swal("Error...!", "Por favor digite el <b>IMC</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].pcintura === "") {
          this.$swal("Error...!", "Por favor digite la opcion <b>P. Cintura</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].pb === "") {
          this.$swal("Error...!", "Por favor digite la opcion <b>PB</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].visuales === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Visuales</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].auditivos === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Auditivos</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].conducta === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>De Conducta</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].enfermedades_cronicas === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Enfermedad Cronica</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].dientes_sanos === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Dientes Sanos</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].consultaodon === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Consulta Odontologica</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].nocepillado === "") {
          this.$swal("Error...!", "Por favor digite la opcion <b>No. Cepillado Dia</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].maltrato === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Señales de Maltrato</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].alcohol === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Alcohol</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].fuma === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Fuma</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].spa === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>SPA</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].desparacitado === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Desparacitado</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].empleo === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Empleo</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].religion === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Religión</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].queesvih === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Sabe que es VIH</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].queescancerutero === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Sabe que es Cancer de Utero</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }

        if (this.De18A28[i].queespapiloma === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Sabe que es el Papiloma</b> en la fila " + (i + 1) + " de la tabla juventud, jovenes de 18 a 28 años", "error");
          return false;
        }
      }

      return true;
    },
    valDe29A59: function valDe29A59() {
      for (var i = 0; i < this.De29A59.length; i++) {
        if (this.De29A59[i].peso === "") {
          this.$swal("Error...!", "Por favor digite el <b>Peso</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].talla === "") {
          this.$swal("Error...!", "Por favor digite la <b>Talla</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].imc === "") {
          this.$swal("Error...!", "Por favor digite el <b>IMC</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].pcintura === "") {
          this.$swal("Error...!", "Por favor digite la opcion <b>P. Cintura</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].pb === "") {
          this.$swal("Error...!", "Por favor digite la opcion <b>PB</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].visuales === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Visuales</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].auditivos === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Auditivos</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].conducta === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>De Conducta</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].enfermedades_cronicas === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Enfermedad Cronica</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].dientes_sanos === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Dientes Sanos</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].consultaodon === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Consulta Odontologica</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].nocepillado === "") {
          this.$swal("Error...!", "Por favor digite la opcion <b>No. Cepillado Dia</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].maltrato === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Señales de Maltrato</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].alcohol === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Alcohol</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].fuma === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Fuma</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].spa === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>SPA</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].desparacitado === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Desparacitado</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].empleo === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Empleo</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].examen_prostata === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Examen de Prostata</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].citologia === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Citologias</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].examen_mama === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Examen de MAMA</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].religion === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Religión</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].queesvih === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Sabe que es VIH</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].queescancerutero === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Sabe que es Cancer de Utero</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }

        if (this.De29A59[i].queespapiloma === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Sabe que es el Papiloma</b> en la fila " + (i + 1) + " de la tabla hombres y mujeres de 29 a 59 años", "error");
          return false;
        }
      }

      return true;
    },
    valDe60: function valDe60() {
      for (var i = 0; i < this.De60.length; i++) {
        if (this.De60[i].grupo_ayudas === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Grupo de Ayudas</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }

        if (this.De60[i].peso === "") {
          this.$swal("Error...!", "Por favor digite la opcion <b>Peso</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }

        if (this.De60[i].talla === "") {
          this.$swal("Error...!", "Por favor digite la opcion <b>Talla</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }

        if (this.De60[i].imc === "") {
          this.$swal("Error...!", "Por favor digite la opcion <b>IMC</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }

        if (this.De60[i].pa === "") {
          this.$swal("Error...!", "Por favor digite la opcion <b>PA</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        } // if (this.De60[i].glicemia === "") {
        //   this.$swal(
        //     "Error...!",
        //     "Por favor seleccione la opcion <b>Glicemia</b> en la fila " +
        //       (i + 1) +
        //       " de la tabla adulto mayor hombres y mujeres de 60 años y mas",
        //     "error"
        //   );
        //   return false;
        // }


        if (this.De60[i].cigarrillo === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Cigarrillo ó Tabaco</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }

        if (this.De60[i].alcohol === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Consumo de Alcohol</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }

        if (this.De60[i].actividad_fisica === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Actividad Fisica Recreativa</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }

        if (this.De60[i].sintomatico === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Sintomático Respiratorio</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }

        if (this.De60[i].examen_seno === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Examen de Seno</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }

        if (this.De60[i].citologia === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Citologia Cervico Vaginal</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }

        if (this.De60[i].colposcopia === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Colposcopia</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }

        if (this.De60[i].examen_prostata === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Examen de Prostata</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }

        if (this.De60[i].biposia_prostata === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Biposia de Prostata</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }

        if (this.De60[i].agudeza_visual === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Examen de Agudeza Visual</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }

        if (this.De60[i].subsidio === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Subsidio de Entidad del Estado</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }

        if (this.De60[i].enfermedades_cronicas === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Enfermedades Cronicas</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }

        if (this.De60[i].enfermedades_infecciosas === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Enfermedades Infecciosas</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }

        if (this.De60[i].empleo === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Empleo</b> en la fila " + (i + 1) + " de la tabla adulto mayor hombres y mujeres de 60 años y mas", "error");
          return false;
        }
      }

      return true;
    },
    valEnCro: function valEnCro() {
      for (var i = 0; i < this.EnCro.length; i++) {
        if (this.EnCro[i].enfermedad === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Nombre de la Enfermedad</b> en la fila " + (i + 1) + " de la tabla enfermedades cronicas", "error");
          return false;
        }

        if (this.EnCro[i].tiempo === "") {
          this.$swal("Error...!", "Por favor digite la opcion <b>Diagnosticado Hace cuanto tiempo</b> en la fila " + (i + 1) + " de la tabla enfermedades cronicas", "error");
          return false;
        }

        if (this.EnCro[i].tratamiento === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Está en Tratamiento</b> en la fila " + (i + 1) + " de la tabla enfermedades cronicas", "error");
          return false;
        }

        if (this.EnCro[i].complicaciones === "") {
          this.$swal("Error...!", "Por favor digite la opcion <b>Complicaciones</b> en la fila " + (i + 1) + " de la tabla enfermedades cronicas", "error");
          return false;
        }
      }

      return true;
    },
    valEnInf: function valEnInf() {
      for (var i = 0; i < this.EnInf.length; i++) {
        if (this.EnInf[i].enfermedad === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Nombre de la Enfermedad</b> en la fila " + (i + 1) + " de la tabla enfermedades infecciosas", "error");
          return false;
        }

        if (this.EnInf[i].tiempo === "") {
          this.$swal("Error...!", "Por favor digite la opcion <b>Diagnosticado Hace cuanto tiempo</b> en la fila " + (i + 1) + " de la tabla enfermedades infecciosas", "error");
          return false;
        }

        if (this.EnInf[i].tratamiento === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Está en Tratamiento</b> en la fila " + (i + 1) + " de la tabla enfermedades infecciosas", "error");
          return false;
        }

        if (this.EnInf[i].complicaciones === "") {
          this.$swal("Error...!", "Por favor digite la opcion <b>Complicaciones</b> en la fila " + (i + 1) + " de la tabla enfermedades infecciosas", "error");
          return false;
        }
      }

      return true;
    },
    valMigra: function valMigra() {
      for (var i = 0; i < this.Migra.length; i++) {
        if (this.Migra[i].pais === "") {
          this.$swal("Error...!", "Por favor digite la opción <b>Pais de Origen</b> en la fila " + (i + 1) + " de la tabla migrante", "error");
          return false;
        }

        if (this.Migra[i].registrado === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Registrado Como Migrante</b> en la fila " + (i + 1) + " de la tabla migrantes", "error");
          return false;
        }

        if (this.Migra[i].cuantollego === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Hace Cuanto Llego Al Pais</b> en la fila " + (i + 1) + " de la tabla migrantes", "error");
          return false;
        }

        if (this.Migra[i].futuro === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>En el Futuro Usted Piensa</b> en la fila " + (i + 1) + " de la tabla migrantes", "error");
          return false;
        }

        if (this.Migra[i].recibido === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Usted a Recibido Ayudas del Gobierno</b> en la fila " + (i + 1) + " de la tabla migrantes", "error");
          return false;
        }

        if (this.Migra[i].necesidad === "") {
          this.$swal("Error...!", "Por favor seleccione la opcion <b>Principal Necesidad en Estos Momnetos</b> en la fila " + (i + 1) + " de la tabla migrantes", "error");
          return false;
        }

        if (this.Migra[i].dependen === "") {
          this.$swal("Error...!", "Por favor digite la opción <b>Personas Que Dependen de Usted</b> en la fila " + (i + 1) + " de la tabla migrante", "error");
          return false;
        }

        if (this.Migra[i].ingreso === "") {
          this.$swal("Error...!", "Por favor digite la opción <b>Ingreso Mensual Actualmente</b> en la fila " + (i + 1) + " de la tabla migrante", "error");
          return false;
        }
      }

      return true;
    },
    //VALIDACIONES DE LOS CICLOS      
    //OPCIONES DE LA VIVIENDA
    abrirModalActividades: function abrirModalActividades() {
      this.txtbusquedaAct = "";
      this.consultarActividades(1);
      this.$refs.modalActividad.show();
    },
    consultarActividades: function consultarActividades(pagina) {
      var _this17 = this;

      return _asyncToGenerator(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee14() {
        var parametros;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee14$(_context18) {
          while (1) {
            switch (_context18.prev = _context18.next) {
              case 0:
                parametros = {
                  txtbusqueda: _this17.txtbusquedaAct.trim(),
                  _token: _this17.csrf,
                  page: pagina
                };
                _context18.prev = 1;
                _context18.next = 4;
                return _Servicios_actividad_servicios__WEBPACK_IMPORTED_MODULE_5__["listar"](parametros).then(function (respuesta) {
                  _this17.actividadesVector = respuesta.data.actividades.data;
                });

              case 4:
                _context18.next = 15;
                break;

              case 6:
                _context18.prev = 6;
                _context18.t0 = _context18["catch"](1);
                _context18.t1 = _context18.t0.response.status;
                _context18.next = _context18.t1 === 422 ? 11 : 13;
                break;

              case 11:
                _this17.$swal("Error...!", "Ocurrio un error!", "error");

                return _context18.abrupt("break", 15);

              case 13:
                _this17.$swal("Error...!", "Ocurrio un error!", "error");

                return _context18.abrupt("break", 15);

              case 15:
              case "end":
                return _context18.stop();
            }
          }
        }, _callee14, null, [[1, 6]]);
      }))();
    },
    seleccionarActividades: function seleccionarActividades(item) {
      this.viviendaData.actividad_economica = item.id;
      this.actividadesAuxiliar = item.descripcion;
      this.$refs.modalActividad.hide();
    },
    llenarVivienda: function llenarVivienda(data) {// this.viviendaData.id = data.vivienda[0].id;
      // this.viviendaData.id_hogar = data.vivienda[0].id_hogar;
      // this.viviendaData.tipo_vivienda = data.vivienda[0].tipo_vivienda;
      // this.viviendaData.tipo_estructura = data.vivienda[0].tipo_estructura;
      // this.viviendaData.otro_tipo_estructura = data.vivienda[0].otro_tipo_estructura;
      // this.viviendaData.numero_cuartos = data.vivienda[0].numero_cuartos;
      // this.viviendaData.personas_por_cuartos = data.vivienda[0].personas_por_cuartos;
      // this.viviendaData.material_predominante = data.vivienda[0].material_predominante;
      // this.viviendaData.tipo_cubierta = data.vivienda[0].tipo_cubierta;
      // this.viviendaData.otro_tipo_cubierta = data.vivienda[0].otro_tipo_cubierta;
      // this.viviendaData.actividad_economica = data.vivienda[0].actividad_economica;
      // this.viviendaData.cual_actividad_economica = data.vivienda[0].cual_actividad_economica;
      // this.viviendaData.evento_afecta_vivienda = data.vivienda[0].evento_afecta_vivienda;
      // this.viviendaData.familias_accion = data.vivienda[0].familias_accion;
      // this.viviendaData.promedio_ingresos = data.vivienda[0].promedio_ingresos;
      // this.viviendaData.promedio_gastos = data.vivienda[0].promedio_gastos;
      // this.viviendaData.fuente_agua = data.vivienda[0].fuente_agua;
      // this.viviendaData.energia_electrica = data.vivienda[0].energia_electrica;
      // this.viviendaData.gas_natural = data.vivienda[0].gas_natural;
      // this.viviendaData.acueducto = data.vivienda[0].acueducto;
      // this.viviendaData.alcantarillado = data.vivienda[0].alcantarillado;
      // this.viviendaData.telefono_fijo = data.vivienda[0].telefono_fijo;
      // this.viviendaData.aseo = data.vivienda[0].aseo;
      // this.viviendaData.internet_subsidiado = data.vivienda[0].internet_subsidiado;
      // this.viviendaData.internet_privado = data.vivienda[0].internet_privado;
      // this.viviendaData.cual_fuente = data.vivienda[0].cual_fuente;
      // this.viviendaData.donde_almacena_agua = data.vivienda[0].donde_almacena_agua;
      // this.viviendaData.otro_almacena_agua = data.vivienda[0].otro_almacena_agua;
      // this.viviendaData.ubicacion_tanque = data.vivienda[0].ubicacion_tanque;
      // this.viviendaData.tipo_tratamiento_agua = data.vivienda[0].tipo_tratamiento_agua;
      // this.viviendaData.destino_final_basura = data.vivienda[0].destino_final_basura;
      // this.viviendaData.otro_destino_final_basura = data.vivienda[0].otro_destino_final_basura;
      // this.viviendaData.porquerizas = data.vivienda[0].porquerizas;
      // this.viviendaData.plagas = data.vivienda[0].plagas;
      // this.viviendaData.industrias = data.vivienda[0].industrias;
      // this.viviendaData.malos_olores = data.vivienda[0].malos_olores;
      // this.viviendaData.rellenos = data.vivienda[0].rellenos;
      // this.viviendaData.contaminacion_a = data.vivienda[0].contaminacion_a;
      // this.viviendaData.contaminacion_v = data.vivienda[0].contaminacion_v;
      // this.viviendaData.rio = data.vivienda[0].rio;
      // this.viviendaData.otro_cerca = data.vivienda[0].otro_cerca;
      // this.viviendaData.cual_cerca = data.vivienda[0].cual_cerca;
      // this.viviendaData.aereopuertos = data.vivienda[0].aereopuertos;
      // this.viviendaData.avenidas_transitadas = data.vivienda[0].avenidas_transitadas;
      // this.viviendaData.lotes_abandonados = data.vivienda[0].lotes_abandonados;
      // this.viviendaData.servicio_sanitario = data.vivienda[0].servicio_sanitario;
      // this.viviendaData.donde_sanitario = data.vivienda[0].donde_sanitario;
      // this.viviendaData.excretas = data.vivienda[0].excretas;
      // this.viviendaData.otro_depositan_excretas = data.vivienda[0].otro_depositan_excretas;
      // this.viviendaData.cocina = data.vivienda[0].cocina;
      // this.viviendaData.dormitorio_a = data.vivienda[0].dormitorio_a;
      // this.viviendaData.sala = data.vivienda[0].sala;
      // this.viviendaData.dormitorio_n = data.vivienda[0].dormitorio_n;
      // this.viviendaData.sanitario = data.vivienda[0].sanitario;
      // this.viviendaData.lavadero = data.vivienda[0].lavadero;
      // this.viviendaData.iluminacion_adecuada = data.vivienda[0].iluminacion_adecuada;
      // this.viviendaData.techo_adecuado = data.vivienda[0].techo_adecuado;
      // this.viviendaData.ventilacion_adecuada = data.vivienda[0].ventilacion_adecuada;
      // this.viviendaData.pisos_adecuado = data.vivienda[0].pisos_adecuado;
      // this.viviendaData.paredes_adecuadas = data.vivienda[0].paredes_adecuadas;
      // this.viviendaData.gasolina = data.vivienda[0].gasolina;
      // this.viviendaData.plaguicidas = data.vivienda[0].plaguicidas;
      // this.viviendaData.detergentes = data.vivienda[0].detergentes;
      // this.viviendaData.plaguicidas_insectos = data.vivienda[0].plaguicidas_insectos;
      // this.viviendaData.envases_vacios = data.vivienda[0].envases_vacios;
      // this.viviendaData.otro_envases_vacios = data.vivienda[0].otro_envases_vacios;
      // this.viviendaData.elementos_protecion = data.vivienda[0].elementos_protecion;
      // this.viviendaData.otro_elementos_protecion = data.vivienda[0].otro_elementos_protecion;
      // this.viviendaData.metodos_coccion = data.vivienda[0].metodos_coccion;
      // this.viviendaData.otro_metodos_coccion = data.vivienda[0].otro_metodos_coccion;
      // this.viviendaData.lugares_preparan_alimentos = data.vivienda[0].lugares_preparan_alimentos;
      // this.viviendaData.lugares_almacenan_alimentos = data.vivienda[0].lugares_almacenan_alimentos;
      // this.viviendaData.otro_lugares_almacenan_alimentos = data.vivienda[0].otro_lugares_almacenan_alimentos;
      // this.viviendaData.lava_frutas = data.vivienda[0].lava_frutas;
      // this.viviendaData.tipo_explotacion = data.vivienda[0].tipo_explotacion;
      // this.viviendaData.otro_tipo_explotacion = data.vivienda[0].otro_tipo_explotacion;
      // this.viviendaData.flora_afectados = data.vivienda[0].flora_afectados;
      // this.viviendaData.fauna_afectados = data.vivienda[0].fauna_afectados;
      // this.viviendaData.suelo_afectados = data.vivienda[0].suelo_afectados;
      // this.viviendaData.aire_afectados = data.vivienda[0].aire_afectados;
      // this.viviendaData.agua_afectados = data.vivienda[0].agua_afectados;
      // this.viviendaData.residuos_solidos_genera = data.vivienda[0].residuos_solidos_genera;
      // this.viviendaData.aguas_servidas_genera = data.vivienda[0].aguas_servidas_genera;
      // this.viviendaData.desechos_cocina_genera = data.vivienda[0].desechos_cocina_genera;
      // this.viviendaData.heces_animales_genera = data.vivienda[0].heces_animales_genera;
      // this.viviendaData.quimicos_genera = data.vivienda[0].quimicos_genera;
      // this.viviendaData.otros_genera = data.vivienda[0].otros_genera;
      // this.viviendaData.cual_genera = data.vivienda[0].cual_genera;
      // this.viviendaData.tipo_combustible = data.vivienda[0].tipo_combustible;
      // this.viviendaData.mantenimiento_red = data.vivienda[0].mantenimiento_red;
      // this.viviendaData.zona_alto_riesgo = data.vivienda[0].zona_alto_riesgo;
      // this.viviendaData.almacenamiento_residuos = data.vivienda[0].almacenamiento_residuos;
      // this.viviendaData.fuente_contaminacion = data.vivienda[0].fuente_contaminacion;
      // this.viviendaData.aguas_negras = data.vivienda[0].aguas_negras;
      // this.viviendaData.zonas_verdes = data.vivienda[0].zonas_verdes;
      // this.viviendaData.desplazamientos = data.vivienda[0].desplazamientos;
      // this.viviendaData.rotacion_cultivo = data.vivienda[0].rotacion_cultivo;
      // this.viviendaData.emplea_fertilizantes = data.vivienda[0].emplea_fertilizantes;
      // this.viviendaData.suministro_energia_ilegal = data.vivienda[0].suministro_energia_ilegal;
      // this.viviendaData.quema_cultivo = data.vivienda[0].quema_cultivo;
      // this.viviendaData.mantenimiento_preventivo = data.vivienda[0].mantenimiento_preventivo;
      // this.viviendaData.veces_inundaciones = data.vivienda[0].veces_inundaciones;
      // this.viviendaData.fachada = data.vivienda[0].fachada;
      // this.viviendaData.cuantos_baños = data.vivienda[0].cuantos_baños;
      // this.viviendaData.estado_conservacion_baños = data.vivienda[0].estado_conservacion_baños;
      // this.viviendaData.acabados_externos = data.vivienda[0].acabados_externos;
      // this.viviendaData.estado_conservacion_estructuras = data.vivienda[0].estado_conservacion_estructuras;
      // this.viviendaData.mobiliario_cocina = data.vivienda[0].mobiliario_cocina;
      // this.viviendaData.andenes = data.vivienda[0].andenes;
    },
    eliminarItemAnimales: function eliminarItemAnimales(index) {
      this.animalesData.splice(index, 1);
    },
    eliminarItemEstratificacion: function eliminarItemEstratificacion(index) {
      this.estratificacion.splice(index, 1);
    },
    agregarAnimales: function agregarAnimales() {
      if (this.animal === "") {
        this.$swal("Error...!", "Por favor Digite Un Animal!", "error");
        return;
      }

      if (this.vacunadoAnimal === "0") {
        this.$swal("Error...!", "Por favor Seleccione Si El Animal Se Encuentra Vacunado!", "error");
        return;
      }

      if (this.cuantosAnimal === "") {
        this.$swal("Error...!", "Por favor Digite cuantos Animales Tiene!", "error");
        return;
      }

      if (!this.isNumeric(this.cuantosAnimal)) {
        this.$swal("Error...!", "Por favor Digite cuantos Animales Tiene!", "error");
        return;
      }

      this.animalesData.push({
        id: 0,
        animal: this.animal,
        cuantos: this.cuantosAnimal,
        vacunados: this.vacunadoAnimal
      });
      this.animal = "";
      this.cuantosAnimal = "";
      this.vacunadoAnimal = "0";
    },
    agregarEstratificacion: function agregarEstratificacion() {
      if (this.estratificacionData.cuenta_internet === "") {
        this.$swal("Error...!", "Por favor Seleccione Si Cuenta ese Hogar con Internet!", "error");
        return;
      }

      if (this.estratificacionData.tiene_pc_escritorio === "") {
        this.$swal("Error...!", "Por favor Seleccione Si Tiene computador de Escritorío!", "error");
        return;
      }

      if (this.estratificacionData.tiene_pc_portatil === "") {
        this.$swal("Error...!", "Por favor Seleccione Si Tiene Computador Portatil!", "error");
        return;
      }

      if (this.estratificacionData.cuantos_celulares === "") {
        this.$swal("Error...!", "Por favor Seleccione Cuantos celulares en uso hay en el Hogar!", "error");
        return;
      }

      if (this.estratificacionData.tiene_equipo_sonido === "") {
        this.$swal("Error...!", "Por favor Seleccione Si Tiene Equipo de sonido!", "error");
        return;
      }

      if (this.estratificacionData.cuantos_tv_color === "") {
        this.$swal("Error...!", "Por favor Seleccione Cuantos Tv a Color!", "error");
        return;
      }

      if (this.estratificacionData.cuantos_vehiculos === "") {
        this.$swal("Error...!", "Por favor Seleccione Cuantos Vehiculos de Uso exclusivo tiene el Hogar!", "error");
        return;
      }

      if (this.estratificacionData.nivel_instruccion === "") {
        this.$swal("Error...!", "Por favor Seleccione Cual es el nivel de Instrucción del jefe del Hogar!", "error");
        return;
      }

      if (this.estratificacionData.afiliacion_salud_privada === "") {
        this.$swal("Error...!", "Por favor Seleccione Si Alguien en el Hogar posee afiliación de salud Privada o contribituva, prepagada!", "error");
        return;
      }

      if (this.estratificacionData.ingresos_zona_rural === "") {
        this.$swal("Error...!", "Por favor Seleccione Ingresos mensuales por Hogar zona rural!", "error");
        return;
      }

      if (this.estratificacionData.ingresos_ciudad === "") {
        this.$swal("Error...!", "Por favor Seleccione Ingresos mensuales por Hogar en Ciudad!", "error");
        return;
      }

      if (this.estratificacionData.id_jefe === "0") {
        this.$swal("Error...!", "Por favor Seleccione El Jefe del Hogar!", "error");
        return;
      }

      this.estratificacion.push({
        id: 0,
        id_hogar: 0,
        cuenta_internet: this.estratificacionData.cuenta_internet,
        tiene_pc_escritorio: this.estratificacionData.tiene_pc_escritorio,
        tiene_pc_portatil: this.estratificacionData.tiene_pc_portatil,
        cuantos_celulares: this.estratificacionData.cuantos_celulares,
        tiene_equipo_sonido: this.estratificacionData.tiene_equipo_sonido,
        cuantos_tv_color: this.estratificacionData.cuantos_tv_color,
        cuantos_vehiculos: this.estratificacionData.cuantos_vehiculos,
        nivel_instruccion: this.estratificacionData.nivel_instruccion,
        afiliacion_salud_privada: this.estratificacionData.afiliacion_salud_privada,
        ingresos_zona_rural: this.estratificacionData.ingresos_zona_rural,
        ingresos_ciudad: this.estratificacionData.ingresos_ciudad,
        id_jefe: this.estratificacionData.id_jefe,
        texto_cuantos_celulares: this.showText(this.estratificacionData.cuantos_celulares, this.opciones1),
        texto_cuantos_tv_color: this.showText(this.estratificacionData.cuantos_tv_color, this.opciones2),
        texto_cuantos_vehiculos: this.showText(this.estratificacionData.cuantos_vehiculos, this.opciones3),
        texto_nivel_instruccion: this.showText(this.estratificacionData.nivel_instruccion, this.escolaridad_options),
        texto_ingresos_zona_rural: this.showText(this.estratificacionData.ingresos_zona_rural, this.opciones5),
        texto_ingresos_ciudad: this.showText(this.estratificacionData.ingresos_ciudad, this.opciones6)
      });
      this.estratificacionData.cuenta_internet = "";
      this.estratificacionData.tiene_pc_escritorio = "";
      this.estratificacionData.tiene_pc_portatil = "";
      this.estratificacionData.cuantos_celulares = "";
      this.estratificacionData.tiene_equipo_sonido = "";
      this.estratificacionData.cuantos_tv_color = "";
      this.estratificacionData.cuantos_vehiculos = "";
      this.estratificacionData.nivel_instruccion = "";

      if (this.SAPU === true) {
        this.estratificacionData.afiliacion_salud_privada = "SI";
      } else {
        this.estratificacionData.afiliacion_salud_privada = "";
      } // this.estratificacionData.ingresos_zona_rural = "";
      // this.estratificacionData.ingresos_ciudad = "";


      this.estratificacionData.id_jefe = "0";
    },
    //OPCIONES DE LA VIVIENDA
    //OPCIONES DE LOS CICLOS DE VIDA
    Amenores1Anio: function Amenores1Anio(vector, meses, opcion) {
      var pb = "";

      if (meses >= 3) {
        pb = "";
      } else {
        pb = "No Aplica";
      }

      this.Men1A.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        lugar_nacimiento: "",
        hemoclasificacion: "",
        compli_parto: "",
        via_parto: "",
        cyc: "",
        valoracion_23: "",
        valoracion_68: "",
        valoracion_911: "",
        lactancia: "",
        peso_nacer: "",
        peso_actual: vector.peso,
        longitud_nacer: "",
        longitud_actual: vector.talla,
        peso_long: "",
        cinta: "",
        edemas: "",
        lenguaje: "",
        motora: "",
        conducta: "",
        visuales: "",
        auditivos: "",
        carnet: "",
        bcg: "",
        hepb: "",
        polio: "",
        pentavalente: "",
        maltrato: "",
        morbilidad: "",
        tsh: "",
        opci: opcion,
        pb: pb,
        estado: "Activo"
      });
    },
    changeupdateMenA1: function changeupdateMenA1(item, event, opcion) {
      if (opcion === "peso_nacer") {
        item.peso_nacer = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "peso_actual") {
        item.peso_actual = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "longitud_nacer") {
        item.longitud_nacer = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "longitud_actual") {
        item.longitud_actual = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "peso_long") {
        item.peso_long = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "cinta") {
        item.cinta = event.target.value.replace(/[^.\d]/g, "").trim();
      }
    },
    updateMenA1: function updateMenA1(item, valor, opcion) {
      if (opcion === "hemoclasificacion") {
        item.hemoclasificacion = valor;
      }

      if (opcion === "lugar_nacimiento") {
        item.lugar_nacimiento = valor;
      }

      if (opcion === "compli_parto") {
        item.compli_parto = valor;
      }

      if (opcion === "via_parto") {
        item.via_parto = valor;
      }

      if (opcion === "cyc") {
        item.cyc = valor;
      }

      if (opcion === "valoracion_23") {
        item.valoracion_23 = valor;
      }

      if (opcion === "valoracion_68") {
        item.valoracion_68 = valor;
      }

      if (opcion === "valoracion_911") {
        item.valoracion_911 = valor;
      }

      if (opcion === "lactancia") {
        item.lactancia = valor;
      } // if (opcion === "cinta") {
      //   item.cinta = valor;
      // }


      if (opcion === "edemas") {
        item.edemas = valor;
      }

      if (opcion === "lenguaje") {
        item.lenguaje = valor;
      }

      if (opcion === "motora") {
        item.motora = valor;
      }

      if (opcion === "conducta") {
        item.conducta = valor;
      }

      if (opcion === "visuales") {
        item.visuales = valor;
      }

      if (opcion === "auditivos") {
        item.auditivos = valor;
      }

      if (opcion === "carnet") {
        item.carnet = valor;
      }

      if (opcion === "bcg") {
        item.bcg = valor;
      }

      if (opcion === "hepb") {
        item.hepb = valor;
      }

      if (opcion === "polio") {
        item.polio = valor;
      }

      if (opcion === "pentavalente") {
        item.pentavalente = valor;
      }

      if (opcion === "maltrato") {
        item.maltrato = valor;
      }

      if (opcion === "morbilidad") {
        item.morbilidad = valor;
      }

      if (opcion === "tsh") {
        item.tsh = valor;
      }
    },
    Ade1a5Anio: function Ade1a5Anio(vector, edad, opcion) {
      this.De1A5.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        edad: edad,
        beneficiario: "",
        cyc: "",
        valoracion_1823: "",
        valoracion_3035: "",
        valoracion_4: "",
        peso: vector.peso,
        talla: vector.talla,
        imc: this.calcularImc(vector.peso, vector.talla),
        pb: "",
        pt: "",
        te: "",
        lenguaje: "",
        motora: "",
        conducta: "",
        visuales: "",
        auditivos: "",
        caries: "",
        nocepillado: "",
        consultaodon: "",
        carnet: "",
        bcg: "",
        polio: "",
        dpt: "",
        fiebrea: "",
        tripleviral: "",
        pentavalente: "",
        otras: "",
        desparacitado: "",
        maltrato: "",
        enfermedad: "",
        medicamento: "",
        opci: opcion,
        pcefalico: "",
        estado: "Activo"
      });
    },
    changeupdateDe1A5: function changeupdateDe1A5(item, event, opcion) {
      if (opcion === "peso") {
        item.peso = event.target.value.replace(/[^.\d]/g, "").trim();
        item.imc = this.calcularImc(item.peso, item.talla);
      }

      if (opcion === "talla") {
        item.talla = event.target.value.replace(/[^.\d]/g, "").trim();
        item.imc = this.calcularImc(item.peso, item.talla);
      } // if (opcion === "imc") {
      //   item.imc = event.target.value.replace( /[^.\d]/g, '' ).trim();;
      // }


      if (opcion === "pb") {
        item.pb = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "pt") {
        item.pt = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "te") {
        item.te = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "nocepillado") {
        item.nocepillado = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "otras") {
        item.otras = event.target.value.trim();
      }
    },
    updateDe1A5: function updateDe1A5(item, valor, opcion) {
      if (opcion === "beneficiario") {
        item.beneficiario = valor;
      }

      if (opcion === "cyc") {
        item.cyc = valor;
      }

      if (opcion === "valoracion_1823") {
        item.valoracion_1823 = valor;
      }

      if (opcion === "valoracion_3035") {
        item.valoracion_3035 = valor;
      }

      if (opcion === "valoracion_4") {
        item.valoracion_4 = valor;
      }

      if (opcion === "lenguaje") {
        item.lenguaje = valor;
      }

      if (opcion === "motora") {
        item.motora = valor;
      }

      if (opcion === "conducta") {
        item.conducta = valor;
      }

      if (opcion === "visuales") {
        item.visuales = valor;
      }

      if (opcion === "auditivos") {
        item.auditivos = valor;
      }

      if (opcion === "caries") {
        item.caries = valor;
      }

      if (opcion === "consultaodon") {
        item.consultaodon = valor;
      }

      if (opcion === "carnet") {
        item.carnet = valor;
      }

      if (opcion === "bcg") {
        item.bcg = valor;
      }

      if (opcion === "polio") {
        item.polio = valor;
      }

      if (opcion === "dpt") {
        item.dpt = valor;
      }

      if (opcion === "fiebrea") {
        item.fiebrea = valor;
      }

      if (opcion === "tripleviral") {
        item.tripleviral = valor;
      }

      if (opcion === "pentavalente") {
        item.pentavalente = valor;
      }

      if (opcion === "desparacitado") {
        item.desparacitado = valor;
      }

      if (opcion === "maltrato") {
        item.maltrato = valor;
      }

      if (opcion === "enfermedad") {
        item.enfermedad = valor;
      }

      if (opcion === "medicamento") {
        item.medicamento = valor;
      }
    },
    Ade6a11Anio: function Ade6a11Anio(vector, edad, opcion) {
      this.De6A11.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        edad: edad,
        cyc: "",
        atencion: "",
        peso: vector.peso,
        talla: vector.talla,
        imc: this.calcularImc(vector.peso, vector.talla),
        pb: "NA",
        pt: "NA",
        te: "",
        conducta: "",
        visuales: "",
        auditivos: "",
        dientes_sanos: "",
        consultaodon: "",
        nofluor: "",
        nocepillado: "",
        maltrato: "",
        sustanciaspsico: "",
        desparacitado: "",
        enfermedad: "",
        medicamento: "",
        padre: "",
        madre: "",
        hermanos: "",
        conyuge: "",
        opci: opcion,
        estado: "Activo"
      });
    },
    changeupdateDe6A11: function changeupdateDe6A11(item, event, opcion) {
      if (opcion === "peso") {
        item.peso = event.target.value.replace(/[^.\d]/g, "").trim();
        item.imc = this.calcularImc(item.peso, item.talla);
      }

      if (opcion === "talla") {
        item.talla = event.target.value.replace(/[^.\d]/g, "").trim();
        item.imc = this.calcularImc(item.peso, item.talla);
      }

      if (opcion === "imc") {
        item.imc = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "pb") {
        item.pb = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "pt") {
        item.pt = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "te") {
        item.te = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "nocepillado") {
        item.nocepillado = event.target.value.replace(/[^.\d]/g, "").trim();
      }
    },
    updateDe6A11: function updateDe6A11(item, valor, opcion) {
      if (opcion === "cyc") {
        item.cyc = valor;
      }

      if (opcion === "atencion") {
        item.atencion = valor;
      }

      if (opcion === "conducta") {
        item.conducta = valor;
      }

      if (opcion === "visuales") {
        item.visuales = valor;
      }

      if (opcion === "auditivos") {
        item.auditivos = valor;
      }

      if (opcion === "dientes_sanos") {
        item.dientes_sanos = valor;
      }

      if (opcion === "consultaodon") {
        item.consultaodon = valor;
      }

      if (opcion === "maltrato") {
        item.maltrato = valor;
      }

      if (opcion === "sustanciaspsico") {
        item.sustanciaspsico = valor;
      }

      if (opcion === "desparacitado") {
        item.desparacitado = valor;
      }

      if (opcion === "enfermedad") {
        item.enfermedad = valor;
      }

      if (opcion === "medicamento") {
        item.medicamento = valor;
      }

      if (opcion === "padre") {
        item.padre = valor;
      }

      if (opcion === "madre") {
        item.madre = valor;
      }

      if (opcion === "hermanos") {
        item.hermanos = valor;
      }

      if (opcion === "conyuge") {
        item.conyuge = valor;
      }

      if (opcion === "nofluor") {
        item.nofluor = valor;
      }
    },
    Ade10a59Anio: function Ade10a59Anio(vector, edad, opcion) {
      if (vector.sexo === "MASCULINO") {
        this.De10A59.push({
          id: 0,
          tipo_id: vector.tipo_id,
          identificacion: vector.identificacion,
          pnom: vector.pnom,
          snom: vector.snom,
          pape: vector.pape,
          sape: vector.sape,
          sexo: vector.sexo,
          edad: edad,
          primera_mes: "NA",
          flujo_vaginal: "NA",
          flujo_uretral: "",
          relaciones_sexuales: "",
          compa_sexuales: "",
          usa_condon: "",
          abortos_seis: "NA",
          embarazo_adolecentes: "NA",
          metodo: "",
          tiempo_metodo: "",
          controles: "",
          motivo: "",
          citologia: "NA",
          colposcopia: "NA",
          examen_seno: "NA",
          violencia: "",
          tdit: "NA",
          tripleviral: "NA",
          nacidos_vivos: "NA",
          abortos: "NA",
          examen_prostata: "",
          biposia_prostata: "",
          opci: opcion,
          estado: "Activo"
        });
      } else {
        this.De10A59.push({
          id: 0,
          tipo_id: vector.tipo_id,
          identificacion: vector.identificacion,
          pnom: vector.pnom,
          snom: vector.snom,
          pape: vector.pape,
          sape: vector.sape,
          sexo: vector.sexo,
          edad: edad,
          primera_mes: "",
          flujo_vaginal: "",
          flujo_uretral: "",
          relaciones_sexuales: "",
          compa_sexuales: "",
          usa_condon: "",
          abortos_seis: "",
          embarazo_adolecentes: "",
          metodo: "",
          tiempo_metodo: "",
          controles: "",
          motivo: "",
          citologia: "",
          colposcopia: "",
          examen_seno: "",
          violencia: "",
          tdit: "",
          tripleviral: "",
          nacidos_vivos: "",
          abortos: "",
          examen_prostata: "NA",
          biposia_prostata: "NA",
          opci: opcion,
          estado: "Activo"
        });
      }
    },
    changeupdateDe10A59: function changeupdateDe10A59(item, event, opcion) {},
    updateDe10A59: function updateDe10A59(item, valor, opcion) {
      if (opcion === "flujo_vaginal") {
        item.flujo_vaginal = valor;
      }

      if (opcion === "flujo_uretral") {
        item.flujo_uretral = valor;
      }

      if (opcion === "relaciones_sexuales") {
        item.relaciones_sexuales = valor;
      }

      if (opcion === "usa_condon") {
        item.usa_condon = valor;
      }

      if (opcion === "abortos_seis") {
        item.abortos_seis = valor;
      }

      if (opcion === "embarazo_adolecentes") {
        item.embarazo_adolecentes = valor;
      }

      if (opcion === "metodo") {
        item.metodo = valor;
      }

      if (opcion === "motivo") {
        item.motivo = valor;
      }

      if (opcion === "controles") {
        item.controles = valor;
      }

      if (opcion === "citologia") {
        item.citologia = valor;
      }

      if (opcion === "colposcopia") {
        item.colposcopia = valor;
      }

      if (opcion === "examen_seno") {
        item.examen_seno = valor;
      }

      if (opcion === "violencia") {
        item.violencia = valor;
      }

      if (opcion === "tdit") {
        item.tdit = valor;
      }

      if (opcion === "tripleviral") {
        item.tripleviral = valor;
      }

      if (opcion === "abortos") {
        item.abortos = valor;
      }

      if (opcion === "examen_prostata") {
        item.examen_prostata = valor;
      }

      if (opcion === "biposia_prostata") {
        item.biposia_prostata = valor;
      }

      if (opcion === "tiempo_metodo") {
        item.tiempo_metodo = valor;
      }

      if (opcion === "primera_mes") {
        if (item.sexo === "MASCULINO") {
          item.primera_mes = "NA";
        } else {
          item.primera_mes = valor;
        }
      }

      if (opcion === "compa_sexuales") {
        if (item.sexo === "MASCULINO") {
          item.compa_sexuales = "NA";
        } else {
          item.compa_sexuales = valor;
        }
      }

      if (opcion === "nacidos_vivos") {
        if (item.sexo === "MASCULINO") {
          item.nacidos_vivos = "NA";
        } else {
          item.nacidos_vivos = valor;
        }
      }
    },
    AParPost: function AParPost(vector, edad, opcion) {
      this.ParPost.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        edad: edad,
        aceptacion: "",
        control_prenatal: "",
        atencion_parto: "",
        carnet: "",
        fecha_ultima: "",
        fecha_probable: "",
        peso: vector.peso,
        talla: vector.talla,
        imc: this.calcularImc(vector.peso, vector.talla),
        semanas_ges: "",
        num_controles: "",
        vih: "",
        toxoplasma: "",
        vdrl: "",
        odontologia: "",
        vacunaciontdit: "",
        fecha_ultimo_parto: "",
        suplementacion: "",
        enfermedades_cronicas: "",
        sedentarismo: "",
        fuma: "",
        consumo: "",
        bebidas: "",
        tipo_parto: "",
        atencion_institucional: "",
        cc18: "NA",
        morgestacion: "",
        morparto: "",
        morposparto: "",
        opci: opcion,
        estado: "Activo"
      });
    },
    changeupdatePosparto: function changeupdatePosparto(item, event, opcion) {
      moment.locale("es");

      if (opcion === "fecha_ultima") {
        var fecha = moment.utc(item.fecha_ultima, "YYYY-MM-DD");
        var suma = fecha.add(9, "months");
        suma = suma.add(7, "days");
        item.fecha_probable = suma.format("YYYY-MM-DD"); // let hoy = moment();
        // let hoyFormato = moment().format("YYYY-MM-DD");
        // let edad = 0;
        // edad = hoy.diff(item.fecha_ultima, "months"); //Calculamos la diferencia en años
        // let dife = this.datediff(hoyFormato,item.fecha_ultima);
        // let diaSemanas=0;
        // if(dife[1]!=0){
        //   diaSemanas=Math.ceil(dife[2]/7);            
        // }
        // let mesTrimestre = Math.floor(dife[1]/3);
        // let valor = dife[1] * 4; 
        // item.semanas_ges = valor+diaSemanas+mesTrimestre;   

        var fecha2 = item.fecha_ultima.split("-");
        var y2 = Number(fecha2[0]);
        var m2 = Number(fecha2[1]);
        var d2 = Number(fecha2[2]);
        var fecha_inicio = new Date();
        var lleva = new Date();
        var hoy = new Date();
        var dia_parto = new Date();
        var falta = new Date();
        var fecha_dada = new Date(y2, m2 - 1, d2);
        fecha_inicio.setTime(fecha_dada.getTime());
        dia_parto.setTime(fecha_inicio.getTime() + 280 * 86400000); //Calculamos el tiempo que lleva

        lleva.setTime(hoy.getTime() - fecha_inicio.getTime());
        var llevasemanas = parseInt(lleva.getTime() / 86400000 / 7);
        var llevadias = Math.floor(lleva.getTime() / 86400000 % 7);
        falta.setTime(dia_parto.getTime() - hoy.getTime());
        var faltasemanas = parseInt(falta.getTime() / 86400000 / 7);
        var faltadias = parseInt(falta.getTime() / 86400000 % 7);
        item.semanas_ges = llevasemanas + " semanas y " + llevadias + " dias";
      }

      if (opcion === "fecha_probable") {
        var _fecha = moment.utc(item.fecha_probable, "YYYY-MM-DD");

        var _suma = _fecha.subtract(9, "months");

        _suma = _suma.subtract(7, "days");
        item.fecha_ultima = _suma.format("YYYY-MM-DD"); // item.fecha_probable = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "peso") {
        item.peso = event.target.value.replace(/[^.\d]/g, "").trim();
        item.imc = this.calcularImc(item.peso, item.talla);
      }

      if (opcion === "talla") {
        item.talla = event.target.value.replace(/[^.\d]/g, "").trim();
        item.imc = this.calcularImc(item.peso, item.talla);
      }

      if (opcion === "imc") {
        item.imc = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "semanas_ges") {
        item.semanas_ges = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "fecha_ultimo_parto") {// item.fecha_ultimo_parto = event.target.value
        //   .replace(/[^.\d]/g, "")
        //   .trim();
      }
    },
    updatePosparto: function updatePosparto(item, valor, opcion) {
      if (opcion === "aceptacion") {
        item.aceptacion = valor;
      }

      if (opcion === "control_prenatal") {
        item.control_prenatal = valor;
      }

      if (opcion === "atencion_parto") {
        item.atencion_parto = valor;
      }

      if (opcion === "carnet") {
        item.carnet = valor;
      }

      if (opcion === "num_controles") {
        item.num_controles = valor;
      }

      if (opcion === "vih") {
        item.vih = valor;
      }

      if (opcion === "toxoplasma") {
        item.toxoplasma = valor;
      }

      if (opcion === "vdrl") {
        item.vdrl = valor;
      }

      if (opcion === "odontologia") {
        item.odontologia = valor;
      }

      if (opcion === "vacunaciontdit") {
        item.vacunaciontdit = valor;
      }

      if (opcion === "suplementacion") {
        item.suplementacion = valor;
      }

      if (opcion === "enfermedades_cronicas") {
        item.enfermedades_cronicas = valor;
      }

      if (opcion === "sedentarismo") {
        item.sedentarismo = valor;
      }

      if (opcion === "fuma") {
        item.fuma = valor;
      }

      if (opcion === "consumo") {
        item.consumo = valor;
      }

      if (opcion === "bebidas") {
        item.bebidas = valor;
      }

      if (opcion === "tipo_parto") {
        item.tipo_parto = valor;
      }

      if (opcion === "atencion_institucional") {
        item.atencion_institucional = valor;
      }

      if (opcion === "cc18") {
        item.cc18 = valor;
      }

      if (opcion === "morgestacion") {
        item.morgestacion = valor;
      }

      if (opcion === "morparto") {
        item.morparto = valor;
      }

      if (opcion === "morposparto") {
        item.morposparto = valor;
      }
    },
    eliminarParpost: function () {
      var _eliminarParpost = _asyncToGenerator(
      /*#__PURE__*/
      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee15(identificacion, tabla) {
        var parametros;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee15$(_context19) {
          while (1) {
            switch (_context19.prev = _context19.next) {
              case 0:
                parametros = {
                  _token: this.csrf,
                  identificacion: identificacion,
                  id_hogar: this.IDHOGAR,
                  opcion: "PARPOST",
                  tabla: tabla
                };
                _context19.prev = 1;
                _context19.next = 4;
                return _Servicios_caracterizacion_servicios__WEBPACK_IMPORTED_MODULE_1__["eliminar"](parametros).then(function (respuesta) {
                  if (respuesta.OPC === "SI") {
                    return true;
                  } else {
                    return false;
                  }
                })["catch"](function (error) {});

              case 4:
                _context19.next = 17;
                break;

              case 6:
                _context19.prev = 6;
                _context19.t0 = _context19["catch"](1);
                _context19.t1 = _context19.t0.response.status;
                _context19.next = _context19.t1 === 419 ? 11 : _context19.t1 === 422 ? 13 : 15;
                break;

              case 11:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context19.abrupt("break", 17);

              case 13:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context19.abrupt("break", 17);

              case 15:
                this.$swal("Error...!", "Ocurrio un error!", "error");
                return _context19.abrupt("break", 17);

              case 17:
              case "end":
                return _context19.stop();
            }
          }
        }, _callee15, this, [[1, 6]]);
      }));

      function eliminarParpost(_x4, _x5) {
        return _eliminarParpost.apply(this, arguments);
      }

      return eliminarParpost;
    }(),
    Ade12a17Anio: function Ade12a17Anio(vector, edad, opcion) {
      this.De12A17.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        edad: edad,
        peso: vector.peso,
        talla: vector.talla,
        imc: this.calcularImc(vector.peso, vector.talla),
        pb: "NA",
        visuales: "",
        auditivos: "",
        conducta: "",
        enfermedades_cronicas: "",
        dientes_sanos: "",
        consultaodon: "",
        nocepillado: "",
        maltrato: "",
        alcohol: "",
        fuma: "",
        spa: "",
        desparacitado: "",
        empleo: "",
        religion: "",
        queesvih: "",
        queescancerutero: "",
        queespapiloma: "",
        queescancerseno: "",
        padre: "",
        madre: "",
        hermanos: "",
        conyuge: "",
        opci: opcion,
        estado: "Activo"
      });
    },
    changeupdateDe12A17: function changeupdateDe12A17(item, event, opcion) {
      if (opcion === "peso") {
        item.peso = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "talla") {
        item.talla = event.target.value.replace(/[^.\d]/g, "").trim();
        item.imc = this.calcularImc(item.peso, item.talla);
      }

      if (opcion === "imc") {
        item.imc = event.target.value.replace(/[^.\d]/g, "").trim();
        item.imc = this.calcularImc(item.peso, item.talla);
      }

      if (opcion === "pb") {
        item.pb = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "nocepillado") {
        item.nocepillado = event.target.value.replace(/[^.\d]/g, "").trim();
      }
    },
    updateDe12A17: function updateDe12A17(item, valor, opcion) {
      if (opcion === "conducta") {
        item.conducta = valor;
      }

      if (opcion === "visuales") {
        item.visuales = valor;
      }

      if (opcion === "auditivos") {
        item.auditivos = valor;
      }

      if (opcion === "enfermedades_cronicas") {
        item.enfermedades_cronicas = valor;
      }

      if (opcion === "dientes_sanos") {
        item.dientes_sanos = valor;
      }

      if (opcion === "consultaodon") {
        item.consultaodon = valor;
      }

      if (opcion === "maltrato") {
        item.maltrato = valor;
      }

      if (opcion === "alcohol") {
        item.alcohol = valor;
      }

      if (opcion === "fuma") {
        item.fuma = valor;
      }

      if (opcion === "spa") {
        item.spa = valor;
      }

      if (opcion === "desparacitado") {
        item.desparacitado = valor;
      }

      if (opcion === "empleo") {
        item.empleo = valor;
      }

      if (opcion === "religion") {
        item.religion = valor;
      }

      if (opcion === "queesvih") {
        item.queesvih = valor;
      }

      if (opcion === "queescancerutero") {
        item.queescancerutero = valor;
      }

      if (opcion === "queespapiloma") {
        item.queespapiloma = valor;
      }

      if (opcion === "queescancerseno") {
        item.queescancerseno = valor;
      }

      if (opcion === "padre") {
        item.padre = valor;
      }

      if (opcion === "madre") {
        item.madre = valor;
      }

      if (opcion === "hermanos") {
        item.hermanos = valor;
      }

      if (opcion === "conyuge") {
        item.conyuge = valor;
      }
    },
    Ade18a28Anio: function Ade18a28Anio(vector, edad, opcion) {
      this.De18A28.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        edad: edad,
        peso: vector.peso,
        talla: vector.talla,
        imc: this.calcularImc(vector.peso, vector.talla),
        pcintura: "",
        pb: "NA",
        visuales: "",
        auditivos: "",
        conducta: "",
        enfermedades_cronicas: "",
        dientes_sanos: "",
        consultaodon: "",
        nocepillado: "",
        maltrato: "",
        alcohol: "",
        fuma: "",
        spa: "",
        desparacitado: "",
        empleo: "",
        religion: "",
        queesvih: "",
        queescancerutero: "",
        queespapiloma: "",
        opci: opcion,
        estado: "Activo"
      });
    },
    changeupdateDe18A28: function changeupdateDe18A28(item, event, opcion) {
      if (opcion === "peso") {
        item.peso = event.target.value.replace(/[^.\d]/g, "").trim();
        item.imc = this.calcularImc(item.peso, item.talla);
      }

      if (opcion === "talla") {
        item.talla = event.target.value.replace(/[^.\d]/g, "").trim();
        item.imc = this.calcularImc(item.peso, item.talla);
      }

      if (opcion === "imc") {
        item.imc = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "pb") {
        item.pb = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "pcintura") {
        item.pcintura = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "nocepillado") {
        item.nocepillado = event.target.value.replace(/[^.\d]/g, "").trim();
      }
    },
    updateDe18A28: function updateDe18A28(item, valor, opcion) {
      if (opcion === "conducta") {
        item.conducta = valor;
      }

      if (opcion === "visuales") {
        item.visuales = valor;
      }

      if (opcion === "auditivos") {
        item.auditivos = valor;
      }

      if (opcion === "enfermedades_cronicas") {
        item.enfermedades_cronicas = valor;
      }

      if (opcion === "dientes_sanos") {
        item.dientes_sanos = valor;
      }

      if (opcion === "consultaodon") {
        item.consultaodon = valor;
      }

      if (opcion === "maltrato") {
        item.maltrato = valor;
      }

      if (opcion === "alcohol") {
        item.alcohol = valor;
      }

      if (opcion === "fuma") {
        item.fuma = valor;
      }

      if (opcion === "spa") {
        item.spa = valor;
      }

      if (opcion === "desparacitado") {
        item.desparacitado = valor;
      }

      if (opcion === "empleo") {
        item.empleo = valor;
      }

      if (opcion === "religion") {
        item.religion = valor;
      }

      if (opcion === "queesvih") {
        item.queesvih = valor;
      }

      if (opcion === "queescancerutero") {
        item.queescancerutero = valor;
      }

      if (opcion === "queespapiloma") {
        item.queespapiloma = valor;
      }
    },
    Ade29a59Anio: function Ade29a59Anio(vector, edad, opcion) {
      this.De29A59.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        edad: edad,
        peso: vector.peso,
        talla: vector.talla,
        imc: this.calcularImc(vector.peso, vector.talla),
        pcintura: "",
        pb: "NA",
        visuales: "",
        auditivos: "",
        conducta: "",
        enfermedades_cronicas: "",
        dientes_sanos: "",
        consultaodon: "",
        nocepillado: "",
        maltrato: "",
        alcohol: "",
        fuma: "",
        spa: "",
        desparacitado: "",
        empleo: "",
        examen_prostata: "NA",
        citologia: "NA",
        examen_mama: "NA",
        religion: "",
        queesvih: "",
        queescancerutero: "",
        queespapiloma: "",
        opci: opcion,
        estado: "Activo"
      });
    },
    changeupdateDe29A59: function changeupdateDe29A59(item, event, opcion) {
      if (opcion === "peso") {
        item.peso = event.target.value.replace(/[^.\d]/g, "").trim();
        item.imc = this.calcularImc(item.peso, item.talla);
      }

      if (opcion === "talla") {
        item.talla = event.target.value.replace(/[^.\d]/g, "").trim();
        item.imc = this.calcularImc(item.peso, item.talla);
      }

      if (opcion === "imc") {
        item.imc = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "pb") {
        item.pb = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "pcintura") {
        item.pcintura = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "nocepillado") {
        item.nocepillado = event.target.value.replace(/[^.\d]/g, "").trim();
      }
    },
    updateDe29A59: function updateDe29A59(item, valor, opcion) {
      if (opcion === "conducta") {
        item.conducta = valor;
      }

      if (opcion === "visuales") {
        item.visuales = valor;
      }

      if (opcion === "auditivos") {
        item.auditivos = valor;
      }

      if (opcion === "enfermedades_cronicas") {
        item.enfermedades_cronicas = valor;
      }

      if (opcion === "dientes_sanos") {
        item.dientes_sanos = valor;
      }

      if (opcion === "consultaodon") {
        item.consultaodon = valor;
      }

      if (opcion === "maltrato") {
        item.maltrato = valor;
      }

      if (opcion === "alcohol") {
        item.alcohol = valor;
      }

      if (opcion === "fuma") {
        item.fuma = valor;
      }

      if (opcion === "spa") {
        item.spa = valor;
      }

      if (opcion === "desparacitado") {
        item.desparacitado = valor;
      }

      if (opcion === "empleo") {
        item.empleo = valor;
      }

      if (opcion === "religion") {
        item.religion = valor;
      }

      if (opcion === "examen_prostata") {
        item.examen_prostata = valor;
      }

      if (opcion === "citologia") {
        item.citologia = valor;
      }

      if (opcion === "examen_mama") {
        item.examen_mama = valor;
      }

      if (opcion === "queesvih") {
        item.queesvih = valor;
      }

      if (opcion === "queescancerutero") {
        item.queescancerutero = valor;
      }

      if (opcion === "queespapiloma") {
        item.queespapiloma = valor;
      }
    },
    Ade60Anio: function Ade60Anio(vector, edad, opcion) {
      this.De60.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        edad: edad,
        grupo_ayudas: "",
        peso: vector.peso,
        talla: vector.talla,
        imc: this.calcularImc(vector.peso, vector.talla),
        pa: "",
        glicemia: "",
        cigarrillo: "",
        alcohol: "",
        actividad_fisica: "",
        sintomatico: "",
        examen_seno: "",
        citologia: "",
        colposcopia: "",
        examen_prostata: "",
        biposia_prostata: "",
        agudeza_visual: "",
        subsidio: "",
        enfermedades_cronicas: "",
        enfermedades_infecciosas: "",
        opci: opcion,
        empleo: "",
        estado: "Activo"
      });
    },
    changeupdateDe60: function changeupdateDe60(item, event, opcion) {
      if (opcion === "peso") {
        item.peso = event.target.value.replace(/[^.\d]/g, "").trim();
        item.imc = this.calcularImc(item.peso, item.talla);
      }

      if (opcion === "talla") {
        item.talla = event.target.value.replace(/[^.\d]/g, "").trim();
        item.imc = this.calcularImc(item.peso, item.talla);
      }

      if (opcion === "imc") {
        item.imc = event.target.value.replace(/[^.\d]/g, "").trim();
      }

      if (opcion === "pa") {
        item.pa = event.target.value.trim();
      }

      if (opcion === "glicemia") {
        item.glicemia = event.target.value.trim();
      }
    },
    updateDe60: function updateDe60(item, valor, opcion) {
      if (opcion === "grupo_ayudas") {
        item.grupo_ayudas = valor;
      }

      if (opcion === "cigarrillo") {
        item.cigarrillo = valor;
      }

      if (opcion === "alcohol") {
        item.alcohol = valor;
      }

      if (opcion === "actividad_fisica") {
        item.actividad_fisica = valor;
      }

      if (opcion === "sintomatico") {
        item.sintomatico = valor;
      }

      if (opcion === "examen_seno") {
        item.examen_seno = valor;
      }

      if (opcion === "citologia") {
        item.citologia = valor;
      }

      if (opcion === "colposcopia") {
        item.colposcopia = valor;
      }

      if (opcion === "examen_prostata") {
        item.examen_prostata = valor;
      }

      if (opcion === "biposia_prostata") {
        item.biposia_prostata = valor;
      }

      if (opcion === "agudeza_visual") {
        item.agudeza_visual = valor;
      }

      if (opcion === "subsidio") {
        item.subsidio = valor;
      }

      if (opcion === "enfermedades_cronicas") {
        item.enfermedades_cronicas = valor;

        if (valor === "SI") {
          // AGREGAR ENFERMEDADES CONTAGIOSAS
          this.AEnCro(item); // AGREGAR ENFERMEDADES CONTAGIOSAS
        } else {
          // ELIMINAR ENFERMEDADES CONTAGIOSAS
          this.EEnCro(item); // ELIMINAR ENFERMEDADES CONTAGIOSAS
        }
      }

      if (opcion === "enfermedades_infecciosas") {
        item.enfermedades_infecciosas = valor;

        if (valor === "SI") {
          // AGREGAR ENFERMEDADES INFECCIOSAS
          this.AEnInf(item); // AGREGAR ENFERMEDADES INFECCIOSAS
        } else {
          // ELIMINAR ENFERMEDADES INFECCIOSAS
          this.EEnInf(item); // ELIMINAR ENFERMEDADES INFECCIOSAS
        }
      }
    },
    AEnCro: function AEnCro(vector) {
      var opcion = "";

      if (vector.opci === "JEFE") {
        opcion = "JEFE";
      } else {
        opcion = "INTE";
      }

      this.EnCro.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        enfermedad: "",
        tiempo: "",
        tratamiento: "",
        complicaciones: "0",
        opci: opcion,
        estado: "Activo"
      });
    },
    changeupdateEnCro: function changeupdateEnCro(item, event, opcion) {
      if (opcion === "complicaciones") {
        item.complicaciones = event.target.value.trim();
      }
    },
    updateEnCro: function updateEnCro(item, valor, opcion) {
      if (opcion === "enfermedad") {
        item.enfermedad = valor;
      }

      if (opcion === "tratamiento") {
        item.tratamiento = valor;
      }

      if (opcion === "tiempo") {
        item.tiempo = valor;
      }
    },
    EEnCro: function EEnCro(item) {
      var identificacion = item.identificacion;
      this.EnCro = this.EnCro.filter(function (men) {
        return men.identificacion != identificacion;
      });
    },
    AEnInf: function AEnInf(vector) {
      var opcion = "";

      if (vector.opci === "JEFE") {
        opcion = "JEFE";
      } else {
        opcion = "INTE";
      }

      this.EnInf.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        enfermedad: "",
        tiempo: "",
        tratamiento: "",
        complicaciones: "0",
        opci: opcion,
        estado: "Activo"
      });
    },
    changeupdateEnInf: function changeupdateEnInf(item, event, opcion) {
      if (opcion === "complicaciones") {
        item.complicaciones = event.target.value.trim();
      }
    },
    updateEnInf: function updateEnInf(item, valor, opcion) {
      if (opcion === "enfermedad") {
        item.enfermedad = valor;
      }

      if (opcion === "tratamiento") {
        item.tratamiento = valor;
      }

      if (opcion === "tiempo") {
        item.tiempo = valor;
      }
    },
    EEnInf: function EEnInf(item) {
      var identificacion = item.identificacion;
      this.EnInf = this.EnInf.filter(function (men) {
        return men.identificacion != identificacion;
      });
    },
    AMigra: function AMigra(vector, edad, opcion) {
      this.Migra.push({
        id: 0,
        tipo_id: vector.tipo_id,
        identificacion: vector.identificacion,
        pnom: vector.pnom,
        snom: vector.snom,
        pape: vector.pape,
        sape: vector.sape,
        sexo: vector.sexo,
        edad: edad,
        pais: "",
        registrado: "",
        cuantollego: "",
        futuro: "",
        recibido: "",
        necesidad: "",
        dependen: "",
        ingreso: "",
        opci: opcion,
        estado: "Activo"
      });
    },
    changeupdateMigra: function changeupdateMigra(item, event, opcion) {
      if (opcion === "pais") {
        item.pais = event.target.value.trim();
      }

      if (opcion === "dependen") {
        item.dependen = event.target.value.replace(/[^.\d]/g, "").trim();
      }
    },
    updateMigra: function updateMigra(item, valor, opcion) {
      if (opcion === "registrado") {
        item.registrado = valor;
      }

      if (opcion === "cuantollego") {
        item.cuantollego = valor;
      }

      if (opcion === "futuro") {
        item.futuro = valor;
      }

      if (opcion === "recibido") {
        item.recibido = valor;
      }

      if (opcion === "necesidad") {
        item.necesidad = valor;
      }

      if (opcion === "ingreso") {
        item.ingreso = valor;
      }
    },
    calcularImc: function calcularImc(peso, talla) {
      if (peso === "") {
        peso = 0;
      }

      if (talla === "") {
        talla = 1;
      }

      talla = talla / 100;
      var imc = peso / (talla * talla);
      return imc.toFixed(2);
    },
    //OPCIONES DE LOS CICLOS DE VIDA
    cambiarNivel: function cambiarNivel(identi) {
      for (var i = 0; i < this.datosJefe.length; i++) {
        if (this.datosJefe[i].identificacion === identi) {
          this.estratificacionData.nivel_instruccion = this.datosJefe[i].nivel_escolaridad;
          return;
        }
      }

      return "";
    }
  }
});

/***/ }),

/***/ "./node_modules/css-loader/index.js?!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/Vistas/Caracterizacion/Editar.vue?vue&type=style&index=0&lang=css&":
/*!************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader??ref--5-1!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--5-2!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/Vistas/Caracterizacion/Editar.vue?vue&type=style&index=0&lang=css& ***!
  \************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n.modal-backdrop {\n  background-color: rgba(0, 0, 0, 0.5) !important;\n}\n.modal-title {\n  color: #f8f9fa !important;\n}\n.close {\n  display: none;\n}\n.color-datepicker {\n  background: #f2f2f2;\n  border: 1px solid #ddd;\n  padding: 0em 1em 1em;\n  margin-bottom: 2em;\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/style-loader/index.js!./node_modules/css-loader/index.js?!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/Vistas/Caracterizacion/Editar.vue?vue&type=style&index=0&lang=css&":
/*!****************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/style-loader!./node_modules/css-loader??ref--5-1!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--5-2!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/Vistas/Caracterizacion/Editar.vue?vue&type=style&index=0&lang=css& ***!
  \****************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../../node_modules/css-loader??ref--5-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src??ref--5-2!../../../../node_modules/vue-loader/lib??vue-loader-options!./Editar.vue?vue&type=style&index=0&lang=css& */ "./node_modules/css-loader/index.js?!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/Vistas/Caracterizacion/Editar.vue?vue&type=style&index=0&lang=css&");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/Vistas/Caracterizacion/Editar.vue?vue&type=template&id=8bf6b44a&":
/*!*********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/Vistas/Caracterizacion/Editar.vue?vue&type=template&id=8bf6b44a& ***!
  \*********************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "row" }, [
    _c("div", { staticClass: "col-12" }, [
      _c(
        "div",
        {
          staticClass: "kt-portlet kt-portlet--height-fluid kt-portlet--mobile",
          staticStyle: { "margin-top": "-4%" }
        },
        [
          _c(
            "div",
            {
              staticClass:
                "kt-portlet__head kt-portlet__head--lg kt-portlet__head--noborder kt-portlet__head--break-sm"
            },
            [
              _vm._m(0),
              _vm._v(" "),
              _c("div", { staticClass: "kt-portlet__head-toolbar" }, [
                _c(
                  "a",
                  {
                    staticClass: "btn btn-danger kt-margin-r-10",
                    attrs: { href: "#" },
                    on: {
                      click: function($event) {
                        $event.preventDefault()
                        return _vm.volver($event)
                      }
                    }
                  },
                  [
                    _c("i", { staticClass: "la la-arrow-left" }),
                    _vm._v(" "),
                    _c("span", { staticClass: "kt-hidden-mobile" }, [
                      _vm._v("Volver")
                    ])
                  ]
                ),
                _vm._v(" "),
                _c("div", { staticClass: "btn-group" }, [
                  _c(
                    "button",
                    {
                      staticClass: "btn btn-brand",
                      class: _vm.spinGActu,
                      attrs: { type: "button", disabled: !_vm.valGActu },
                      on: {
                        click: function($event) {
                          $event.preventDefault()
                          return _vm.Actualizar($event)
                        }
                      }
                    },
                    [
                      _c("i", { staticClass: "la la-refresh" }),
                      _vm._v(" "),
                      _c("span", { staticClass: "kt-hidden-mobile" }, [
                        _vm._v("Actualizar")
                      ])
                    ]
                  )
                ])
              ])
            ]
          ),
          _vm._v(" "),
          _c("div", { staticClass: "kt-portlet__body" }, [
            _c(
              "ul",
              {
                staticClass:
                  "nav nav-tabs nav-tabs-line nav-tabs-bold nav-tabs-line-3x nav-tabs-line-success",
                attrs: { role: "tablist" }
              },
              [
                _c("li", { staticClass: "nav-item" }, [
                  _c(
                    "a",
                    {
                      staticClass: "nav-link active",
                      attrs: {
                        "data-toggle": "tab",
                        href: "#tabIdentificacion",
                        role: "tab"
                      },
                      on: {
                        click: function($event) {
                          return _vm.cambiarTab2("tabIdentificacion")
                        }
                      }
                    },
                    [_vm._v("Identificación")]
                  )
                ]),
                _vm._v(" "),
                _c("li", { staticClass: "nav-item" }, [
                  _c(
                    "a",
                    {
                      staticClass: "nav-link",
                      attrs: {
                        "data-toggle": "tab",
                        href: "#tabVivienda",
                        role: "tab"
                      },
                      on: {
                        click: function($event) {
                          return _vm.cambiarTab2("tabVivienda")
                        }
                      }
                    },
                    [_vm._v("Viviendas")]
                  )
                ]),
                _vm._v(" "),
                _c("li", { staticClass: "nav-item" }, [
                  _c(
                    "a",
                    {
                      staticClass: "nav-link",
                      attrs: {
                        "data-toggle": "tab",
                        href: "#cartxciclo",
                        role: "tab"
                      },
                      on: {
                        click: function($event) {
                          return _vm.cambiarTab2("cartxciclo")
                        }
                      }
                    },
                    [_vm._v("Cart. X ciclo")]
                  )
                ]),
                _vm._v(" "),
                _c("li", { staticClass: "nav-item" }, [
                  _c(
                    "a",
                    {
                      staticClass: "nav-link",
                      attrs: {
                        "data-toggle": "tab",
                        href: "#adolescente",
                        role: "tab"
                      },
                      on: {
                        click: function($event) {
                          return _vm.cambiarTab2("adolescente")
                        }
                      }
                    },
                    [_vm._v("Adolescentes/Jovenes")]
                  )
                ]),
                _vm._v(" "),
                _c("li", { staticClass: "nav-item" }, [
                  _c(
                    "a",
                    {
                      staticClass: "nav-link",
                      attrs: {
                        "data-toggle": "tab",
                        href: "#adultomayor",
                        role: "tab"
                      },
                      on: {
                        click: function($event) {
                          return _vm.cambiarTab2("adultomayor")
                        }
                      }
                    },
                    [_vm._v("Adulto mayor")]
                  )
                ]),
                _vm._v(" "),
                _c("li", { staticClass: "nav-item" }, [
                  _c(
                    "a",
                    {
                      staticClass: "nav-link",
                      attrs: {
                        "data-toggle": "tab",
                        href: "#migrante",
                        role: "tab"
                      },
                      on: {
                        click: function($event) {
                          return _vm.cambiarTab2("migrante")
                        }
                      }
                    },
                    [_vm._v("Migrante")]
                  )
                ])
              ]
            ),
            _vm._v(" "),
            _c("div", { staticClass: "tab-content" }, [
              _c(
                "div",
                { staticClass: "vld-parent" },
                [
                  _c(
                    "loading",
                    {
                      attrs: {
                        active: _vm.isLoading,
                        "can-cancel": true,
                        "on-cancel": _vm.onCancel,
                        "is-full-page": true
                      },
                      on: {
                        "update:active": function($event) {
                          _vm.isLoading = $event
                        }
                      }
                    },
                    [
                      _c(
                        "div",
                        {
                          staticClass: "alert alert-success",
                          attrs: { role: "alert" }
                        },
                        [
                          _c("div", { staticClass: "alert-icon" }, [
                            _c("i", { staticClass: "fa fa-spinner" })
                          ]),
                          _vm._v(" "),
                          _c("div", { staticClass: "alert-text" }, [
                            _c("h3", [
                              _vm._v("Cargando... Por Favor Espere!!!")
                            ])
                          ])
                        ]
                      )
                    ]
                  )
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "div",
                {
                  staticClass: "tab-pane active",
                  attrs: { id: "tabIdentificacion", role: "tabpanel" }
                },
                [
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-12 kt-align-right" }, [
                      _c(
                        "button",
                        {
                          staticClass: "btn btn-brand",
                          class: _vm.spinGIden,
                          attrs: { type: "button", disabled: !_vm.valGIden },
                          on: {
                            click: function($event) {
                              return _vm.cambiarTab1(
                                "tabVivienda",
                                "tabIdentificacion"
                              )
                            }
                          }
                        },
                        [
                          _c("i", { staticClass: "la la-arrow-right" }),
                          _vm._v(" "),
                          _c("span", { staticClass: "kt-hidden-mobile" }, [
                            _vm._v("Guardar")
                          ])
                        ]
                      )
                    ])
                  ]),
                  _vm._v(" "),
                  _vm._m(1),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Departamento (*):")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            ref: "id_dpto",
                            class:
                              _vm.hogar.id_dpto == ""
                                ? "is-invalid"
                                : "is-valid",
                            on: {
                              change: function($event) {
                                return _vm.cambiarCombo("dpto")
                              }
                            },
                            model: {
                              value: _vm.hogar.id_dpto,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.hogar,
                                  "id_dpto",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "hogar.id_dpto"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.dpto_options, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        ),
                        _vm._v(" "),
                        _vm.hogar.id_dpto != ""
                          ? _c("div", { staticClass: "valid-feedback" }, [
                              _vm._v("Departamento Valido")
                            ])
                          : _vm._e(),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          _vm.hogar.id_dpto == ""
                            ? _c("span", [
                                _vm._v("El departamento es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Municipio (*):")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            ref: "id_mun",
                            class:
                              _vm.hogar.id_mun == ""
                                ? "is-invalid"
                                : "is-valid",
                            on: {
                              change: function($event) {
                                return _vm.cambiarCombo("muni")
                              }
                            },
                            model: {
                              value: _vm.hogar.id_mun,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.hogar,
                                  "id_mun",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "hogar.id_mun"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(
                              _vm.muni_options[_vm.hogar.id_dpto],
                              function(item) {
                                return _c(
                                  "option",
                                  {
                                    key: item.value,
                                    domProps: { value: item.value }
                                  },
                                  [_vm._v(_vm._s(item.texto))]
                                )
                              }
                            )
                          ],
                          2
                        ),
                        _vm._v(" "),
                        _vm.hogar.id_mun != ""
                          ? _c("div", { staticClass: "valid-feedback" }, [
                              _vm._v("Municipio Valido")
                            ])
                          : _vm._e(),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          _vm.hogar.id_mun == ""
                            ? _c("span", [
                                _vm._v("El municipio es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Corregimiento:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.hogar.id_corre == ""
                                ? "is-invalid"
                                : "is-valid",
                            on: {
                              change: function($event) {
                                return _vm.cambiarCombo("corregi")
                              }
                            },
                            model: {
                              value: _vm.hogar.id_corre,
                              callback: function($$v) {
                                _vm.$set(_vm.hogar, "id_corre", $$v)
                              },
                              expression: "hogar.id_corre"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "0" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _vm._l(
                              _vm.corregi_options[_vm.hogar.id_mun],
                              function(item) {
                                return _c(
                                  "option",
                                  {
                                    key: item.value,
                                    domProps: { value: item.value }
                                  },
                                  [_vm._v(_vm._s(item.texto))]
                                )
                              }
                            )
                          ],
                          2
                        ),
                        _vm._v(" "),
                        _vm.hogar.id_corre != ""
                          ? _c("div", { staticClass: "valid-feedback" }, [
                              _vm._v("Corregimiento Valido")
                            ])
                          : _vm._e(),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          _vm.hogar.id_corre == ""
                            ? _c("span", [
                                _vm._v("El corregimiento es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Vereda:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.hogar.id_vereda == ""
                                ? "is-invalid"
                                : "is-valid",
                            on: {
                              change: function($event) {
                                return _vm.cambiarCombo("vereda")
                              }
                            },
                            model: {
                              value: _vm.hogar.id_vereda,
                              callback: function($$v) {
                                _vm.$set(_vm.hogar, "id_vereda", $$v)
                              },
                              expression: "hogar.id_vereda"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "0" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _vm._l(
                              _vm.vereda_options[_vm.hogar.id_corre],
                              function(item) {
                                return _c(
                                  "option",
                                  {
                                    key: item.value,
                                    domProps: { value: item.value }
                                  },
                                  [_vm._v(_vm._s(item.texto))]
                                )
                              }
                            )
                          ],
                          2
                        ),
                        _vm._v(" "),
                        _vm.hogar.id_vereda != ""
                          ? _c("div", { staticClass: "valid-feedback" }, [
                              _vm._v("Vereda Valida")
                            ])
                          : _vm._e()
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Barrio:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.hogar.id_barrio == ""
                                ? "is-invalid"
                                : "is-valid",
                            model: {
                              value: _vm.hogar.id_barrio,
                              callback: function($$v) {
                                _vm.$set(_vm.hogar, "id_barrio", $$v)
                              },
                              expression: "hogar.id_barrio"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "0" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _vm._l(_vm.barrio_options, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        ),
                        _vm._v(" "),
                        _vm.hogar.id_barrio != ""
                          ? _c("div", { staticClass: "valid-feedback" }, [
                              _vm._v("Barrio Valido")
                            ])
                          : _vm._e()
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Zona:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.hogar.id_zona == ""
                                ? "is-invalid"
                                : "is-valid",
                            on: { change: _vm.habilitar_zonas },
                            model: {
                              value: _vm.hogar.id_zona,
                              callback: function($$v) {
                                _vm.$set(_vm.hogar, "id_zona", $$v)
                              },
                              expression: "hogar.id_zona"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "0" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Urbano")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Rural centro poblado")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Rural disperso")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _vm.hogar.id_zona != ""
                          ? _c("div", { staticClass: "valid-feedback" }, [
                              _vm._v("Zona Valida")
                            ])
                          : _vm._e()
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Tenencia de Vivienda (*):")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            ref: "tenencia_vivienda",
                            class:
                              _vm.hogar.tenencia_vivienda == ""
                                ? "is-invalid"
                                : "is-valid",
                            model: {
                              value: _vm.hogar.tenencia_vivienda,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.hogar,
                                  "tenencia_vivienda",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "hogar.tenencia_vivienda"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "PROPIETARIO" } }, [
                              _vm._v("PROPIETARIO(A)")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "ARRENDADO" } }, [
                              _vm._v("ARRENDADO(A)")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "FAMILIAR" } }, [
                              _vm._v("FAMILIAR")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "CUIDADOR" } }, [
                              _vm._v("CUIDADOR(A)")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _vm.hogar.tenencia_vivienda != ""
                          ? _c("div", { staticClass: "valid-feedback" }, [
                              _vm._v("Tenencia de Vivienda Valida")
                            ])
                          : _vm._e(),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          _vm.hogar.tenencia_vivienda == ""
                            ? _c("span", [
                                _vm._v("La tenencia de vivienda es obligatoria")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-4" }, [
                      _c("label", [_vm._v("Numero de Hogares (*):")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.hogar.numero_hogares,
                            expression: "hogar.numero_hogares"
                          }
                        ],
                        ref: "numero_hogares",
                        staticClass: "form-control text-capitalize",
                        class:
                          _vm.allLetter(_vm.hogar.numero_hogares) == false
                            ? "is-invalid"
                            : "is-valid",
                        attrs: {
                          type: "text",
                          placeholder: "Numero de Hogares"
                        },
                        domProps: { value: _vm.hogar.numero_hogares },
                        on: {
                          change: _vm.validarNumHog,
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.hogar,
                              "numero_hogares",
                              $event.target.value
                            )
                          }
                        }
                      }),
                      _vm._v(" "),
                      _vm.allLetter(_vm.hogar.numero_hogares) == true
                        ? _c("div", { staticClass: "valid-feedback" }, [
                            _vm._v("Numero de Hogares Valido")
                          ])
                        : _vm._e(),
                      _vm._v(" "),
                      _c("div", { staticClass: "invalid-feedback" }, [
                        _vm.allLetter(_vm.hogar.numero_hogares) == false
                          ? _c("span", [
                              _vm._v("El numero de hogares debe ser numerico")
                            ])
                          : _vm._e(),
                        _vm._v(" "),
                        _vm.hogar.numero_hogares == ""
                          ? _c("span", [
                              _vm._v("El numero de hogares es obligatorio")
                            ])
                          : _vm._e()
                      ])
                    ]),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Población Especial (*):")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            ref: "poblacion_especial",
                            class:
                              _vm.hogar.poblacion_especial == ""
                                ? "is-invalid"
                                : "is-valid",
                            model: {
                              value: _vm.hogar.poblacion_especial,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.hogar,
                                  "poblacion_especial",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "hogar.poblacion_especial"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "0" } }, [
                              _vm._v("NO APLICA")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("DESPLAZADO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("VICTIMA DEL CONFLICTO ARMADO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("MADRE COMUNITARIA")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _vm.hogar.poblacion_especial == ""
                          ? _c("div", { staticClass: "valid-feedback" }, [
                              _vm._v("Población Especial Valida")
                            ])
                          : _vm._e(),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          _vm.hogar.poblacion_especial == ""
                            ? _c("span", [
                                _vm._v("La población especial es obligatoria")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [
                          _vm._v("¿La comunidad presenta vías de acceso? (*):")
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            ref: "vias_acceso",
                            class:
                              _vm.hogar.vias_acceso == ""
                                ? "is-invalid"
                                : "is-valid",
                            model: {
                              value: _vm.hogar.vias_acceso,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.hogar,
                                  "vias_acceso",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "hogar.vias_acceso"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "0" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Pavimentadas")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Placa huella")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Sin pavimentar")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _vm.hogar.vias_acceso != ""
                          ? _c("div", { staticClass: "valid-feedback" }, [
                              _vm._v("Presenta vias de acceso Valida")
                            ])
                          : _vm._e(),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          _vm.hogar.vias_acceso == ""
                            ? _c("span", [
                                _vm._v(
                                  "La comunidad presenta vías de acceso es obligatoria"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-5" },
                      [
                        _c("label", [
                          _vm._v(
                            "¿Presenta acceso fácil a los servicios públicos? (*):"
                          )
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            ref: "servicios_publicos",
                            class:
                              _vm.hogar.servicios_publicos == ""
                                ? "is-invalid"
                                : "is-valid",
                            model: {
                              value: _vm.hogar.servicios_publicos,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.hogar,
                                  "servicios_publicos",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "hogar.servicios_publicos"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Permanente")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Ocacional")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Periódico")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("No hay acceso a servicios públicos")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("No")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _vm.hogar.servicios_publicos != ""
                          ? _c("div", { staticClass: "valid-feedback" }, [
                              _vm._v(
                                "Presenta acceso fácil a los servicios públicos Valido"
                              )
                            ])
                          : _vm._e(),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          _vm.hogar.servicios_publicos == ""
                            ? _c("span", [
                                _vm._v(
                                  "Presenta acceso fácil a los servicios públicos es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c("div", { staticClass: "col-lg-12" }, [
                      _c("label", [_vm._v("Dirección (*):")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model.trim",
                            value: _vm.hogar.direccion,
                            expression: "hogar.direccion",
                            modifiers: { trim: true }
                          }
                        ],
                        ref: "direccion",
                        staticClass: "form-control text-capitalize",
                        class:
                          _vm.hogar.direccion == "" ? "is-invalid" : "is-valid",
                        attrs: { type: "text", placeholder: "Dirección" },
                        domProps: { value: _vm.hogar.direccion },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.hogar,
                              "direccion",
                              $event.target.value.trim()
                            )
                          },
                          blur: function($event) {
                            return _vm.$forceUpdate()
                          }
                        }
                      }),
                      _vm._v(" "),
                      _vm.hogar.direccion != ""
                        ? _c("div", { staticClass: "valid-feedback" }, [
                            _vm._v("La Dirección es Valida")
                          ])
                        : _vm._e(),
                      _vm._v(" "),
                      _c("div", { staticClass: "invalid-feedback" }, [
                        _vm.hogar.direccion == ""
                          ? _c("span", [_vm._v("La dirección es obligatoria")])
                          : _vm._e()
                      ])
                    ])
                  ]),
                  _vm._v(" "),
                  _vm._m(2),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Tipo de Documento (*):")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            ref: "tipo_id",
                            class:
                              _vm.caracData.tipo_id == "" ? "" : "is-valid",
                            on: {
                              change: function($event) {
                                return _vm.formato("tipoid")
                              }
                            },
                            model: {
                              value: _vm.caracData.tipo_id,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.caracData,
                                  "tipo_id",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "caracData.tipo_id"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "CC" } }, [
                              _vm._v("CEDULA DE CIUDADANIA")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "PA" } }, [
                              _vm._v("PASAPORTE")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "RC" } }, [
                              _vm._v("REGISTRO CIVIL")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "TI" } }, [
                              _vm._v("TARJETA DE IDENTIDAD")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "ASI" } }, [
                              _vm._v("ADULTO SIN IDENTIFICACIÓN")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "MSI" } }, [
                              _vm._v("MENOR SIN IDENTIFICACIÓN")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "CE" } }, [
                              _vm._v("CEDULA DE EXTRANJERIA")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-4" }, [
                      _c("label", [_vm._v("Documento (*):")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model.trim",
                            value: _vm.caracData.identificacion,
                            expression: "caracData.identificacion",
                            modifiers: { trim: true }
                          }
                        ],
                        ref: "identificacionJefe",
                        staticClass: "form-control text-capitalize",
                        class:
                          _vm.caracData.identificacion == "" ? "" : "is-valid",
                        attrs: { type: "text", placeholder: "Documento" },
                        domProps: { value: _vm.caracData.identificacion },
                        on: {
                          change: function($event) {
                            return _vm.formato("id1")
                          },
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.caracData,
                              "identificacion",
                              $event.target.value.trim()
                            )
                          },
                          blur: function($event) {
                            return _vm.$forceUpdate()
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Parentesco (*):")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            ref: "parentesco",
                            class:
                              _vm.caracData.parentesco == "" ? "" : "is-valid",
                            staticStyle: { "background-color": "white" },
                            attrs: { disabled: true },
                            model: {
                              value: _vm.caracData.parentesco,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.caracData,
                                  "parentesco",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "caracData.parentesco"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.parentesco_options, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: {
                                    value: item.value,
                                    selected: _vm.caracData.parentesco == "33"
                                  }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Sexo (*):")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            ref: "sexo",
                            class: _vm.caracData.sexo == "" ? "" : "is-valid",
                            model: {
                              value: _vm.caracData.sexo,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.caracData,
                                  "sexo",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "caracData.sexo"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "MASCULINO" } }, [
                              _vm._v("MASCULINO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "FEMENINO" } }, [
                              _vm._v("FEMENINO")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Orientación Sexual (*):")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            ref: "sexo",
                            class:
                              _vm.caracData.orientacion == "" ? "" : "is-valid",
                            model: {
                              value: _vm.caracData.orientacion,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.caracData,
                                  "orientacion",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "caracData.orientacion"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "HETEROSEXUAL" } }, [
                              _vm._v("HETEROSEXUAL")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "HOMOSEXUAL" } }, [
                              _vm._v("HOMOSEXUAL")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "BISEXUAL" } }, [
                              _vm._v("BISEXUAL")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NODECLARA" } }, [
                              _vm._v("NO DECLARA")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("NO APLICA")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Identidad de Genero (*):")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.caracData.identidad_genero == ""
                                ? ""
                                : "is-valid",
                            model: {
                              value: _vm.caracData.identidad_genero,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.caracData,
                                  "identidad_genero",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "caracData.identidad_genero"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "CISGENERO" } }, [
                              _vm._v("CISGENERO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "TRANSGENERO" } }, [
                              _vm._v("TRANSGENERO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "TRANSEXUAL" } }, [
                              _vm._v("TRANSEXUAL")
                            ]),
                            _vm._v(" "),
                            _c(
                              "option",
                              {
                                attrs: { value: "TERCER GENERO Ó NO BINARIOS" }
                              },
                              [_vm._v("TERCER GENERO Ó NO BINARIOS")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("NO APLICA")
                            ])
                          ]
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c("div", { staticClass: "col-lg-3" }, [
                      _c("label", [_vm._v("Primer Nombre (*):")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model.trim",
                            value: _vm.caracData.pnom,
                            expression: "caracData.pnom",
                            modifiers: { trim: true }
                          }
                        ],
                        ref: "pnom",
                        staticClass: "form-control text-capitalize",
                        class: _vm.caracData.pnom == "" ? "" : "is-valid",
                        attrs: { type: "text", placeholder: "Primer Nombre" },
                        domProps: { value: _vm.caracData.pnom },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.caracData,
                              "pnom",
                              $event.target.value.trim()
                            )
                          },
                          blur: function($event) {
                            return _vm.$forceUpdate()
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-3" }, [
                      _c("label", [_vm._v("Segundo Nombre:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model.trim",
                            value: _vm.caracData.snom,
                            expression: "caracData.snom",
                            modifiers: { trim: true }
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: _vm.caracData.snom == "" ? "" : "is-valid",
                        attrs: { type: "text", placeholder: "Segundo Nombre" },
                        domProps: { value: _vm.caracData.snom },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.caracData,
                              "snom",
                              $event.target.value.trim()
                            )
                          },
                          blur: function($event) {
                            return _vm.$forceUpdate()
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-3" }, [
                      _c("label", [_vm._v("Primer Apellido (*):")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model.trim",
                            value: _vm.caracData.pape,
                            expression: "caracData.pape",
                            modifiers: { trim: true }
                          }
                        ],
                        ref: "pape",
                        staticClass: "form-control text-capitalize",
                        class: _vm.caracData.pape == "" ? "" : "is-valid",
                        attrs: { type: "text", placeholder: "Primer Apellido" },
                        domProps: { value: _vm.caracData.pape },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.caracData,
                              "pape",
                              $event.target.value.trim()
                            )
                          },
                          blur: function($event) {
                            return _vm.$forceUpdate()
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-3" }, [
                      _c("label", [_vm._v("Segundo Apellido:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model.trim",
                            value: _vm.caracData.sape,
                            expression: "caracData.sape",
                            modifiers: { trim: true }
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: _vm.caracData.sape == "" ? "" : "is-valid",
                        attrs: {
                          type: "text",
                          placeholder: "Segundo Apellido"
                        },
                        domProps: { value: _vm.caracData.sape },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.caracData,
                              "sape",
                              $event.target.value.trim()
                            )
                          },
                          blur: function($event) {
                            return _vm.$forceUpdate()
                          }
                        }
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c("div", { staticClass: "col-lg-3" }, [
                      _c("label", [_vm._v("Telefono:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model.trim",
                            value: _vm.caracData.telefono,
                            expression: "caracData.telefono",
                            modifiers: { trim: true }
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: _vm.caracData.telefono == "" ? "" : "is-valid",
                        attrs: { type: "text", placeholder: "Telefono" },
                        domProps: { value: _vm.caracData.telefono },
                        on: {
                          change: function($event) {
                            return _vm.formato("telefono1")
                          },
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.caracData,
                              "telefono",
                              $event.target.value.trim()
                            )
                          },
                          blur: function($event) {
                            return _vm.$forceUpdate()
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Estado Civil (*):")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            ref: "estado_civil",
                            class:
                              _vm.caracData.estado_civil == ""
                                ? ""
                                : "is-valid",
                            model: {
                              value: _vm.caracData.estado_civil,
                              callback: function($$v) {
                                _vm.$set(_vm.caracData, "estado_civil", $$v)
                              },
                              expression: "caracData.estado_civil"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.estado_options, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-4" }, [
                      _c("label", [_vm._v("Fecha de Nacimiento (*):")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.caracData.fecha_nacimiento,
                            expression: "caracData.fecha_nacimiento"
                          }
                        ],
                        ref: "fecha_nacimiento",
                        staticClass: "form-control text-capitalize",
                        class:
                          _vm.caracData.fecha_nacimiento == ""
                            ? ""
                            : "is-valid",
                        attrs: {
                          id: "date",
                          type: "date",
                          placeholder: "Fecha de Nacimiento",
                          max: _vm._f("moment")(_vm.hoy)
                        },
                        domProps: { value: _vm.caracData.fecha_nacimiento },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.caracData,
                              "fecha_nacimiento",
                              $event.target.value
                            )
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-2" }, [
                      _c("label", [_vm._v("Edad:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.calEdad2,
                            expression: "calEdad2"
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: _vm.caracData.edad == "" ? "" : "is-valid",
                        attrs: {
                          type: "text",
                          placeholder: "Edad",
                          readonly: ""
                        },
                        domProps: { value: _vm.calEdad2 },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.calEdad2 = $event.target.value
                          }
                        }
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c("div", { staticClass: "col-lg-2" }, [
                      _c("label", [_vm._v("Puntaje Sisben:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model.trim",
                            value: _vm.caracData.puntaje_sisben,
                            expression: "caracData.puntaje_sisben",
                            modifiers: { trim: true }
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class:
                          _vm.caracData.puntaje_sisben == "" ? "" : "is-valid",
                        attrs: { type: "text" },
                        domProps: { value: _vm.caracData.puntaje_sisben },
                        on: {
                          change: function($event) {
                            return _vm.formato("puntaje1")
                          },
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.caracData,
                              "puntaje_sisben",
                              $event.target.value.trim()
                            )
                          },
                          blur: function($event) {
                            return _vm.$forceUpdate()
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-7" },
                      [
                        _c("label", [_vm._v("Eps (*):")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            ref: "afiliacion_entidad",
                            class:
                              _vm.caracData.afiliacion_entidad == ""
                                ? ""
                                : "is-valid",
                            on: {
                              change: function($event) {
                                return _vm.mostrarOtro("OEPS1")
                              }
                            },
                            model: {
                              value: _vm.caracData.afiliacion_entidad,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.caracData,
                                  "afiliacion_entidad",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "caracData.afiliacion_entidad"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NINGUNA" } }, [
                              _vm._v("NINGUNA")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "OTRA" } }, [
                              _vm._v("OTRA")
                            ]),
                            _vm._v(" "),
                            _vm._l(_vm.admini_options, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Tipo Afiliación:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.caracData.tipo_afiliacion == ""
                                ? ""
                                : "is-valid",
                            model: {
                              value: _vm.caracData.tipo_afiliacion,
                              callback: function($$v) {
                                _vm.$set(_vm.caracData, "tipo_afiliacion", $$v)
                              },
                              expression: "caracData.tipo_afiliacion"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SUBSIDIADO" } }, [
                              _vm._v("SUBSIDIADO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "CONTRIBUTIVO" } }, [
                              _vm._v("CONTRIBUTIVO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "ESPECIAL" } }, [
                              _vm._v("ESPECIAL")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "PPNA" } }, [
                              _vm._v("POBLACIÓN POBRE NO ASEGURADA")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "BENEFICIARIO" } }, [
                              _vm._v("BENEFICIARIO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "ND" } }, [
                              _vm._v("NO DECLARA")
                            ])
                          ]
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.mOEPS1,
                            expression: "mOEPS1"
                          }
                        ],
                        staticClass: "col-lg-12"
                      },
                      [
                        _c("label", [_vm._v("Cual:")]),
                        _vm._v(" "),
                        _c("input", {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model.trim",
                              value: _vm.caracData.otra_eps,
                              expression: "caracData.otra_eps",
                              modifiers: { trim: true }
                            }
                          ],
                          staticClass: "form-control text-capitalize",
                          class: _vm.caracData.otra_eps == "" ? "" : "is-valid",
                          attrs: { type: "text", placeholder: "Cual" },
                          domProps: { value: _vm.caracData.otra_eps },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.$set(
                                _vm.caracData,
                                "otra_eps",
                                $event.target.value.trim()
                              )
                            },
                            blur: function($event) {
                              return _vm.$forceUpdate()
                            }
                          }
                        })
                      ]
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Embarazo:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.caracData.embarazo == "" ? "" : "is-valid",
                            model: {
                              value: _vm.caracData.embarazo,
                              callback: function($$v) {
                                _vm.$set(_vm.caracData, "embarazo", $$v)
                              },
                              expression: "caracData.embarazo"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c(
                              "option",
                              {
                                attrs: {
                                  value: "SI",
                                  disabled: _vm.inputDisabled2
                                }
                              },
                              [_vm._v("SI")]
                            ),
                            _vm._v(" "),
                            _c(
                              "option",
                              {
                                attrs: {
                                  value: "NO",
                                  disabled: _vm.inputDisabled2
                                }
                              },
                              [_vm._v("NO")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NOAPLICA" } }, [
                              _vm._v("NO APLICA")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Embarazo Multiple:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.caracData.embarazo_multiple == ""
                                ? ""
                                : "is-valid",
                            model: {
                              value: _vm.caracData.embarazo_multiple,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.caracData,
                                  "embarazo_multiple",
                                  $$v
                                )
                              },
                              expression: "caracData.embarazo_multiple"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c(
                              "option",
                              {
                                attrs: {
                                  value: "SI",
                                  disabled: _vm.inputDisabled2
                                }
                              },
                              [_vm._v("SI")]
                            ),
                            _vm._v(" "),
                            _c(
                              "option",
                              {
                                attrs: {
                                  value: "NO",
                                  disabled: _vm.inputDisabled2
                                }
                              },
                              [_vm._v("NO")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NOAPLICA" } }, [
                              _vm._v("NO APLICA")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Discapacidad:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.caracData.discapacidad == ""
                                ? ""
                                : "is-valid",
                            model: {
                              value: _vm.caracData.discapacidad,
                              callback: function($$v) {
                                _vm.$set(_vm.caracData, "discapacidad", $$v)
                              },
                              expression: "caracData.discapacidad"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "FISICA" } }, [
                              _vm._v("FISICA")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "COGNITIVA" } }, [
                              _vm._v("COGNITIVA")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SENSORIAL" } }, [
                              _vm._v("SENSORIAL")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "PSÍQUICA" } }, [
                              _vm._v("PSÍQUICA")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NINGUNA" } }, [
                              _vm._v("NINGUNA")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Nivel Educativo:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.caracData.nivel_escolaridad == ""
                                ? ""
                                : "is-valid",
                            on: {
                              change: function($event) {
                                return _vm.mostrarOtro("mOCOL1")
                              }
                            },
                            model: {
                              value: _vm.caracData.nivel_escolaridad,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.caracData,
                                  "nivel_escolaridad",
                                  $$v
                                )
                              },
                              expression: "caracData.nivel_escolaridad"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.escolaridad_options, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.mOCOL1,
                            expression: "mOCOL1"
                          }
                        ],
                        staticClass: "col-lg-6"
                      },
                      [
                        _c("label", [_vm._v("Colegio:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            staticClass: "form-control kt-select2 selectBus",
                            class:
                              _vm.caracData.colegio == "" ? "" : "is-valid",
                            staticStyle: { width: "100%" },
                            model: {
                              value: _vm.caracData.colegio,
                              callback: function($$v) {
                                _vm.$set(_vm.caracData, "colegio", $$v)
                              },
                              expression: "caracData.colegio"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.colegio_options, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.mOCOL1,
                            expression: "mOCOL1"
                          }
                        ],
                        staticClass: "col-lg-3"
                      },
                      [
                        _c("label", [_vm._v("Grado:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: _vm.caracData.grado == "" ? "" : "is-valid",
                            model: {
                              value: _vm.caracData.grado,
                              callback: function($$v) {
                                _vm.$set(_vm.caracData, "grado", $$v)
                              },
                              expression: "caracData.grado"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Ninguno" } }, [
                              _vm._v("Ninguno")
                            ]),
                            _vm._v(" "),
                            _vm._l(
                              _vm.grados_option[
                                _vm.caracData.nivel_escolaridad
                              ],
                              function(item) {
                                return _c(
                                  "option",
                                  {
                                    key: item.value,
                                    domProps: { value: item.value }
                                  },
                                  [_vm._v(_vm._s(item.texto))]
                                )
                              }
                            )
                          ],
                          2
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c("div", { staticClass: "col-lg-12" }, [
                      _c("label", [_vm._v("Ocupación (*):")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.ocupacionAuxiliar,
                            expression: "ocupacionAuxiliar"
                          }
                        ],
                        ref: "ocupacion",
                        staticClass: "form-control text-capitalize",
                        class: _vm.ocupacionAuxiliar == "" ? "" : "is-valid",
                        attrs: {
                          type: "text",
                          placeholder: "Ocupaciones",
                          readonly: true
                        },
                        domProps: { value: _vm.ocupacionAuxiliar },
                        on: {
                          click: function($event) {
                            return _vm.abrirModalOcupaciones("jefe")
                          },
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.ocupacionAuxiliar = $event.target.value
                          }
                        }
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Etnia (*):")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            ref: "etnia",
                            class: _vm.caracData.etnia == "" ? "" : "is-valid",
                            on: {
                              change: function($event) {
                                return _vm.cambiarCombo("etnia")
                              }
                            },
                            model: {
                              value: _vm.caracData.etnia,
                              callback: function($$v) {
                                _vm.$set(_vm.caracData, "etnia", $$v)
                              },
                              expression: "caracData.etnia"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.etnia_options, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Clasificación de la Etnia (*):")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            ref: "clasificacion",
                            class:
                              _vm.caracData.clasificacion == ""
                                ? ""
                                : "is-valid",
                            model: {
                              value: _vm.caracData.clasificacion,
                              callback: function($$v) {
                                _vm.$set(_vm.caracData, "clasificacion", $$v)
                              },
                              expression: "caracData.clasificacion"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(
                              _vm.clasifi_options[_vm.caracData.etnia],
                              function(item) {
                                return _c(
                                  "option",
                                  {
                                    key: item.value,
                                    domProps: { value: item.value }
                                  },
                                  [_vm._v(_vm._s(item.texto))]
                                )
                              }
                            )
                          ],
                          2
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [
                          _vm._v("Perdida de peso en los ultimos 3 meses:")
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.caracData.perdida_peso == ""
                                ? ""
                                : "is-valid",
                            model: {
                              value: _vm.caracData.perdida_peso,
                              callback: function($$v) {
                                _vm.$set(_vm.caracData, "perdida_peso", $$v)
                              },
                              expression: "caracData.perdida_peso"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "ND" } }, [
                              _vm._v("NO DECLARA")
                            ])
                          ]
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Entiende Español:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.caracData.entiende == "" ? "" : "is-valid",
                            model: {
                              value: _vm.caracData.entiende,
                              callback: function($$v) {
                                _vm.$set(_vm.caracData, "entiende", $$v)
                              },
                              expression: "caracData.entiende"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("NO APLICA")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("PYP:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: _vm.caracData.pyp == "" ? "" : "is-valid",
                            model: {
                              value: _vm.caracData.pyp,
                              callback: function($$v) {
                                _vm.$set(_vm.caracData, "pyp", $$v)
                              },
                              expression: "caracData.pyp"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Crecimiento" } }, [
                              _vm._v("Crecimiento y Desarrollo")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Joven" } }, [
                              _vm._v("Joven")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Adulto" } }, [
                              _vm._v("Adulto Mayor")
                            ]),
                            _vm._v(" "),
                            _c(
                              "option",
                              { attrs: { value: "Planificacion" } },
                              [_vm._v("Planificación Familiar")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Control" } }, [
                              _vm._v("Control Prenatal")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Alimentacion" } }, [
                              _vm._v("Alimentación Escolar")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Ninguno" } }, [
                              _vm._v("Ninguno")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-2" },
                      [
                        _c("label", [_vm._v("Migrante:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.caracData.migrante == "" ? "" : "is-valid",
                            model: {
                              value: _vm.caracData.migrante,
                              callback: function($$v) {
                                _vm.$set(_vm.caracData, "migrante", $$v)
                              },
                              expression: "caracData.migrante"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-3" }, [
                      _c("label", [_vm._v("Salario (*):")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model.trim",
                            value: _vm.caracData.salario,
                            expression: "caracData.salario",
                            modifiers: { trim: true }
                          }
                        ],
                        ref: "salario",
                        staticClass: "form-control text-capitalize",
                        class: _vm.caracData.salario == "" ? "" : "is-valid",
                        attrs: { type: "text", placeholder: "Salario" },
                        domProps: { value: _vm.caracData.salario },
                        on: {
                          change: function($event) {
                            return _vm.formato("salario")
                          },
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.caracData,
                              "salario",
                              $event.target.value.trim()
                            )
                          },
                          blur: function($event) {
                            return _vm.$forceUpdate()
                          }
                        }
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [
                          _vm._v("Pertenece a algún programa del ICBF:")
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.caracData.programa_icbf == ""
                                ? ""
                                : "is-valid",
                            model: {
                              value: _vm.caracData.programa_icbf,
                              callback: function($$v) {
                                _vm.$set(_vm.caracData, "programa_icbf", $$v)
                              },
                              expression: "caracData.programa_icbf"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("NO APLICA")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Enfermedad Infecciosa:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.caracData.enfermedad_infecciosa == ""
                                ? ""
                                : "is-valid",
                            model: {
                              value: _vm.caracData.enfermedad_infecciosa,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.caracData,
                                  "enfermedad_infecciosa",
                                  $$v
                                )
                              },
                              expression: "caracData.enfermedad_infecciosa"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.enfinf_options, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Enfermedad Cronica:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.caracData.enfermedad_cronica == ""
                                ? ""
                                : "is-valid",
                            model: {
                              value: _vm.caracData.enfermedad_cronica,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.caracData,
                                  "enfermedad_cronica",
                                  $$v
                                )
                              },
                              expression: "caracData.enfermedad_cronica"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.enfcro_options, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c("div", { staticClass: "col-lg-2" }, [
                      _c("label", [_vm._v("Peso:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model.trim",
                            value: _vm.caracData.peso,
                            expression: "caracData.peso",
                            modifiers: { trim: true }
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: _vm.caracData.peso == "" ? "" : "is-valid",
                        attrs: { type: "text", placeholder: "Peso" },
                        domProps: { value: _vm.caracData.peso },
                        on: {
                          change: function($event) {
                            return _vm.formato("peso1")
                          },
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.caracData,
                              "peso",
                              $event.target.value.trim()
                            )
                          },
                          blur: function($event) {
                            return _vm.$forceUpdate()
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-2" }, [
                      _c("label", [_vm._v("Talla:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model.trim",
                            value: _vm.caracData.talla,
                            expression: "caracData.talla",
                            modifiers: { trim: true }
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: _vm.caracData.talla == "" ? "" : "is-valid",
                        attrs: { type: "text", placeholder: "Talla" },
                        domProps: { value: _vm.caracData.talla },
                        on: {
                          change: function($event) {
                            return _vm.formato("talla1")
                          },
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.caracData,
                              "talla",
                              $event.target.value.trim()
                            )
                          },
                          blur: function($event) {
                            return _vm.$forceUpdate()
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _vm.bandeGuaEdiJefe == true
                      ? _c("div", { staticClass: "col-lg-1" }, [
                          _c("br"),
                          _vm._v(" "),
                          _c("label", [_vm._v("      ")]),
                          _vm._v(" "),
                          _c(
                            "a",
                            {
                              staticClass: "btn btn-outline-info btn-icon",
                              attrs: {
                                href: "javascript:;",
                                "data-skin": "dark",
                                "data-toggle": "kt-tooltip",
                                "data-placement": "top",
                                title: "Agregar"
                              },
                              on: {
                                click: function($event) {
                                  $event.preventDefault()
                                  return _vm.agregarJefe($event)
                                }
                              }
                            },
                            [_c("i", { staticClass: "fa fa-plus" })]
                          ),
                          _vm._v(" \n              ")
                        ])
                      : _vm._e(),
                    _vm._v(" "),
                    _vm.bandeGuaEdiJefe == false
                      ? _c("div", { staticClass: "col-lg-1" }, [
                          _c("br"),
                          _vm._v(" "),
                          _c("label", [_vm._v("      ")]),
                          _vm._v(" "),
                          _c(
                            "a",
                            {
                              staticClass: "btn btn-outline-info btn-icon",
                              attrs: {
                                href: "javascript:;",
                                "data-skin": "dark",
                                "data-toggle": "kt-tooltip",
                                "data-placement": "top",
                                title: "Editar"
                              },
                              on: {
                                click: function($event) {
                                  $event.preventDefault()
                                  return _vm.editarJefe($event)
                                }
                              }
                            },
                            [_c("i", { staticClass: "fa fa-edit" })]
                          ),
                          _vm._v(" \n              ")
                        ])
                      : _vm._e(),
                    _vm._v(" "),
                    _vm.bandeGuaEdiJefe == false
                      ? _c("div", { staticClass: "col-lg-1" }, [
                          _c("br"),
                          _vm._v(" "),
                          _c("label", [_vm._v("      ")]),
                          _vm._v(" "),
                          _c(
                            "a",
                            {
                              staticClass: "btn btn-outline-danger btn-icon",
                              attrs: {
                                href: "javascript:;",
                                "data-skin": "dark",
                                "data-toggle": "kt-tooltip",
                                "data-placement": "top",
                                title: "Cancelar"
                              },
                              on: {
                                click: function($event) {
                                  $event.preventDefault()
                                  return _vm.CancelarEditarJefe($event)
                                }
                              }
                            },
                            [
                              _c("i", {
                                staticClass: "fa fa-external-link-alt"
                              })
                            ]
                          ),
                          _vm._v(" \n              ")
                        ])
                      : _vm._e()
                  ]),
                  _vm._v(" "),
                  _c("div", {
                    staticClass: "kt-separator kt-separator--border-dashed"
                  }),
                  _vm._v(" "),
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c("div", { staticClass: "table-responsive" }, [
                        _c(
                          "table",
                          { staticClass: "table table-sm table-hover" },
                          [
                            _vm._m(3),
                            _vm._v(" "),
                            _c(
                              "tbody",
                              _vm._l(_vm.datosJefe, function(item, index) {
                                return _c(
                                  "tr",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value: item.estado == "Activo",
                                        expression: "item.estado=='Activo'"
                                      }
                                    ],
                                    key: index
                                  },
                                  [
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle"
                                        }
                                      },
                                      [_vm._v(_vm._s(index + 1))]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model.trim",
                                              value: item.tipo_id,
                                              expression: "item.tipo_id",
                                              modifiers: { trim: true }
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.tipo_id == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "250px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Tipo Documento",
                                            readonly: ""
                                          },
                                          domProps: { value: item.tipo_id },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "tipo_id",
                                                $event.target.value.trim()
                                              )
                                            },
                                            blur: function($event) {
                                              return _vm.$forceUpdate()
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model.trim",
                                              value: item.identificacion,
                                              expression: "item.identificacion",
                                              modifiers: { trim: true }
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.identificacion == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Documento",
                                            readonly: ""
                                          },
                                          domProps: {
                                            value: item.identificacion
                                          },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "identificacion",
                                                $event.target.value.trim()
                                              )
                                            },
                                            blur: function($event) {
                                              return _vm.$forceUpdate()
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model.trim",
                                              value: item.pnom,
                                              expression: "item.pnom",
                                              modifiers: { trim: true }
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.pnom == "" ? "" : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Primer Nombre",
                                            readonly: ""
                                          },
                                          domProps: { value: item.pnom },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "pnom",
                                                $event.target.value.trim()
                                              )
                                            },
                                            blur: function($event) {
                                              return _vm.$forceUpdate()
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model.trim",
                                              value: item.snom,
                                              expression: "item.snom",
                                              modifiers: { trim: true }
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.snom == "" ? "" : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Segundo Nombre",
                                            readonly: ""
                                          },
                                          domProps: { value: item.snom },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "snom",
                                                $event.target.value.trim()
                                              )
                                            },
                                            blur: function($event) {
                                              return _vm.$forceUpdate()
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model.trim",
                                              value: item.pape,
                                              expression: "item.pape",
                                              modifiers: { trim: true }
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.pape == "" ? "" : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Primer Apellido",
                                            readonly: ""
                                          },
                                          domProps: { value: item.pape },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "pape",
                                                $event.target.value.trim()
                                              )
                                            },
                                            blur: function($event) {
                                              return _vm.$forceUpdate()
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model.trim",
                                              value: item.sape,
                                              expression: "item.sape",
                                              modifiers: { trim: true }
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.sape == "" ? "" : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Segundo Apellido",
                                            readonly: ""
                                          },
                                          domProps: { value: item.sape },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "sape",
                                                $event.target.value.trim()
                                              )
                                            },
                                            blur: function($event) {
                                              return _vm.$forceUpdate()
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model.trim",
                                              value: item.sexo,
                                              expression: "item.sexo",
                                              modifiers: { trim: true }
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.sexo == "" ? "" : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Sexo",
                                            readonly: ""
                                          },
                                          domProps: { value: item.sexo },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "sexo",
                                                $event.target.value.trim()
                                              )
                                            },
                                            blur: function($event) {
                                              return _vm.$forceUpdate()
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model.trim",
                                              value: item.orientacion,
                                              expression: "item.orientacion",
                                              modifiers: { trim: true }
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.orientacion == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Orientación",
                                            readonly: ""
                                          },
                                          domProps: { value: item.orientacion },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "orientacion",
                                                $event.target.value.trim()
                                              )
                                            },
                                            blur: function($event) {
                                              return _vm.$forceUpdate()
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model.trim",
                                              value: item.identidad_genero,
                                              expression:
                                                "item.identidad_genero",
                                              modifiers: { trim: true }
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.identidad_genero == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Identidad de Genero",
                                            readonly: ""
                                          },
                                          domProps: {
                                            value: item.identidad_genero
                                          },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "identidad_genero",
                                                $event.target.value.trim()
                                              )
                                            },
                                            blur: function($event) {
                                              return _vm.$forceUpdate()
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model.trim",
                                              value: item.textoParentesco,
                                              expression:
                                                "item.textoParentesco",
                                              modifiers: { trim: true }
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.textoParentesco == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Parentesco",
                                            readonly: ""
                                          },
                                          domProps: {
                                            value: item.textoParentesco
                                          },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "textoParentesco",
                                                $event.target.value.trim()
                                              )
                                            },
                                            blur: function($event) {
                                              return _vm.$forceUpdate()
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model.trim",
                                              value: item.telefono,
                                              expression: "item.telefono",
                                              modifiers: { trim: true }
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.telefono == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Telefono",
                                            readonly: ""
                                          },
                                          domProps: { value: item.telefono },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "telefono",
                                                $event.target.value.trim()
                                              )
                                            },
                                            blur: function($event) {
                                              return _vm.$forceUpdate()
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.textoEstado,
                                              expression: "item.textoEstado"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.textoEstado == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Estado Civil",
                                            readonly: ""
                                          },
                                          domProps: { value: item.textoEstado },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "textoEstado",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.fecha_nacimiento,
                                              expression:
                                                "item.fecha_nacimiento"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.fecha_nacimiento == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            id: "date",
                                            type: "date",
                                            placeholder: "Fecha de Nacimiento",
                                            max: _vm._f("moment")(_vm.hoy),
                                            readonly: ""
                                          },
                                          domProps: {
                                            value: item.fecha_nacimiento
                                          },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "fecha_nacimiento",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.edad,
                                              expression: "item.edad"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.edad == "" ? "" : "is-valid",
                                          staticStyle: { width: "100px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Edad",
                                            readonly: ""
                                          },
                                          domProps: { value: item.edad },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "edad",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model.trim",
                                              value: item.puntaje_sisben,
                                              expression: "item.puntaje_sisben",
                                              modifiers: { trim: true }
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.puntaje_sisben == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Puntaje Sisben",
                                            readonly: ""
                                          },
                                          domProps: {
                                            value: item.puntaje_sisben
                                          },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "puntaje_sisben",
                                                $event.target.value.trim()
                                              )
                                            },
                                            blur: function($event) {
                                              return _vm.$forceUpdate()
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.textoEps,
                                              expression: "item.textoEps"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.textoEps == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "400px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Eps",
                                            readonly: ""
                                          },
                                          domProps: { value: item.textoEps },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "textoEps",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model.trim",
                                              value: item.otra_eps,
                                              expression: "item.otra_eps",
                                              modifiers: { trim: true }
                                            },
                                            {
                                              name: "show",
                                              rawName: "v-show",
                                              value:
                                                item.afiliacion_entidad ==
                                                "OTRA",
                                              expression:
                                                "item.afiliacion_entidad=='OTRA'"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.otra_eps == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "400px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Cual",
                                            readonly: ""
                                          },
                                          domProps: { value: item.otra_eps },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "otra_eps",
                                                $event.target.value.trim()
                                              )
                                            },
                                            blur: function($event) {
                                              return _vm.$forceUpdate()
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.tipo_afiliacion,
                                              expression: "item.tipo_afiliacion"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.tipo_afiliacion == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Tipo de Afiliación",
                                            readonly: ""
                                          },
                                          domProps: {
                                            value: item.tipo_afiliacion
                                          },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "tipo_afiliacion",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.embarazo,
                                              expression: "item.embarazo"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.embarazo == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Embarazo",
                                            readonly: ""
                                          },
                                          domProps: { value: item.embarazo },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "embarazo",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.embarazo_multiple,
                                              expression:
                                                "item.embarazo_multiple"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.embarazo_multiple == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Embarazo Multiple",
                                            readonly: ""
                                          },
                                          domProps: {
                                            value: item.embarazo_multiple
                                          },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "embarazo_multiple",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.discapacidad,
                                              expression: "item.discapacidad"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.discapacidad == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Discapacidad",
                                            readonly: ""
                                          },
                                          domProps: {
                                            value: item.discapacidad
                                          },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "discapacidad",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.textoNivel,
                                              expression: "item.textoNivel"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.textoNivel == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Nivel de Escolaridad",
                                            readonly: ""
                                          },
                                          domProps: { value: item.textoNivel },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "textoNivel",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.textoOcupacion,
                                              expression: "item.textoOcupacion"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.textoOcupacion == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "400px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Ocupación",
                                            readonly: ""
                                          },
                                          domProps: {
                                            value: item.textoOcupacion
                                          },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "textoOcupacion",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.textoColegio,
                                              expression: "item.textoColegio"
                                            },
                                            {
                                              name: "show",
                                              rawName: "v-show",
                                              value:
                                                item.nivel_escolaridad == 3 ||
                                                item.nivel_escolaridad == 14 ||
                                                item.nivel_escolaridad == 15,
                                              expression:
                                                "item.nivel_escolaridad==3 || item.nivel_escolaridad==14 || item.nivel_escolaridad==15"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.textoColegio == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "300px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Colegio",
                                            readonly: ""
                                          },
                                          domProps: {
                                            value: item.textoColegio
                                          },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "textoColegio",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.grado,
                                              expression: "item.grado"
                                            },
                                            {
                                              name: "show",
                                              rawName: "v-show",
                                              value:
                                                item.nivel_escolaridad == 3 ||
                                                item.nivel_escolaridad == 14 ||
                                                item.nivel_escolaridad == 15,
                                              expression:
                                                "item.nivel_escolaridad==3 || item.nivel_escolaridad==14 || item.nivel_escolaridad==15"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.grado == "" ? "" : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Grado",
                                            readonly: ""
                                          },
                                          domProps: { value: item.grado },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "grado",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.textoEtnia,
                                              expression: "item.textoEtnia"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.textoEtnia == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Etnia",
                                            readonly: ""
                                          },
                                          domProps: { value: item.textoEtnia },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "textoEtnia",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.textoClasificacion,
                                              expression:
                                                "item.textoClasificacion"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.textoClasificacion == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Clasificación",
                                            readonly: ""
                                          },
                                          domProps: {
                                            value: item.textoClasificacion
                                          },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "textoClasificacion",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.perdida_peso,
                                              expression: "item.perdida_peso"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.perdida_peso == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Perdida de Peso",
                                            readonly: ""
                                          },
                                          domProps: {
                                            value: item.perdida_peso
                                          },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "perdida_peso",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.entiende,
                                              expression: "item.entiende"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.entiende == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Entiende Español",
                                            readonly: ""
                                          },
                                          domProps: { value: item.entiende },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "entiende",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.pyp,
                                              expression: "item.pyp"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.pyp == "" ? "" : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder:
                                              "Pertenece a algún Programa PYP",
                                            readonly: ""
                                          },
                                          domProps: { value: item.pyp },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "pyp",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.migrante,
                                              expression: "item.migrante"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.migrante == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Migrante",
                                            readonly: ""
                                          },
                                          domProps: { value: item.migrante },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "migrante",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model.trim",
                                              value: item.salario,
                                              expression: "item.salario",
                                              modifiers: { trim: true }
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.salario == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Salario",
                                            readonly: ""
                                          },
                                          domProps: { value: item.salario },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "salario",
                                                $event.target.value.trim()
                                              )
                                            },
                                            blur: function($event) {
                                              return _vm.$forceUpdate()
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.programa_icbf,
                                              expression: "item.programa_icbf"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.programa_icbf == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder:
                                              "Pertenece a algún programa del ICBF",
                                            readonly: ""
                                          },
                                          domProps: {
                                            value: item.programa_icbf
                                          },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "programa_icbf",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value:
                                                item.textoEnfermedad_infecciosa,
                                              expression:
                                                "item.textoEnfermedad_infecciosa"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.textoEnfermedad_infecciosa ==
                                            ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder:
                                              "Enfermedad Infecciosa",
                                            readonly: ""
                                          },
                                          domProps: {
                                            value:
                                              item.textoEnfermedad_infecciosa
                                          },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "textoEnfermedad_infecciosa",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value:
                                                item.textoEnfermedad_cronica,
                                              expression:
                                                "item.textoEnfermedad_cronica"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.textoEnfermedad_cronica == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Enfermedad Cronica",
                                            readonly: ""
                                          },
                                          domProps: {
                                            value: item.textoEnfermedad_cronica
                                          },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "textoEnfermedad_cronica",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.peso,
                                              expression: "item.peso"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.peso == "" ? "" : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Peso",
                                            readonly: ""
                                          },
                                          domProps: { value: item.peso },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "peso",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.talla,
                                              expression: "item.talla"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.talla == "" ? "" : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Talla",
                                            readonly: ""
                                          },
                                          domProps: { value: item.talla },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "talla",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "text-align": "center",
                                          "vertical-align": "middle"
                                        }
                                      },
                                      [
                                        _vm.GIDEN == false
                                          ? _c(
                                              "div",
                                              {
                                                staticStyle: { width: "70px" }
                                              },
                                              [
                                                _c(
                                                  "button",
                                                  {
                                                    staticClass:
                                                      "btn btn-icon btn-sm btn-outline-danger",
                                                    attrs: {
                                                      type: "button",
                                                      title: "Eliminar"
                                                    },
                                                    on: {
                                                      click: function($event) {
                                                        return _vm.eliminarItemJefe(
                                                          index,
                                                          item
                                                        )
                                                      }
                                                    }
                                                  },
                                                  [
                                                    _c("i", {
                                                      staticClass: "fa fa-trash"
                                                    })
                                                  ]
                                                ),
                                                _vm._v(" "),
                                                _c(
                                                  "button",
                                                  {
                                                    staticClass:
                                                      "btn btn-icon btn-sm btn-outline-warning",
                                                    attrs: {
                                                      type: "button",
                                                      title: "Editar"
                                                    },
                                                    on: {
                                                      click: function($event) {
                                                        return _vm.editarItemJefe(
                                                          index,
                                                          item
                                                        )
                                                      }
                                                    }
                                                  },
                                                  [
                                                    _c("i", {
                                                      staticClass: "fa fa-edit"
                                                    })
                                                  ]
                                                )
                                              ]
                                            )
                                          : _vm._e()
                                      ]
                                    )
                                  ]
                                )
                              }),
                              0
                            )
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", {
                          staticClass:
                            "kt-separator kt-separator--border-dashed"
                        })
                      ])
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", {
                    staticClass: "kt-separator kt-separator--border-dashed"
                  }),
                  _vm._v(" "),
                  _vm._m(4),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Tipo de Documento:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: _vm.CA1.tipo_id == "0" ? "" : "is-valid",
                            on: {
                              change: function($event) {
                                return _vm.formato("tipoid2")
                              }
                            },
                            model: {
                              value: _vm.CA1.tipo_id,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "tipo_id", $$v)
                              },
                              expression: "CA1.tipo_id"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "CC" } }, [
                              _vm._v("CEDULA DE CIUDADANIA")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "PA" } }, [
                              _vm._v("PASAPORTE")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "RC" } }, [
                              _vm._v("REGISTRO CIVIL")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "TI" } }, [
                              _vm._v("TARJETA DE IDENTIDAD")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "ASI" } }, [
                              _vm._v("ADULTO SIN IDENTIFICACIÓN")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "MSI" } }, [
                              _vm._v("MENOR SIN IDENTIFICACIÓN")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "CE" } }, [
                              _vm._v("CEDULA DE EXTRANJERIA")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-4" }, [
                      _c("label", [_vm._v("Documento:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.CA1.identificacion,
                            expression: "CA1.identificacion"
                          }
                        ],
                        ref: "identificacionInte",
                        staticClass: "form-control text-capitalize",
                        class: _vm.CA1.identificacion == "" ? "" : "is-valid",
                        attrs: { type: "text", placeholder: "Documento" },
                        domProps: { value: _vm.CA1.identificacion },
                        on: {
                          change: function($event) {
                            return _vm.formato("id2")
                          },
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.CA1,
                              "identificacion",
                              $event.target.value
                            )
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Parentesco:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: _vm.CA1.parentesco == "0" ? "" : "is-valid",
                            model: {
                              value: _vm.CA1.parentesco,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "parentesco", $$v)
                              },
                              expression: "CA1.parentesco"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.parentesco_options, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Sexo:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: _vm.CA1.sexo == "0" ? "" : "is-valid",
                            model: {
                              value: _vm.CA1.sexo,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "sexo", $$v)
                              },
                              expression: "CA1.sexo"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "MASCULINO" } }, [
                              _vm._v("MASCULINO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "FEMENINO" } }, [
                              _vm._v("FEMENINO")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Orientación Sexual (*):")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            ref: "sexo",
                            class: _vm.CA1.orientacion == "0" ? "" : "is-valid",
                            model: {
                              value: _vm.CA1.orientacion,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.CA1,
                                  "orientacion",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "CA1.orientacion"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "HETEROSEXUAL" } }, [
                              _vm._v("HETEROSEXUAL")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "HOMOSEXUAL" } }, [
                              _vm._v("HOMOSEXUAL")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "BISEXUAL" } }, [
                              _vm._v("BISEXUAL")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NODECLARA" } }, [
                              _vm._v("NO DECLARA")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("NO APLICA")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Identidad de Genero (*):")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.CA1.identidad_genero == "0" ? "" : "is-valid",
                            model: {
                              value: _vm.CA1.identidad_genero,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.CA1,
                                  "identidad_genero",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "CA1.identidad_genero"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "CISGENERO" } }, [
                              _vm._v("CISGENERO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "TRANSGENERO" } }, [
                              _vm._v("TRANSGENERO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "TRANSEXUAL" } }, [
                              _vm._v("TRANSEXUAL")
                            ]),
                            _vm._v(" "),
                            _c(
                              "option",
                              {
                                attrs: { value: "TERCER GENERO Ó NO BINARIOS" }
                              },
                              [_vm._v("TERCER GENERO Ó NO BINARIOS")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("NO APLICA")
                            ])
                          ]
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c("div", { staticClass: "col-lg-3" }, [
                      _c("label", [_vm._v("Primer Nombre:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.CA1.pnom,
                            expression: "CA1.pnom"
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: _vm.CA1.pnom == "" ? "" : "is-valid",
                        attrs: { type: "text", placeholder: "Primer Nombre" },
                        domProps: { value: _vm.CA1.pnom },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(_vm.CA1, "pnom", $event.target.value)
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-3" }, [
                      _c("label", [_vm._v("Segundo Nombre:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.CA1.snom,
                            expression: "CA1.snom"
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: _vm.CA1.snom == "" ? "" : "is-valid",
                        attrs: { type: "text", placeholder: "Segundo Nombre" },
                        domProps: { value: _vm.CA1.snom },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(_vm.CA1, "snom", $event.target.value)
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-3" }, [
                      _c("label", [_vm._v("Primer Apellido:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.CA1.pape,
                            expression: "CA1.pape"
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: _vm.CA1.pape == "" ? "" : "is-valid",
                        attrs: { type: "text", placeholder: "Primer Apellido" },
                        domProps: { value: _vm.CA1.pape },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(_vm.CA1, "pape", $event.target.value)
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-3" }, [
                      _c("label", [_vm._v("Segundo Apellido:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.CA1.sape,
                            expression: "CA1.sape"
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: _vm.CA1.sape == "" ? "" : "is-valid",
                        attrs: {
                          type: "text",
                          placeholder: "Segundo Apellido"
                        },
                        domProps: { value: _vm.CA1.sape },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(_vm.CA1, "sape", $event.target.value)
                          }
                        }
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c("div", { staticClass: "col-lg-3" }, [
                      _c("label", [_vm._v("Telefono:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model.trim",
                            value: _vm.CA1.telefono,
                            expression: "CA1.telefono",
                            modifiers: { trim: true }
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: _vm.CA1.telefono == "" ? "" : "is-valid",
                        attrs: { type: "text", placeholder: "Telefono" },
                        domProps: { value: _vm.CA1.telefono },
                        on: {
                          change: function($event) {
                            return _vm.formato("telefono2")
                          },
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.CA1,
                              "telefono",
                              $event.target.value.trim()
                            )
                          },
                          blur: function($event) {
                            return _vm.$forceUpdate()
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Estado Civil:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.CA1.estado_civil == "0" ? "" : "is-valid",
                            model: {
                              value: _vm.CA1.estado_civil,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "estado_civil", $$v)
                              },
                              expression: "CA1.estado_civil"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.estado_options, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-3" }, [
                      _c("label", [_vm._v("Puntaje Sisben:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model.trim",
                            value: _vm.CA1.puntaje_sisben,
                            expression: "CA1.puntaje_sisben",
                            modifiers: { trim: true }
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: _vm.CA1.puntaje_sisben == "" ? "" : "is-valid",
                        attrs: { type: "text" },
                        domProps: { value: _vm.CA1.puntaje_sisben },
                        on: {
                          change: function($event) {
                            return _vm.formato("puntaje")
                          },
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.CA1,
                              "puntaje_sisben",
                              $event.target.value.trim()
                            )
                          },
                          blur: function($event) {
                            return _vm.$forceUpdate()
                          }
                        }
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c("div", { staticClass: "col-lg-3" }, [
                      _c("label", [_vm._v("Fecha de Nacimiento:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.CA1.fecha_nac,
                            expression: "CA1.fecha_nac"
                          }
                        ],
                        ref: "fecha_nacimiento",
                        staticClass: "form-control text-capitalize",
                        class: _vm.CA1.fecha_nac == "" ? "" : "is-valid",
                        attrs: {
                          id: "date",
                          type: "date",
                          placeholder: "Fecha de Nacimiento",
                          max: _vm._f("moment")(_vm.hoy)
                        },
                        domProps: { value: _vm.CA1.fecha_nac },
                        on: {
                          change: _vm.calculaEdad,
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(_vm.CA1, "fecha_nac", $event.target.value)
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-2" }, [
                      _c("label", [_vm._v("Edad:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.calEdad,
                            expression: "calEdad"
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: _vm.CA1.edad == "" ? "" : "is-valid",
                        attrs: {
                          type: "text",
                          placeholder: "Edad",
                          readonly: ""
                        },
                        domProps: { value: _vm.calEdad },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.calEdad = $event.target.value
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-2" }, [
                      _c("label", [_vm._v("Meses:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.CA1.meses,
                            expression: "CA1.meses"
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: _vm.CA1.meses == "" ? "" : "is-valid",
                        attrs: {
                          type: "text",
                          placeholder: "Edad",
                          readonly: ""
                        },
                        domProps: { value: _vm.CA1.meses },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(_vm.CA1, "meses", $event.target.value)
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-2" }, [
                      _c("label", [_vm._v("Dias:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.CA1.dias,
                            expression: "CA1.dias"
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: _vm.CA1.dias == "" ? "" : "is-valid",
                        attrs: {
                          type: "text",
                          placeholder: "Edad",
                          readonly: ""
                        },
                        domProps: { value: _vm.CA1.dias },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(_vm.CA1, "dias", $event.target.value)
                          }
                        }
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-8" },
                      [
                        _c("label", [_vm._v("EPS:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: _vm.CA1.afi_entidad == "0" ? "" : "is-valid",
                            on: {
                              change: function($event) {
                                return _vm.mostrarOtro("OEPS2")
                              }
                            },
                            model: {
                              value: _vm.CA1.afi_entidad,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "afi_entidad", $$v)
                              },
                              expression: "CA1.afi_entidad"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NINGUNA" } }, [
                              _vm._v("NINGUNA")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "OTRA" } }, [
                              _vm._v("OTRA")
                            ]),
                            _vm._v(" "),
                            _vm._l(_vm.admini_options, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-2" },
                      [
                        _c("label", [_vm._v("Tipo Afiliación:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.CA1.tipo_afiliacion == "0" ? "" : "is-valid",
                            model: {
                              value: _vm.CA1.tipo_afiliacion,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "tipo_afiliacion", $$v)
                              },
                              expression: "CA1.tipo_afiliacion"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SUBSIDIADO" } }, [
                              _vm._v("SUBSIDIADO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "CONTRIBUTIVO" } }, [
                              _vm._v("CONTRIBUTIVO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "ESPECIAL" } }, [
                              _vm._v("ESPECIAL")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "PPNA" } }, [
                              _vm._v("POBLACIÓN POBRE NO ASEGURADA")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "BENEFICIARIO" } }, [
                              _vm._v("BENEFICIARIO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "ND" } }, [
                              _vm._v("NO DECLARA")
                            ])
                          ]
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.mOEPS2,
                            expression: "mOEPS2"
                          }
                        ],
                        staticClass: "col-lg-12"
                      },
                      [
                        _c("label", [_vm._v("Cual:")]),
                        _vm._v(" "),
                        _c("input", {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model.trim",
                              value: _vm.CA1.otra_eps,
                              expression: "CA1.otra_eps",
                              modifiers: { trim: true }
                            }
                          ],
                          staticClass: "form-control text-capitalize",
                          class: _vm.CA1.otra_eps == "" ? "" : "is-valid",
                          attrs: { type: "text", placeholder: "Cual" },
                          domProps: { value: _vm.CA1.otra_eps },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.$set(
                                _vm.CA1,
                                "otra_eps",
                                $event.target.value.trim()
                              )
                            },
                            blur: function($event) {
                              return _vm.$forceUpdate()
                            }
                          }
                        })
                      ]
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Embarazo:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: _vm.CA1.embarazo == "0" ? "" : "is-valid",
                            model: {
                              value: _vm.CA1.embarazo,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "embarazo", $$v)
                              },
                              expression: "CA1.embarazo"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c(
                              "option",
                              {
                                attrs: {
                                  value: "SI",
                                  disabled: _vm.inputDisabled
                                }
                              },
                              [_vm._v("SI")]
                            ),
                            _vm._v(" "),
                            _c(
                              "option",
                              {
                                attrs: {
                                  value: "NO",
                                  disabled: _vm.inputDisabled
                                }
                              },
                              [_vm._v("NO")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NOAPLICA" } }, [
                              _vm._v("NO APLICA")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Embarazo Multiple:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.CA1.embarazo_multiple == "0"
                                ? ""
                                : "is-valid",
                            model: {
                              value: _vm.CA1.embarazo_multiple,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "embarazo_multiple", $$v)
                              },
                              expression: "CA1.embarazo_multiple"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c(
                              "option",
                              {
                                attrs: {
                                  value: "SI",
                                  disabled: _vm.inputDisabled
                                }
                              },
                              [_vm._v("SI")]
                            ),
                            _vm._v(" "),
                            _c(
                              "option",
                              {
                                attrs: {
                                  value: "NO",
                                  disabled: _vm.inputDisabled
                                }
                              },
                              [_vm._v("NO")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NOAPLICA" } }, [
                              _vm._v("NO APLICA")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Discapacidad:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.CA1.discapacidad == "0" ? "" : "is-valid",
                            model: {
                              value: _vm.CA1.discapacidad,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "discapacidad", $$v)
                              },
                              expression: "CA1.discapacidad"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "FISICA" } }, [
                              _vm._v("FISICA")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "COGNITIVA" } }, [
                              _vm._v("COGNITIVA")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SENSORIAL" } }, [
                              _vm._v("SENSORIAL")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "PSÍQUICA" } }, [
                              _vm._v("PSÍQUICA")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NINGUNA" } }, [
                              _vm._v("NINGUNA")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Nivel Educativo:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: _vm.CA1.escolaridad == "0" ? "" : "is-valid",
                            on: {
                              change: function($event) {
                                return _vm.mostrarOtro("mOCOL2")
                              }
                            },
                            model: {
                              value: _vm.CA1.escolaridad,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "escolaridad", $$v)
                              },
                              expression: "CA1.escolaridad"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.escolaridad_options, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.mOCOL2,
                            expression: "mOCOL2"
                          }
                        ],
                        staticClass: "col-lg-6"
                      },
                      [
                        _c("label", [_vm._v("Colegio:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: _vm.CA1.colegio == "" ? "" : "is-valid",
                            model: {
                              value: _vm.CA1.colegio,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "colegio", $$v)
                              },
                              expression: "CA1.colegio"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.colegio_options, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.mOCOL2,
                            expression: "mOCOL2"
                          }
                        ],
                        staticClass: "col-lg-3"
                      },
                      [
                        _c("label", [_vm._v("Grado:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: _vm.CA1.grado == "0" ? "" : "is-valid",
                            model: {
                              value: _vm.CA1.grado,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "grado", $$v)
                              },
                              expression: "CA1.grado"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _vm._l(
                              _vm.grados_option[_vm.CA1.escolaridad],
                              function(item) {
                                return _c(
                                  "option",
                                  {
                                    key: item.value,
                                    domProps: { value: item.value }
                                  },
                                  [_vm._v(_vm._s(item.texto))]
                                )
                              }
                            )
                          ],
                          2
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c("div", { staticClass: "col-lg-12" }, [
                      _c("label", [_vm._v("Ocupación:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.ocupacionAuxiliar2,
                            expression: "ocupacionAuxiliar2"
                          }
                        ],
                        ref: "ocupacion",
                        staticClass: "form-control text-capitalize",
                        class: _vm.ocupacionAuxiliar2 == "" ? "" : "is-valid",
                        attrs: {
                          type: "text",
                          placeholder: "Ocupaciones",
                          readonly: true
                        },
                        domProps: { value: _vm.ocupacionAuxiliar2 },
                        on: {
                          click: function($event) {
                            return _vm.abrirModalOcupaciones("inte")
                          },
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.ocupacionAuxiliar2 = $event.target.value
                          }
                        }
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Etnia:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: _vm.CA1.etnia == "0" ? "" : "is-valid",
                            on: {
                              change: function($event) {
                                return _vm.cambiarCombo("etnia")
                              }
                            },
                            model: {
                              value: _vm.CA1.etnia,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "etnia", $$v)
                              },
                              expression: "CA1.etnia"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.etnia_options, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Clasificación de la Etnia:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.CA1.clasificacion == "0" ? "" : "is-valid",
                            model: {
                              value: _vm.CA1.clasificacion,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "clasificacion", $$v)
                              },
                              expression: "CA1.clasificacion"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.clasifi_options[_vm.CA1.etnia], function(
                              item
                            ) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [
                          _vm._v("Perdida de peso en los ultimos 3 meses:")
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.CA1.perdida_peso == "0" ? "" : "is-valid",
                            model: {
                              value: _vm.CA1.perdida_peso,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "perdida_peso", $$v)
                              },
                              expression: "CA1.perdida_peso"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "ND" } }, [
                              _vm._v("NO DECLARA")
                            ])
                          ]
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Entiende Español:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: _vm.CA1.entiende == "0" ? "" : "is-valid",
                            model: {
                              value: _vm.CA1.entiende,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "entiende", $$v)
                              },
                              expression: "CA1.entiende"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("NO APLICA")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("PYP:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: _vm.CA1.pyp == "0" ? "" : "is-valid",
                            model: {
                              value: _vm.CA1.pyp,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "pyp", $$v)
                              },
                              expression: "CA1.pyp"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Crecimiento" } }, [
                              _vm._v("Crecimiento y Desarrollo")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Joven" } }, [
                              _vm._v("Joven")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Adulto" } }, [
                              _vm._v("Adulto Mayor")
                            ]),
                            _vm._v(" "),
                            _c(
                              "option",
                              { attrs: { value: "Planificacion" } },
                              [_vm._v("Planificación Familiar")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Control" } }, [
                              _vm._v("Control Prenatal")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Alimentacion" } }, [
                              _vm._v("Alimentación Escolar")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "Ninguno" } }, [
                              _vm._v("Ninguno")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Migrante:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: _vm.CA1.migrante == "0" ? "" : "is-valid",
                            model: {
                              value: _vm.CA1.migrante,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "migrante", $$v)
                              },
                              expression: "CA1.migrante"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [
                          _vm._v("Pertenece a algún programa del ICBF:")
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.CA1.programa_icbf == "0" ? "" : "is-valid",
                            model: {
                              value: _vm.CA1.programa_icbf,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "programa_icbf", $$v)
                              },
                              expression: "CA1.programa_icbf"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("NO APLICA")
                            ])
                          ]
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-12" },
                      [
                        _c("label", [_vm._v("Jefe del hogar:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: _vm.CA1.jefe == "0" ? "" : "is-valid",
                            model: {
                              value: _vm.CA1.jefe,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "jefe", $$v)
                              },
                              expression: "CA1.jefe"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.datosJefe, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.identificacion }
                                },
                                [
                                  _vm._v(
                                    _vm._s(item.pnom.toUpperCase()) +
                                      " " +
                                      _vm._s(item.snom.toUpperCase()) +
                                      " " +
                                      _vm._s(item.pape.toUpperCase()) +
                                      " " +
                                      _vm._s(item.sape.toUpperCase())
                                  )
                                ]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Excepciones:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: _vm.CA1.excepciones == "0" ? "" : "is-valid",
                            model: {
                              value: _vm.CA1.excepciones,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "excepciones", $$v)
                              },
                              expression: "CA1.excepciones"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.opciones7, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Enfermedad Infecciosa:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.CA1.enfermedad_infecciosa == "0"
                                ? ""
                                : "is-valid",
                            model: {
                              value: _vm.CA1.enfermedad_infecciosa,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "enfermedad_infecciosa", $$v)
                              },
                              expression: "CA1.enfermedad_infecciosa"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.enfinf_options, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Enfermedad Cronica:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.CA1.enfermedad_cronica == "0"
                                ? ""
                                : "is-valid",
                            model: {
                              value: _vm.CA1.enfermedad_cronica,
                              callback: function($$v) {
                                _vm.$set(_vm.CA1, "enfermedad_cronica", $$v)
                              },
                              expression: "CA1.enfermedad_cronica"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.enfcro_options, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c("div", { staticClass: "col-lg-2" }, [
                      _c("label", [_vm._v("Peso:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model.trim",
                            value: _vm.CA1.peso,
                            expression: "CA1.peso",
                            modifiers: { trim: true }
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: _vm.CA1.peso == "" ? "" : "is-valid",
                        attrs: { type: "text", placeholder: "Peso" },
                        domProps: { value: _vm.CA1.peso },
                        on: {
                          change: function($event) {
                            return _vm.formato("peso2")
                          },
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.CA1,
                              "peso",
                              $event.target.value.trim()
                            )
                          },
                          blur: function($event) {
                            return _vm.$forceUpdate()
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-2" }, [
                      _c("label", [_vm._v("Talla:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model.trim",
                            value: _vm.CA1.talla,
                            expression: "CA1.talla",
                            modifiers: { trim: true }
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: _vm.CA1.talla == "" ? "" : "is-valid",
                        attrs: { type: "text", placeholder: "Talla" },
                        domProps: { value: _vm.CA1.talla },
                        on: {
                          change: function($event) {
                            return _vm.formato("talla2")
                          },
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.CA1,
                              "talla",
                              $event.target.value.trim()
                            )
                          },
                          blur: function($event) {
                            return _vm.$forceUpdate()
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _vm.bandeGuaEdiInte == true
                      ? _c("div", { staticClass: "col-lg-1" }, [
                          _c("br"),
                          _vm._v(" "),
                          _c("label", [_vm._v("      ")]),
                          _vm._v(" "),
                          _c(
                            "a",
                            {
                              staticClass: "btn btn-outline-info btn-icon",
                              attrs: {
                                href: "javascript:;",
                                "data-skin": "dark",
                                "data-toggle": "kt-tooltip",
                                "data-placement": "top",
                                title: "Agregar"
                              },
                              on: {
                                click: function($event) {
                                  $event.preventDefault()
                                  return _vm.agregar($event)
                                }
                              }
                            },
                            [_c("i", { staticClass: "fa fa-plus" })]
                          ),
                          _vm._v(" \n              ")
                        ])
                      : _vm._e(),
                    _vm._v(" "),
                    _vm.bandeGuaEdiInte == false
                      ? _c("div", { staticClass: "col-lg-1" }, [
                          _c("br"),
                          _vm._v(" "),
                          _c("label", [_vm._v("      ")]),
                          _vm._v(" "),
                          _c(
                            "a",
                            {
                              staticClass: "btn btn-outline-info btn-icon",
                              attrs: {
                                href: "javascript:;",
                                "data-skin": "dark",
                                "data-toggle": "kt-tooltip",
                                "data-placement": "top",
                                title: "Editar"
                              },
                              on: {
                                click: function($event) {
                                  $event.preventDefault()
                                  return _vm.editarInte($event)
                                }
                              }
                            },
                            [_c("i", { staticClass: "fa fa-edit" })]
                          ),
                          _vm._v(" \n              ")
                        ])
                      : _vm._e(),
                    _vm._v(" "),
                    _vm.bandeGuaEdiInte == false
                      ? _c("div", { staticClass: "col-lg-1" }, [
                          _c("br"),
                          _vm._v(" "),
                          _c("label", [_vm._v("      ")]),
                          _vm._v(" "),
                          _c(
                            "a",
                            {
                              staticClass: "btn btn-outline-danger btn-icon",
                              attrs: {
                                href: "javascript:;",
                                "data-skin": "dark",
                                "data-toggle": "kt-tooltip",
                                "data-placement": "top",
                                title: "Cancelar"
                              },
                              on: {
                                click: function($event) {
                                  $event.preventDefault()
                                  return _vm.CancelarEditarInte($event)
                                }
                              }
                            },
                            [
                              _c("i", {
                                staticClass: "fa fa-external-link-alt"
                              })
                            ]
                          ),
                          _vm._v(" \n              ")
                        ])
                      : _vm._e()
                  ]),
                  _vm._v(" "),
                  _c("div", {
                    staticClass: "kt-separator kt-separator--border-dashed"
                  }),
                  _vm._v(" "),
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c("div", { staticClass: "table-responsive" }, [
                        _c(
                          "table",
                          { staticClass: "table table-sm table-hover" },
                          [
                            _vm._m(5),
                            _vm._v(" "),
                            _c(
                              "tbody",
                              _vm._l(_vm.datos, function(item, index) {
                                return _c(
                                  "tr",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value: item.estado == "Activo",
                                        expression: "item.estado=='Activo'"
                                      }
                                    ],
                                    key: index
                                  },
                                  [
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle"
                                        }
                                      },
                                      [_vm._v(_vm._s(index + 1))]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model.trim",
                                              value: item.tipo_id,
                                              expression: "item.tipo_id",
                                              modifiers: { trim: true }
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.tipo_id == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "250px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Tipo de Documento",
                                            readonly: ""
                                          },
                                          domProps: { value: item.tipo_id },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "tipo_id",
                                                $event.target.value.trim()
                                              )
                                            },
                                            blur: function($event) {
                                              return _vm.$forceUpdate()
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model.trim",
                                              value: item.identificacion,
                                              expression: "item.identificacion",
                                              modifiers: { trim: true }
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.identificacion == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Documento",
                                            readonly: ""
                                          },
                                          domProps: {
                                            value: item.identificacion
                                          },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "identificacion",
                                                $event.target.value.trim()
                                              )
                                            },
                                            blur: function($event) {
                                              return _vm.$forceUpdate()
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model.trim",
                                              value: item.pnom,
                                              expression: "item.pnom",
                                              modifiers: { trim: true }
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.pnom == "" ? "" : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Primer Nombre",
                                            readonly: ""
                                          },
                                          domProps: { value: item.pnom },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "pnom",
                                                $event.target.value.trim()
                                              )
                                            },
                                            blur: function($event) {
                                              return _vm.$forceUpdate()
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model.trim",
                                              value: item.snom,
                                              expression: "item.snom",
                                              modifiers: { trim: true }
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.snom == "" ? "" : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Segundo Nombre",
                                            readonly: ""
                                          },
                                          domProps: { value: item.snom },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "snom",
                                                $event.target.value.trim()
                                              )
                                            },
                                            blur: function($event) {
                                              return _vm.$forceUpdate()
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model.trim",
                                              value: item.pape,
                                              expression: "item.pape",
                                              modifiers: { trim: true }
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.pape == "" ? "" : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Primer Apellido",
                                            readonly: ""
                                          },
                                          domProps: { value: item.pape },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "pape",
                                                $event.target.value.trim()
                                              )
                                            },
                                            blur: function($event) {
                                              return _vm.$forceUpdate()
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model.trim",
                                              value: item.sape,
                                              expression: "item.sape",
                                              modifiers: { trim: true }
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.sape == "" ? "" : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Segundo Apellido",
                                            readonly: ""
                                          },
                                          domProps: { value: item.sape },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "sape",
                                                $event.target.value.trim()
                                              )
                                            },
                                            blur: function($event) {
                                              return _vm.$forceUpdate()
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model.trim",
                                              value: item.sexo,
                                              expression: "item.sexo",
                                              modifiers: { trim: true }
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.sexo == "" ? "" : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Sexo",
                                            readonly: ""
                                          },
                                          domProps: { value: item.sexo },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "sexo",
                                                $event.target.value.trim()
                                              )
                                            },
                                            blur: function($event) {
                                              return _vm.$forceUpdate()
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model.trim",
                                              value: item.orientacion,
                                              expression: "item.orientacion",
                                              modifiers: { trim: true }
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.orientacion == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Orientación",
                                            readonly: ""
                                          },
                                          domProps: { value: item.orientacion },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "orientacion",
                                                $event.target.value.trim()
                                              )
                                            },
                                            blur: function($event) {
                                              return _vm.$forceUpdate()
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model.trim",
                                              value: item.identidad_genero,
                                              expression:
                                                "item.identidad_genero",
                                              modifiers: { trim: true }
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.identidad_genero == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Identidad de Genero",
                                            readonly: ""
                                          },
                                          domProps: {
                                            value: item.identidad_genero
                                          },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "identidad_genero",
                                                $event.target.value.trim()
                                              )
                                            },
                                            blur: function($event) {
                                              return _vm.$forceUpdate()
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model.trim",
                                              value: item.textoParentesco,
                                              expression:
                                                "item.textoParentesco",
                                              modifiers: { trim: true }
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.textoParentesco == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Parentesco",
                                            readonly: ""
                                          },
                                          domProps: {
                                            value: item.textoParentesco
                                          },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "textoParentesco",
                                                $event.target.value.trim()
                                              )
                                            },
                                            blur: function($event) {
                                              return _vm.$forceUpdate()
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model.trim",
                                              value: item.telefono,
                                              expression: "item.telefono",
                                              modifiers: { trim: true }
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.telefono == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Telefono",
                                            readonly: ""
                                          },
                                          domProps: { value: item.telefono },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "telefono",
                                                $event.target.value.trim()
                                              )
                                            },
                                            blur: function($event) {
                                              return _vm.$forceUpdate()
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.textoEstado,
                                              expression: "item.textoEstado"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.textoEstado == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Estado Civil",
                                            readonly: ""
                                          },
                                          domProps: { value: item.textoEstado },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "textoEstado",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.fecha_nac,
                                              expression: "item.fecha_nac"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.fecha_nac == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            id: "date",
                                            type: "date",
                                            placeholder: "Fecha de Nacimiento",
                                            max: _vm._f("moment")(_vm.hoy),
                                            readonly: ""
                                          },
                                          domProps: { value: item.fecha_nac },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "fecha_nac",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.edad,
                                              expression: "item.edad"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.edad == "" ? "" : "is-valid",
                                          staticStyle: { width: "100px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Edad",
                                            readonly: ""
                                          },
                                          domProps: { value: item.edad },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "edad",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model.trim",
                                              value: item.puntaje_sisben,
                                              expression: "item.puntaje_sisben",
                                              modifiers: { trim: true }
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.puntaje_sisben == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Puntaje Sisben",
                                            readonly: ""
                                          },
                                          domProps: {
                                            value: item.puntaje_sisben
                                          },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "puntaje_sisben",
                                                $event.target.value.trim()
                                              )
                                            },
                                            blur: function($event) {
                                              return _vm.$forceUpdate()
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.textoEps,
                                              expression: "item.textoEps"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.textoEps == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "400px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Eps",
                                            readonly: ""
                                          },
                                          domProps: { value: item.textoEps },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "textoEps",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model.trim",
                                              value: item.otra_eps,
                                              expression: "item.otra_eps",
                                              modifiers: { trim: true }
                                            },
                                            {
                                              name: "show",
                                              rawName: "v-show",
                                              value: item.afi_entidad == "OTRA",
                                              expression:
                                                "item.afi_entidad=='OTRA'"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.otra_eps == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "400px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Cual",
                                            readonly: ""
                                          },
                                          domProps: { value: item.otra_eps },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "otra_eps",
                                                $event.target.value.trim()
                                              )
                                            },
                                            blur: function($event) {
                                              return _vm.$forceUpdate()
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.tipo_afiliacion,
                                              expression: "item.tipo_afiliacion"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.tipo_afiliacion == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Afiliación",
                                            readonly: ""
                                          },
                                          domProps: {
                                            value: item.tipo_afiliacion
                                          },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "tipo_afiliacion",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.embarazo,
                                              expression: "item.embarazo"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.embarazo == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Embarazo",
                                            readonly: ""
                                          },
                                          domProps: { value: item.embarazo },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "embarazo",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.embarazo_multiple,
                                              expression:
                                                "item.embarazo_multiple"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.embarazo_multiple == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Embarazo Multiple",
                                            readonly: ""
                                          },
                                          domProps: {
                                            value: item.embarazo_multiple
                                          },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "embarazo_multiple",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.discapacidad,
                                              expression: "item.discapacidad"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.discapacidad == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Discapacidad",
                                            readonly: ""
                                          },
                                          domProps: {
                                            value: item.discapacidad
                                          },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "discapacidad",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.textoEscolaridad,
                                              expression:
                                                "item.textoEscolaridad"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.textoEscolaridad == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Nivel Educativo",
                                            readonly: ""
                                          },
                                          domProps: {
                                            value: item.textoEscolaridad
                                          },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "textoEscolaridad",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.textoOcupacion,
                                              expression: "item.textoOcupacion"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.textoOcupacion == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "400px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Ocupación",
                                            readonly: ""
                                          },
                                          domProps: {
                                            value: item.textoOcupacion
                                          },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "textoOcupacion",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.textoColegio,
                                              expression: "item.textoColegio"
                                            },
                                            {
                                              name: "show",
                                              rawName: "v-show",
                                              value:
                                                item.escolaridad == 3 ||
                                                item.escolaridad == 14 ||
                                                item.escolaridad == 15,
                                              expression:
                                                "item.escolaridad==3 || item.escolaridad==14 || item.escolaridad==15"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.textoColegio == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "300px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Colegio",
                                            readonly: ""
                                          },
                                          domProps: {
                                            value: item.textoColegio
                                          },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "textoColegio",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.grado,
                                              expression: "item.grado"
                                            },
                                            {
                                              name: "show",
                                              rawName: "v-show",
                                              value:
                                                item.escolaridad == 3 ||
                                                item.escolaridad == 14 ||
                                                item.escolaridad == 15,
                                              expression:
                                                "item.escolaridad==3 || item.escolaridad==14 || item.escolaridad==15"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.grado == "" ? "" : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Embarazo Multiple",
                                            readonly: ""
                                          },
                                          domProps: { value: item.grado },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "grado",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.textoEtnia,
                                              expression: "item.textoEtnia"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.textoEtnia == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Etnia",
                                            readonly: ""
                                          },
                                          domProps: { value: item.textoEtnia },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "textoEtnia",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.textoClasificacion,
                                              expression:
                                                "item.textoClasificacion"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.textoClasificacion == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Clasificación",
                                            readonly: ""
                                          },
                                          domProps: {
                                            value: item.textoClasificacion
                                          },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "textoClasificacion",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.perdida_peso,
                                              expression: "item.perdida_peso"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.perdida_peso == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Perdida de Peso",
                                            readonly: ""
                                          },
                                          domProps: {
                                            value: item.perdida_peso
                                          },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "perdida_peso",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.entiende,
                                              expression: "item.entiende"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.entiende == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Entiende el Español",
                                            readonly: ""
                                          },
                                          domProps: { value: item.entiende },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "entiende",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.pyp,
                                              expression: "item.pyp"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.pyp == "" ? "" : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Perdida de Peso",
                                            readonly: ""
                                          },
                                          domProps: { value: item.pyp },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "pyp",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.migrante,
                                              expression: "item.migrante"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.migrante == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Perdida de Peso",
                                            readonly: ""
                                          },
                                          domProps: { value: item.migrante },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "migrante",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.programa_icbf,
                                              expression: "item.programa_icbf"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.programa_icbf == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Programa ICBF",
                                            readonly: ""
                                          },
                                          domProps: {
                                            value: item.programa_icbf
                                          },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "programa_icbf",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model.trim",
                                              value: item.jefe,
                                              expression: "item.jefe",
                                              modifiers: { trim: true }
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.jefe == "" ? "" : "is-valid",
                                          staticStyle: { width: "400px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Jefe de Hogar",
                                            readonly: ""
                                          },
                                          domProps: { value: item.jefe },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "jefe",
                                                $event.target.value.trim()
                                              )
                                            },
                                            blur: function($event) {
                                              return _vm.$forceUpdate()
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.textoExcepciones,
                                              expression:
                                                "item.textoExcepciones"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.textoExcepciones == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Excepciones",
                                            readonly: ""
                                          },
                                          domProps: {
                                            value: item.textoExcepciones
                                          },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "textoExcepciones",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value:
                                                item.textoEnfermedad_infecciosa,
                                              expression:
                                                "item.textoEnfermedad_infecciosa"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.textoEnfermedad_infecciosa ==
                                            ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder:
                                              "Enfermedad Infecciosa",
                                            readonly: ""
                                          },
                                          domProps: {
                                            value:
                                              item.textoEnfermedad_infecciosa
                                          },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "textoEnfermedad_infecciosa",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value:
                                                item.textoEnfermedad_cronica,
                                              expression:
                                                "item.textoEnfermedad_cronica"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.textoEnfermedad_cronica == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Enfermedad Cronica",
                                            readonly: ""
                                          },
                                          domProps: {
                                            value: item.textoEnfermedad_cronica
                                          },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "textoEnfermedad_cronica",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.peso,
                                              expression: "item.peso"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.peso == "" ? "" : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Peso",
                                            readonly: ""
                                          },
                                          domProps: { value: item.peso },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "peso",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.talla,
                                              expression: "item.talla"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.talla == "" ? "" : "is-valid",
                                          staticStyle: { width: "200px" },
                                          attrs: {
                                            type: "text",
                                            placeholder: "Talla",
                                            readonly: ""
                                          },
                                          domProps: { value: item.talla },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                item,
                                                "talla",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "text-align": "center",
                                          "vertical-align": "middle"
                                        }
                                      },
                                      [
                                        _vm.GIDEN == false
                                          ? _c(
                                              "div",
                                              {
                                                staticStyle: { width: "70px" }
                                              },
                                              [
                                                _c(
                                                  "button",
                                                  {
                                                    staticClass:
                                                      "btn btn-icon btn-sm btn-outline-danger",
                                                    attrs: {
                                                      type: "button",
                                                      title: "Eliminar"
                                                    },
                                                    on: {
                                                      click: function($event) {
                                                        return _vm.eliminarItem(
                                                          index,
                                                          item
                                                        )
                                                      }
                                                    }
                                                  },
                                                  [
                                                    _c("i", {
                                                      staticClass: "fa fa-trash"
                                                    })
                                                  ]
                                                ),
                                                _vm._v(" "),
                                                _c(
                                                  "button",
                                                  {
                                                    staticClass:
                                                      "btn btn-icon btn-sm btn-outline-warning",
                                                    attrs: {
                                                      type: "button",
                                                      title: "Editar"
                                                    },
                                                    on: {
                                                      click: function($event) {
                                                        return _vm.editarItemInte(
                                                          index,
                                                          item
                                                        )
                                                      }
                                                    }
                                                  },
                                                  [
                                                    _c("i", {
                                                      staticClass: "fa fa-edit"
                                                    })
                                                  ]
                                                )
                                              ]
                                            )
                                          : _vm._e()
                                      ]
                                    )
                                  ]
                                )
                              }),
                              0
                            )
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", {
                          staticClass:
                            "kt-separator kt-separator--border-dashed"
                        })
                      ])
                    ])
                  ]),
                  _vm._v(" "),
                  _c("br"),
                  _vm._v(" "),
                  _c("br"),
                  _vm._v(" "),
                  _c("div", {
                    staticClass: "kt-separator kt-separator--border-dashed"
                  }),
                  _vm._v(" "),
                  _vm._m(6),
                  _vm._v(" "),
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c("div", { staticClass: "table-responsive" }, [
                        _c(
                          "table",
                          { staticClass: "table table-sm table-hover" },
                          [
                            _vm._m(7),
                            _vm._v(" "),
                            _c(
                              "tbody",
                              _vm._l(_vm.factores, function(item, index) {
                                return _c(
                                  "tr",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value: item.estado == "Activo",
                                        expression: "item.estado=='Activo'"
                                      }
                                    ],
                                    key: index
                                  },
                                  [
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "100px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: index + 1 }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "200px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: {
                                            value:
                                              item.tipo_id +
                                              " : " +
                                              item.identificacion
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "300px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: {
                                            value:
                                              item.pnom +
                                              " " +
                                              item.snom +
                                              " " +
                                              item.pape +
                                              " " +
                                              item.sape
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "150px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.sexo }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "100px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.edad }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.dialogos == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            model: {
                                              value: item.dialogos,
                                              callback: function($$v) {
                                                _vm.$set(item, "dialogos", $$v)
                                              },
                                              expression: "item.dialogos"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.sancion == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            model: {
                                              value: item.sancion,
                                              callback: function($$v) {
                                                _vm.$set(item, "sancion", $$v)
                                              },
                                              expression: "item.sancion"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.castigo_verbal == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            model: {
                                              value: item.castigo_verbal,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "castigo_verbal",
                                                  $$v
                                                )
                                              },
                                              expression: "item.castigo_verbal"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.castigo_fisico == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            model: {
                                              value: item.castigo_fisico,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "castigo_fisico",
                                                  $$v
                                                )
                                              },
                                              expression: "item.castigo_fisico"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.alcohol == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            model: {
                                              value: item.alcohol,
                                              callback: function($$v) {
                                                _vm.$set(item, "alcohol", $$v)
                                              },
                                              expression: "item.alcohol"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.tabaco == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            model: {
                                              value: item.tabaco,
                                              callback: function($$v) {
                                                _vm.$set(item, "tabaco", $$v)
                                              },
                                              expression: "item.tabaco"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.sustancias_psico == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            model: {
                                              value: item.sustancias_psico,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "sustancias_psico",
                                                  $$v
                                                )
                                              },
                                              expression:
                                                "item.sustancias_psico"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.apuestas == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            model: {
                                              value: item.apuestas,
                                              callback: function($$v) {
                                                _vm.$set(item, "apuestas", $$v)
                                              },
                                              expression: "item.apuestas"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.violencia_fisica == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            model: {
                                              value: item.violencia_fisica,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "violencia_fisica",
                                                  $$v
                                                )
                                              },
                                              expression:
                                                "item.violencia_fisica"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.violencia_psico == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            model: {
                                              value: item.violencia_psico,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "violencia_psico",
                                                  $$v
                                                )
                                              },
                                              expression: "item.violencia_psico"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.violencia_economica == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            model: {
                                              value: item.violencia_economica,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "violencia_economica",
                                                  $$v
                                                )
                                              },
                                              expression:
                                                "item.violencia_economica"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.abuso_sexual == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            model: {
                                              value: item.abuso_sexual,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "abuso_sexual",
                                                  $$v
                                                )
                                              },
                                              expression: "item.abuso_sexual"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.actividad_fisica == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            model: {
                                              value: item.actividad_fisica,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "actividad_fisica",
                                                  $$v
                                                )
                                              },
                                              expression:
                                                "item.actividad_fisica"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.consumo_frutas == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            model: {
                                              value: item.consumo_frutas,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "consumo_frutas",
                                                  $$v
                                                )
                                              },
                                              expression: "item.consumo_frutas"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.religiosos == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            model: {
                                              value: item.religiosos,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "religiosos",
                                                  $$v
                                                )
                                              },
                                              expression: "item.religiosos"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.sociales == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            model: {
                                              value: item.sociales,
                                              callback: function($$v) {
                                                _vm.$set(item, "sociales", $$v)
                                              },
                                              expression: "item.sociales"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.culturales == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            model: {
                                              value: item.culturales,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "culturales",
                                                  $$v
                                                )
                                              },
                                              expression: "item.culturales"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.recreativos == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            model: {
                                              value: item.recreativos,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "recreativos",
                                                  $$v
                                                )
                                              },
                                              expression: "item.recreativos"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    )
                                  ]
                                )
                              }),
                              0
                            )
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c("div", {
                        staticClass: "kt-separator kt-separator--border-dashed"
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _vm._m(8),
                  _vm._v(" "),
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c("div", { staticClass: "table-responsive" }, [
                        _c(
                          "table",
                          { staticClass: "table table-sm table-hover" },
                          [
                            _vm._m(9),
                            _vm._v(" "),
                            _c(
                              "tbody",
                              _vm._l(_vm.afectacion, function(item, index) {
                                return _c(
                                  "tr",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value: item.estado == "Activo",
                                        expression: "item.estado=='Activo'"
                                      }
                                    ],
                                    key: index
                                  },
                                  [
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "100px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: index + 1 }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "200px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: {
                                            value:
                                              item.tipo_id +
                                              " : " +
                                              item.identificacion
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "300px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: {
                                            value:
                                              item.pnom +
                                              " " +
                                              item.snom +
                                              " " +
                                              item.pape +
                                              " " +
                                              item.sape
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "150px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.sexo }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "100px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.edad }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.presentado == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            model: {
                                              value: item.presentado,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "presentado",
                                                  $$v
                                                )
                                              },
                                              expression: "item.presentado"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.prueba == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            model: {
                                              value: item.prueba,
                                              callback: function($$v) {
                                                _vm.$set(item, "prueba", $$v)
                                              },
                                              expression: "item.prueba"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "1" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "2" } },
                                              [_vm._v("SI, POSITIVO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "3" } },
                                              [_vm._v("SI, NEGATIVO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.afectado == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            model: {
                                              value: item.afectado,
                                              callback: function($$v) {
                                                _vm.$set(item, "afectado", $$v)
                                              },
                                              expression: "item.afectado"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "1" } },
                                              [_vm._v("Si, pérdida económica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "2" } },
                                              [_vm._v("Si. Pérdida de empleo")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "3" } },
                                              [_vm._v("Si, emocionalmente")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "4" } },
                                              [_vm._v("Si, en mi salud")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "5" } },
                                              [_vm._v("Si, en mis estudios")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "6" } },
                                              [
                                                _vm._v(
                                                  "Aumento de los ingresos."
                                                )
                                              ]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "7" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.nivel == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            model: {
                                              value: item.nivel,
                                              callback: function($$v) {
                                                _vm.$set(item, "nivel", $$v)
                                              },
                                              expression: "item.nivel"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "1" } },
                                              [_vm._v("Poco afectado")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "2" } },
                                              [_vm._v("Medianamente afectado")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "3" } },
                                              [_vm._v("Muy afectado")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.porcentaje == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            model: {
                                              value: item.porcentaje,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "porcentaje",
                                                  $$v
                                                )
                                              },
                                              expression: "item.porcentaje"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "1" } },
                                              [_vm._v("Ninguno")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "2" } },
                                              [_vm._v("10%")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "3" } },
                                              [_vm._v("50%")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "4" } },
                                              [_vm._v("Más del 50%")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.perdida == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            model: {
                                              value: item.perdida,
                                              callback: function($$v) {
                                                _vm.$set(item, "perdida", $$v)
                                              },
                                              expression: "item.perdida"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.sobrelleva == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            model: {
                                              value: item.sobrelleva,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "sobrelleva",
                                                  $$v
                                                )
                                              },
                                              expression: "item.sobrelleva"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "1" } },
                                              [
                                                _vm._v(
                                                  "Con prestamos familiares"
                                                )
                                              ]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "2" } },
                                              [_vm._v("Ahorros")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "3" } },
                                              [_vm._v("Prestamos de amigos")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "4" } },
                                              [_vm._v("Tarjeta de crédito")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "5" } },
                                              [
                                                _vm._v(
                                                  "Ayudas de gobiernos nacional"
                                                )
                                              ]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "6" } },
                                              [
                                                _vm._v(
                                                  "Ayudas de gobiernos Municipal"
                                                )
                                              ]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "7" } },
                                              [_vm._v("Otros")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.percibe == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            model: {
                                              value: item.percibe,
                                              callback: function($$v) {
                                                _vm.$set(item, "percibe", $$v)
                                              },
                                              expression: "item.percibe"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "1" } },
                                              [_vm._v("Muy buena")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "2" } },
                                              [_vm._v("Buena")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "3" } },
                                              [_vm._v("Por mejorar")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "4" } },
                                              [_vm._v("Mala")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.principal == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            model: {
                                              value: item.principal,
                                              callback: function($$v) {
                                                _vm.$set(item, "principal", $$v)
                                              },
                                              expression: "item.principal"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "1" } },
                                              [
                                                _vm._v(
                                                  "Sostenimiento servicios públicos"
                                                )
                                              ]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "2" } },
                                              [
                                                _vm._v(
                                                  "Sostenimiento alimentación"
                                                )
                                              ]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "3" } },
                                              [
                                                _vm._v(
                                                  "Sostenimiento arriendos"
                                                )
                                              ]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "4" } },
                                              [_vm._v("Servicio Salud")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "5" } },
                                              [_vm._v("Educación")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.tiempo == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            model: {
                                              value: item.tiempo,
                                              callback: function($$v) {
                                                _vm.$set(item, "tiempo", $$v)
                                              },
                                              expression: "item.tiempo"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "1" } },
                                              [_vm._v("Menos de 6 meses")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "2" } },
                                              [_vm._v("Más de 6 meses")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "3" } },
                                              [_vm._v("Más de 1 años")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "4" } },
                                              [_vm._v("Aun no lo calcula")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    )
                                  ]
                                )
                              }),
                              0
                            )
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c("div", {
                        staticClass: "kt-separator kt-separator--border-dashed"
                      })
                    ])
                  ])
                ]
              ),
              _vm._v(" "),
              _c(
                "div",
                {
                  staticClass: "tab-pane",
                  attrs: { id: "tabVivienda", role: "tabpanel" }
                },
                [
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-12 kt-align-right" }, [
                      _c(
                        "button",
                        {
                          staticClass: "btn btn-brand",
                          class: _vm.spinGVivi,
                          attrs: { type: "button", disabled: !_vm.valGVivi },
                          on: {
                            click: function($event) {
                              return _vm.cambiarTab1(
                                "cartxciclo",
                                "tabVivienda"
                              )
                            }
                          }
                        },
                        [
                          _c("i", { staticClass: "la la-arrow-right" }),
                          _vm._v(" "),
                          _c("span", { staticClass: "kt-hidden-mobile" }, [
                            _vm._v("Guardar")
                          ])
                        ]
                      )
                    ])
                  ]),
                  _vm._v(" "),
                  _vm._m(10),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Tipo de Vivienda:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.tipo_vivienda.$error,
                              "is-valid": !_vm.$v.viviendaData.tipo_vivienda
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.tipo_vivienda.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.tipo_vivienda,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.tipo_vivienda.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Casa")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Apartamento")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Pieza")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("Finca")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "6" } }, [
                              _vm._v("Vivienda Indigena")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "7" } }, [
                              _vm._v("Improvisada - Lote")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Tipo de Vivienda Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.tipo_vivienda.required
                            ? _c("span", [
                                _vm._v("El Tipo de Vivienda es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-2" },
                      [
                        _c("label", [_vm._v("Tipo de Estructura:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.tipo_estructura.$error,
                              "is-valid": !_vm.$v.viviendaData.tipo_estructura
                                .$invalid
                            },
                            on: {
                              change: function($event) {
                                return _vm.mostrarOtro("TE")
                              }
                            },
                            model: {
                              value: _vm.$v.viviendaData.tipo_estructura.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.tipo_estructura,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.tipo_estructura.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Concreto")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Ladrillo ó Bloque")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Madera")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("Otro")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Tipo de Estructura Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.tipo_estructura.required
                            ? _c("span", [
                                _vm._v("El Tipo de Estructura es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.mOTE,
                            expression: "mOTE"
                          }
                        ],
                        staticClass: "col-lg-7"
                      },
                      [
                        _c("label", [_vm._v("Cual:")]),
                        _vm._v(" "),
                        _c("input", {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model.trim",
                              value: _vm.viviendaData.otro_tipo_estructura,
                              expression: "viviendaData.otro_tipo_estructura",
                              modifiers: { trim: true }
                            }
                          ],
                          staticClass: "form-control text-capitalize",
                          class:
                            _vm.viviendaData.otro_tipo_estructura == ""
                              ? ""
                              : "is-valid",
                          attrs: { type: "text", placeholder: "Cual" },
                          domProps: {
                            value: _vm.viviendaData.otro_tipo_estructura
                          },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.$set(
                                _vm.viviendaData,
                                "otro_tipo_estructura",
                                $event.target.value.trim()
                              )
                            },
                            blur: function($event) {
                              return _vm.$forceUpdate()
                            }
                          }
                        })
                      ]
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c("div", { staticClass: "col-lg-3" }, [
                      _c("label", [_vm._v("# de Habitaciones:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model.trim",
                            value: _vm.$v.viviendaData.numero_cuartos.$model,
                            expression: "$v.viviendaData.numero_cuartos.$model",
                            modifiers: { trim: true }
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        class: {
                          "is-invalid":
                            _vm.$v.viviendaData.numero_cuartos.$error,
                          "is-valid": !_vm.$v.viviendaData.numero_cuartos
                            .$invalid
                        },
                        attrs: { type: "text", placeholder: "# de Cuartos" },
                        domProps: {
                          value: _vm.$v.viviendaData.numero_cuartos.$model
                        },
                        on: {
                          blur: [
                            function($event) {
                              return _vm.$v.viviendaData.numero_cuartos.$touch()
                            },
                            function($event) {
                              return _vm.$forceUpdate()
                            }
                          ],
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.$v.viviendaData.numero_cuartos,
                              "$model",
                              $event.target.value.trim()
                            )
                          }
                        }
                      }),
                      _vm._v(" "),
                      _c("div", { staticClass: "valid-feedback" }, [
                        _vm._v("El Numero de Cuartos es Valido")
                      ]),
                      _vm._v(" "),
                      _c("div", { staticClass: "invalid-feedback" }, [
                        !_vm.$v.viviendaData.numero_cuartos.required
                          ? _c("span", [
                              _vm._v("El Numero de Cuartos es obligatorio")
                            ])
                          : _vm._e(),
                        _vm._v(" "),
                        !_vm.$v.viviendaData.numero_cuartos.numeric
                          ? _c("span", [
                              _vm._v("El Numero de Cuartos debe ser Numerico")
                            ])
                          : _vm._e()
                      ])
                    ]),
                    _vm._v(" "),
                    _c(
                      "div",
                      {
                        staticClass: "col-lg-3",
                        staticStyle: { display: "none" }
                      },
                      [
                        _c("label", [_vm._v("Personas por Cuarto:")]),
                        _vm._v(" "),
                        _c("input", {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model.trim",
                              value:
                                _vm.$v.viviendaData.personas_por_cuartos.$model,
                              expression:
                                "$v.viviendaData.personas_por_cuartos.$model",
                              modifiers: { trim: true }
                            }
                          ],
                          staticClass: "form-control text-capitalize",
                          class: {
                            "is-invalid":
                              _vm.$v.viviendaData.personas_por_cuartos.$error,
                            "is-valid": !_vm.$v.viviendaData
                              .personas_por_cuartos.$invalid
                          },
                          attrs: {
                            type: "text",
                            placeholder: "Personas por Cuarto"
                          },
                          domProps: {
                            value:
                              _vm.$v.viviendaData.personas_por_cuartos.$model
                          },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.$set(
                                _vm.$v.viviendaData.personas_por_cuartos,
                                "$model",
                                $event.target.value.trim()
                              )
                            },
                            blur: function($event) {
                              return _vm.$forceUpdate()
                            }
                          }
                        }),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Personas por Cuarto es Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.personas_por_cuartos.required
                            ? _c("span", [
                                _vm._v("Personas por Cuarto es obligatorio")
                              ])
                            : _vm._e(),
                          _vm._v(" "),
                          !_vm.$v.viviendaData.personas_por_cuartos.numeric
                            ? _c("span", [
                                _vm._v("Personas por Cuarto debe ser Numerico")
                              ])
                            : _vm._e()
                        ])
                      ]
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Materia Predominante Piso:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.material_predominante
                                  .$error,
                              "is-valid": !_vm.$v.viviendaData
                                .material_predominante.$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.material_predominante
                                  .$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.material_predominante,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.material_predominante.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Marmol ó Madera Pulida")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Cerámica ó Tablón")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Cemento")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Madera")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("Tierra")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "6" } }, [
                              _vm._v("Bolsa ó Vinilo")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "6" } }, [
                              _vm._v("Otros")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Materia Predominante Piso Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.material_predominante.required
                            ? _c("span", [
                                _vm._v(
                                  "El Materia Predominante Piso es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Tipo de Cubierta:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.tipo_cubierta.$error,
                              "is-valid": !_vm.$v.viviendaData.tipo_cubierta
                                .$invalid
                            },
                            on: {
                              change: function($event) {
                                return _vm.mostrarOtro("TC")
                              }
                            },
                            model: {
                              value: _vm.$v.viviendaData.tipo_cubierta.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.tipo_cubierta,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.tipo_cubierta.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("No aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Material de Desecho Plastico - Lona")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Zinc")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Eternit")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("Entre Piso")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "6" } }, [
                              _vm._v("Teja de Barro")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "7" } }, [
                              _vm._v("Placa Definitiva")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "8" } }, [
                              _vm._v("Paja ó Palma")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "9" } }, [
                              _vm._v("Otro")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Tipo de Cubierta Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.tipo_cubierta.required
                            ? _c("span", [
                                _vm._v("El Tipo de Cubierta es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.mOTC,
                            expression: "mOTC"
                          }
                        ],
                        staticClass: "col-lg-12"
                      },
                      [
                        _c("label", [_vm._v("Cual:")]),
                        _vm._v(" "),
                        _c("input", {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model.trim",
                              value: _vm.viviendaData.otro_tipo_cubierta,
                              expression: "viviendaData.otro_tipo_cubierta",
                              modifiers: { trim: true }
                            }
                          ],
                          staticClass: "form-control text-capitalize",
                          class:
                            _vm.viviendaData.otro_tipo_cubierta == ""
                              ? ""
                              : "is-valid",
                          attrs: { type: "text", placeholder: "Cual" },
                          domProps: {
                            value: _vm.viviendaData.otro_tipo_cubierta
                          },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.$set(
                                _vm.viviendaData,
                                "otro_tipo_cubierta",
                                $event.target.value.trim()
                              )
                            },
                            blur: function($event) {
                              return _vm.$forceUpdate()
                            }
                          }
                        })
                      ]
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c("div", { staticClass: "col-lg-12" }, [
                      _c("label", [_vm._v("Actividad Económica:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.actividadesAuxiliar,
                            expression: "actividadesAuxiliar"
                          }
                        ],
                        ref: "ocupacion",
                        staticClass: "form-control text-capitalize",
                        class: _vm.actividadesAuxiliar == "" ? "" : "is-valid",
                        attrs: {
                          type: "text",
                          placeholder: "Actividad Económica",
                          readonly: true
                        },
                        domProps: { value: _vm.actividadesAuxiliar },
                        on: {
                          click: function($event) {
                            return _vm.abrirModalActividades()
                          },
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.actividadesAuxiliar = $event.target.value
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c(
                      "div",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.mOAE,
                            expression: "mOAE"
                          }
                        ],
                        staticClass: "col-lg-10"
                      },
                      [
                        _c("label", [_vm._v("Cual:")]),
                        _vm._v(" "),
                        _c("input", {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model.trim",
                              value: _vm.viviendaData.cual_actividad_economica,
                              expression:
                                "viviendaData.cual_actividad_economica",
                              modifiers: { trim: true }
                            }
                          ],
                          staticClass: "form-control text-capitalize",
                          class:
                            _vm.viviendaData.cual_actividad_economica == ""
                              ? ""
                              : "is-valid",
                          attrs: { type: "text", placeholder: "Cual" },
                          domProps: {
                            value: _vm.viviendaData.cual_actividad_economica
                          },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.$set(
                                _vm.viviendaData,
                                "cual_actividad_economica",
                                $event.target.value.trim()
                              )
                            },
                            blur: function($event) {
                              return _vm.$forceUpdate()
                            }
                          }
                        })
                      ]
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [
                          _vm._v("Evento que Puede Afectar la Vivienda:")
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.evento_afecta_vivienda
                                  .$error,
                              "is-valid": !_vm.$v.viviendaData
                                .evento_afecta_vivienda.$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.evento_afecta_vivienda
                                  .$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.evento_afecta_vivienda,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.evento_afecta_vivienda.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("No aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Inundación")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Arroyo")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Oleaje Fuerte")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("Deslizamiento")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Evento que Puede Afectar la Vivienda Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.evento_afecta_vivienda.required
                            ? _c("span", [
                                _vm._v(
                                  "El Evento que Puede Afectar la Vivienda es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [
                          _vm._v("Pertenece a Familias en Acción:")
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.familias_accion.$error,
                              "is-valid": !_vm.$v.viviendaData.familias_accion
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.familias_accion.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.familias_accion,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.familias_accion.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Pertenece a Familias en Acción Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.familias_accion.required
                            ? _c("span", [
                                _vm._v(
                                  "Pertenece a Familias en Acción es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [
                          _vm._v("Promedio de Ingresos Mensuales:")
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.promedio_ingresos.$error,
                              "is-valid": !_vm.$v.viviendaData.promedio_ingresos
                                .$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.promedio_ingresos.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.promedio_ingresos,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.promedio_ingresos.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Menos de un salario minimo legal vigente")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Un salario minimo legal vigente")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Entre 1 y 3 salarios mínimos")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Entre 3 y 5 salarios mínimos")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("Más de 5 salarios mínimos")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Promedio de Ingresos Mensuales Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.promedio_ingresos.required
                            ? _c("span", [
                                _vm._v(
                                  "El Promedio de Ingresos Mensuales es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [
                          _vm._v("Prom. de Gastos Mens. En Servicios Publicos:")
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.promedio_gastos.$error,
                              "is-valid": !_vm.$v.viviendaData.promedio_gastos
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.promedio_gastos.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.promedio_gastos,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.promedio_gastos.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Menos de $100.000")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Entre $100.001 y $300.000")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Entre $300.001 y $500.000")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Mas de $500.000")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v(
                            "Prom. de Gastos Mens. En Servicios Publicos Valido"
                          )
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.promedio_gastos.required
                            ? _c("span", [
                                _vm._v(
                                  "El Prom. de Gastos Mens. En Servicios Publicos es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Fuente de Agua para Consumo:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.fuente_agua.$error,
                              "is-valid": !_vm.$v.viviendaData.fuente_agua
                                .$invalid
                            },
                            on: {
                              change: function($event) {
                                return _vm.mostrarOtro("FA")
                              }
                            },
                            model: {
                              value: _vm.$v.viviendaData.fuente_agua.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.fuente_agua,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.fuente_agua.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Acueducto")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Pozo con bomba")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Laguna o jaguey")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("Rio quebrada ó manantial")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "6" } }, [
                              _vm._v("Aguas lluvias")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "7" } }, [
                              _vm._v("Carro tanque")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "8" } }, [
                              _vm._v("Agua tratada envasada")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "9" } }, [
                              _vm._v("Otro")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Fuente de Agua para Consumo Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.fuente_agua.required
                            ? _c("span", [
                                _vm._v(
                                  "Fuente de Agua para Consumo es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.mOFA,
                            expression: "mOFA"
                          }
                        ],
                        staticClass: "col-lg-12"
                      },
                      [
                        _c("label", [_vm._v("Cual:")]),
                        _vm._v(" "),
                        _c("input", {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model.trim",
                              value: _vm.viviendaData.cual_fuente,
                              expression: "viviendaData.cual_fuente",
                              modifiers: { trim: true }
                            }
                          ],
                          staticClass: "form-control text-capitalize",
                          class:
                            _vm.viviendaData.cual_fuente == ""
                              ? ""
                              : "is-valid",
                          attrs: { type: "text", placeholder: "Cual" },
                          domProps: { value: _vm.viviendaData.cual_fuente },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.$set(
                                _vm.viviendaData,
                                "cual_fuente",
                                $event.target.value.trim()
                              )
                            },
                            blur: function($event) {
                              return _vm.$forceUpdate()
                            }
                          }
                        })
                      ]
                    )
                  ]),
                  _vm._v(" "),
                  _vm._m(11),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Energia Electrica:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.energia_electrica.$error,
                              "is-valid": !_vm.$v.viviendaData.energia_electrica
                                .$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.energia_electrica.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.energia_electrica,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.energia_electrica.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Energia Electrica Valida")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.energia_electrica.required
                            ? _c("span", [
                                _vm._v("Energia Electrica es obligatoria")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Gas Natural:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.gas_natural.$error,
                              "is-valid": !_vm.$v.viviendaData.gas_natural
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.gas_natural.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.gas_natural,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.gas_natural.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "PI" } }, [
                              _vm._v("SI PIPETA DE GAS")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Gas Natural Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.gas_natural.required
                            ? _c("span", [_vm._v("Gas Natural es obligatorio")])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Acueducto:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.acueducto.$error,
                              "is-valid": !_vm.$v.viviendaData.acueducto
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.acueducto.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.acueducto,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.acueducto.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Acueducto Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.acueducto.required
                            ? _c("span", [_vm._v("Acueducto es obligatorio")])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Alcantarillado:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.alcantarillado.$error,
                              "is-valid": !_vm.$v.viviendaData.alcantarillado
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.alcantarillado.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.alcantarillado,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.alcantarillado.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Alcantarillado Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.alcantarillado.required
                            ? _c("span", [
                                _vm._v("Alcantarillado es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Telefono Fijo:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.telefono_fijo.$error,
                              "is-valid": !_vm.$v.viviendaData.telefono_fijo
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.telefono_fijo.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.telefono_fijo,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.telefono_fijo.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Telefono Fijo Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.telefono_fijo.required
                            ? _c("span", [
                                _vm._v("Telefono Fijo es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Aseo:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid": _vm.$v.viviendaData.aseo.$error,
                              "is-valid": !_vm.$v.viviendaData.aseo.$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.aseo.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.aseo,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.aseo.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Aseo Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.aseo.required
                            ? _c("span", [_vm._v("Aseo es obligatorio")])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Internet Subsidiado:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.internet_subsidiado.$error,
                              "is-valid": !_vm.$v.viviendaData
                                .internet_subsidiado.$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.internet_subsidiado.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.internet_subsidiado,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.internet_subsidiado.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Internet Subsidiado Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.internet_subsidiado.required
                            ? _c("span", [
                                _vm._v("Internet Subsidiado es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Internet Privado:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.internet_privado.$error,
                              "is-valid": !_vm.$v.viviendaData.internet_privado
                                .$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.internet_privado.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.internet_privado,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.internet_privado.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Internet Privado Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.internet_privado.required
                            ? _c("span", [
                                _vm._v("Internet Privado es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Donde se Almacena el Agua:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.donde_almacena_agua.$error,
                              "is-valid": !_vm.$v.viviendaData
                                .donde_almacena_agua.$invalid
                            },
                            on: {
                              change: function($event) {
                                return _vm.mostrarOtro("DA")
                              }
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.donde_almacena_agua.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.donde_almacena_agua,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.donde_almacena_agua.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("No almacenan")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Tanque")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Alberca")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Planta acuatica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("Otro")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Donde se Almacena el Agua Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.donde_almacena_agua.required
                            ? _c("span", [
                                _vm._v(
                                  "Donde se Almacena el Agua es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.mODA,
                            expression: "mODA"
                          }
                        ],
                        staticClass: "col-lg-8"
                      },
                      [
                        _c("label", [_vm._v("Cual:")]),
                        _vm._v(" "),
                        _c("input", {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model.trim",
                              value: _vm.viviendaData.otro_almacena_agua,
                              expression: "viviendaData.otro_almacena_agua",
                              modifiers: { trim: true }
                            }
                          ],
                          staticClass: "form-control text-capitalize",
                          class:
                            _vm.viviendaData.otro_almacena_agua == ""
                              ? ""
                              : "is-valid",
                          attrs: { type: "text", placeholder: "Cual" },
                          domProps: {
                            value: _vm.viviendaData.otro_almacena_agua
                          },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.$set(
                                _vm.viviendaData,
                                "otro_almacena_agua",
                                $event.target.value.trim()
                              )
                            },
                            blur: function($event) {
                              return _vm.$forceUpdate()
                            }
                          }
                        })
                      ]
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Ubicación del Tanque:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.ubicacion_tanque.$error,
                              "is-valid": !_vm.$v.viviendaData.ubicacion_tanque
                                .$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.ubicacion_tanque.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.ubicacion_tanque,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.ubicacion_tanque.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Interior de la vivienda")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Exterior de la vivienda bajo techo")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Exterior de la vivienda sin techo")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Sobre el techo")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("No aplica")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Ubicación del Tanque Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.ubicacion_tanque.required
                            ? _c("span", [
                                _vm._v("Ubicación del Tanque es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Tipo de Tratamiento del Agua:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.tipo_tratamiento_agua
                                  .$error,
                              "is-valid": !_vm.$v.viviendaData
                                .tipo_tratamiento_agua.$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.tipo_tratamiento_agua
                                  .$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.tipo_tratamiento_agua,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.tipo_tratamiento_agua.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Clorada")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Filtrada")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Hervida")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Consume sin tratamiento")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Tipo de Tratamiento del Agua Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.tipo_tratamiento_agua.required
                            ? _c("span", [
                                _vm._v(
                                  "El Tipo de Tratamiento del Agua es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Destino final de la Basura:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.destino_final_basura.$error,
                              "is-valid": !_vm.$v.viviendaData
                                .destino_final_basura.$invalid
                            },
                            on: {
                              change: function($event) {
                                return _vm.mostrarOtro("FB")
                              }
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.destino_final_basura.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.destino_final_basura,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.destino_final_basura.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v(
                                "Recolección y dispocisión en el aseo municipal"
                              )
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Quemada")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Cielo Abierto")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Enterrada")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("Otro")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Destino final de la Basura Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.destino_final_basura.required
                            ? _c("span", [
                                _vm._v(
                                  "El Destino final de la Basura es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.mOFB,
                            expression: "mOFB"
                          }
                        ],
                        staticClass: "col-lg-12"
                      },
                      [
                        _c("label", [_vm._v("Cual:")]),
                        _vm._v(" "),
                        _c("input", {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model.trim",
                              value: _vm.viviendaData.otro_destino_final_basura,
                              expression:
                                "viviendaData.otro_destino_final_basura",
                              modifiers: { trim: true }
                            }
                          ],
                          staticClass: "form-control text-capitalize",
                          class:
                            _vm.viviendaData.otro_destino_final_basura == ""
                              ? ""
                              : "is-valid",
                          attrs: { type: "text", placeholder: "Cual" },
                          domProps: {
                            value: _vm.viviendaData.otro_destino_final_basura
                          },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.$set(
                                _vm.viviendaData,
                                "otro_destino_final_basura",
                                $event.target.value.trim()
                              )
                            },
                            blur: function($event) {
                              return _vm.$forceUpdate()
                            }
                          }
                        })
                      ]
                    )
                  ]),
                  _vm._v(" "),
                  _vm._m(12),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Porquerizas:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.porquerizas.$error,
                              "is-valid": !_vm.$v.viviendaData.porquerizas
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.porquerizas.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.porquerizas,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.porquerizas.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Porquerizas Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.porquerizas.required
                            ? _c("span", [_vm._v("Porquerizas es obligatorio")])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Plagas:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid": _vm.$v.viviendaData.plagas.$error,
                              "is-valid": !_vm.$v.viviendaData.plagas.$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.plagas.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.plagas,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.plagas.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Plagas Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.plagas.required
                            ? _c("span", [_vm._v("Plagas es obligatorio")])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Industrias Contaminantes:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.industrias.$error,
                              "is-valid": !_vm.$v.viviendaData.industrias
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.industrias.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.industrias,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.industrias.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Industrias Contaminantes Valida")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.industrias.required
                            ? _c("span", [
                                _vm._v(
                                  "Industrias Contaminantes es obligatoria"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Malos Olores:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.malos_olores.$error,
                              "is-valid": !_vm.$v.viviendaData.malos_olores
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.malos_olores.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.malos_olores,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.malos_olores.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Malos Olores Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.malos_olores.required
                            ? _c("span", [
                                _vm._v("Malos Olores es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Rellenos Sanitarios:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid": _vm.$v.viviendaData.rellenos.$error,
                              "is-valid": !_vm.$v.viviendaData.rellenos.$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.rellenos.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.rellenos,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.rellenos.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Rellenos Sanitarios Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.rellenos.required
                            ? _c("span", [
                                _vm._v("Rellenos Sanitarios es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Ruido:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.contaminacion_a.$error,
                              "is-valid": !_vm.$v.viviendaData.contaminacion_a
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.contaminacion_a.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.contaminacion_a,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.contaminacion_a.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Ruido Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.contaminacion_a.required
                            ? _c("span", [_vm._v("Ruido es obligatorio")])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Cuerpos de agua:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid": _vm.$v.viviendaData.rio.$error,
                              "is-valid": !_vm.$v.viviendaData.rio.$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.rio.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.rio,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.rio.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Cuerpos de agua Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.rio.required
                            ? _c("span", [
                                _vm._v("Cuerpos de agua es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Avenidas:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.avenidas_transitadas.$error,
                              "is-valid": !_vm.$v.viviendaData
                                .avenidas_transitadas.$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.avenidas_transitadas.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.avenidas_transitadas,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.avenidas_transitadas.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Avenidas Valida")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.avenidas_transitadas.required
                            ? _c("span", [_vm._v("Avenidas es obligatoria")])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Lotes Abandonados:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.lotes_abandonados.$error,
                              "is-valid": !_vm.$v.viviendaData.lotes_abandonados
                                .$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.lotes_abandonados.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.lotes_abandonados,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.lotes_abandonados.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Lotes Abandonados Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.lotes_abandonados.required
                            ? _c("span", [
                                _vm._v("Lotes Abandonados es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Otro:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.otro_cerca.$error,
                              "is-valid": !_vm.$v.viviendaData.otro_cerca
                                .$invalid
                            },
                            on: {
                              change: function($event) {
                                return _vm.mostrarOtro("OC")
                              }
                            },
                            model: {
                              value: _vm.$v.viviendaData.otro_cerca.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.otro_cerca,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.otro_cerca.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Otro Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.otro_cerca.required
                            ? _c("span", [_vm._v("Otro es obligatorio")])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.mOOC,
                            expression: "mOOC"
                          }
                        ],
                        staticClass: "col-lg-12"
                      },
                      [
                        _c("label", [_vm._v("Cual:")]),
                        _vm._v(" "),
                        _c("input", {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model.trim",
                              value: _vm.viviendaData.cual_cerca,
                              expression: "viviendaData.cual_cerca",
                              modifiers: { trim: true }
                            }
                          ],
                          staticClass: "form-control text-capitalize",
                          class:
                            _vm.viviendaData.cual_cerca == "" ? "" : "is-valid",
                          attrs: { type: "text", placeholder: "Cual" },
                          domProps: { value: _vm.viviendaData.cual_cerca },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.$set(
                                _vm.viviendaData,
                                "cual_cerca",
                                $event.target.value.trim()
                              )
                            },
                            blur: function($event) {
                              return _vm.$forceUpdate()
                            }
                          }
                        })
                      ]
                    )
                  ]),
                  _vm._v(" "),
                  _vm._m(13),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c("div", { staticClass: "col-lg-4" }, [
                      _c("label", [_vm._v("Animal:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.animal,
                            expression: "animal"
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        attrs: { type: "text", placeholder: "Animal" },
                        domProps: { value: _vm.animal },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.animal = $event.target.value
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-2" }, [
                      _c("label", [_vm._v("Cuantos:")]),
                      _vm._v(" "),
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.cuantosAnimal,
                            expression: "cuantosAnimal"
                          }
                        ],
                        staticClass: "form-control text-capitalize",
                        attrs: {
                          type: "number",
                          min: "1",
                          placeholder: "Cuantos"
                        },
                        domProps: { value: _vm.cuantosAnimal },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.cuantosAnimal = $event.target.value
                          }
                        }
                      })
                    ]),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Vacunados:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            model: {
                              value: _vm.vacunadoAnimal,
                              callback: function($$v) {
                                _vm.vacunadoAnimal = $$v
                              },
                              expression: "vacunadoAnimal"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-1" }, [
                      _c("br"),
                      _vm._v(" "),
                      _c("label", [_vm._v("       ")]),
                      _vm._v(" "),
                      _c(
                        "a",
                        {
                          staticClass: "btn btn-outline-info btn-icon",
                          attrs: {
                            href: "javascript:;",
                            "data-skin": "dark",
                            "data-toggle": "kt-tooltip",
                            "data-placement": "top",
                            title: "Agregar"
                          },
                          on: {
                            click: function($event) {
                              $event.preventDefault()
                              return _vm.agregarAnimales($event)
                            }
                          }
                        },
                        [_c("i", { staticClass: "fa fa-plus" })]
                      ),
                      _vm._v(" \n              ")
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c("div", { staticClass: "table-responsive" }, [
                        _c(
                          "table",
                          { staticClass: "table table-sm table-hover" },
                          [
                            _vm._m(14),
                            _vm._v(" "),
                            _c(
                              "tbody",
                              _vm._l(_vm.animalesData, function(item, index) {
                                return _c("tr", { key: index }, [
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle"
                                      }
                                    },
                                    [_vm._v(_vm._s(index + 1))]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "span",
                                        { staticClass: "text-capitalize" },
                                        [_vm._v(_vm._s(item.animal))]
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "span",
                                        { staticClass: "text-capitalize" },
                                        [_vm._v(_vm._s(item.cuantos))]
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "font-weight": "normal",
                                        "vertical-align": "middle",
                                        "text-align": "left",
                                        "text-transform": "capitalize"
                                      }
                                    },
                                    [
                                      _c(
                                        "span",
                                        { staticClass: "text-capitalize" },
                                        [_vm._v(_vm._s(item.vacunados))]
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "td",
                                    {
                                      staticStyle: {
                                        "text-align": "center",
                                        "vertical-align": "middle"
                                      }
                                    },
                                    [
                                      _c(
                                        "button",
                                        {
                                          staticClass:
                                            "btn btn-icon btn-sm btn-outline-danger",
                                          attrs: {
                                            type: "button",
                                            title: "Eliminar"
                                          },
                                          on: {
                                            click: function($event) {
                                              return _vm.eliminarItemAnimales(
                                                index
                                              )
                                            }
                                          }
                                        },
                                        [
                                          _c("i", {
                                            staticClass: "fa fa-trash"
                                          })
                                        ]
                                      )
                                    ]
                                  )
                                ])
                              }),
                              0
                            )
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", {
                          staticClass:
                            "kt-separator kt-separator--border-dashed"
                        })
                      ])
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", {
                    staticClass: "kt-separator kt-separator--border-dashed"
                  }),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-6" },
                      [
                        _c("label", [_vm._v("El Servicio Sanitario Es:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.servicio_sanitario.$error,
                              "is-valid": !_vm.$v.viviendaData
                                .servicio_sanitario.$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.servicio_sanitario.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.servicio_sanitario,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.servicio_sanitario.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v(
                                "De Uso Exclusivo de las Personas de la Familia"
                              )
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v(
                                "Compartida con Personas de Otras Familias"
                              )
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Sin servicio sanitario")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Servicio Sanitario Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.servicio_sanitario.required
                            ? _c("span", [
                                _vm._v("El Servicio Sanitario es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-6" },
                      [
                        _c("label", [
                          _vm._v(
                            "Donde se Encuentra el Sanitario,Inodoro Ó Letrina:"
                          )
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.donde_sanitario.$error,
                              "is-valid": !_vm.$v.viviendaData.donde_sanitario
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.donde_sanitario.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.donde_sanitario,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.donde_sanitario.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Fuera de la casa")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Patio")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Dentro de la casa")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("No aplica")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Sanitario,Inodoro Ó Letrina Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.donde_sanitario.required
                            ? _c("span", [
                                _vm._v(
                                  "El Sanitario,Inodoro Ó Letrina es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-6" },
                      [
                        _c("label", [
                          _vm._v("Donde se Disponen las Excretas (HECES):")
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid": _vm.$v.viviendaData.excretas.$error,
                              "is-valid": !_vm.$v.viviendaData.excretas.$invalid
                            },
                            on: {
                              change: function($event) {
                                return _vm.mostrarOtro("DH")
                              }
                            },
                            model: {
                              value: _vm.$v.viviendaData.excretas.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.excretas,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.excretas.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Letrina")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v(
                                "Inodoro conectado a red de alcantarillado"
                              )
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Cuerpos de aguas")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("Inododoro conectado a pozo séptico")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "6" } }, [
                              _vm._v("Campo abierto")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "7" } }, [
                              _vm._v("Otro")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v(
                            "Donde se Disponen las Excretas (HECES) Valido"
                          )
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.excretas.required
                            ? _c("span", [
                                _vm._v(
                                  "Donde se Disponen las Excretas (HECES) es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.mODH,
                            expression: "mODH"
                          }
                        ],
                        staticClass: "col-lg-6"
                      },
                      [
                        _c("label", [_vm._v("Cual:")]),
                        _vm._v(" "),
                        _c("input", {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model.trim",
                              value: _vm.viviendaData.otro_depositan_excretas,
                              expression:
                                "viviendaData.otro_depositan_excretas",
                              modifiers: { trim: true }
                            }
                          ],
                          staticClass: "form-control text-capitalize",
                          class:
                            _vm.viviendaData.otro_depositan_excretas == ""
                              ? ""
                              : "is-valid",
                          attrs: { type: "text", placeholder: "Cual" },
                          domProps: {
                            value: _vm.viviendaData.otro_depositan_excretas
                          },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.$set(
                                _vm.viviendaData,
                                "otro_depositan_excretas",
                                $event.target.value.trim()
                              )
                            },
                            blur: function($event) {
                              return _vm.$forceUpdate()
                            }
                          }
                        })
                      ]
                    )
                  ]),
                  _vm._v(" "),
                  _vm._m(15),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Cocina:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid": _vm.$v.viviendaData.cocina.$error,
                              "is-valid": !_vm.$v.viviendaData.cocina.$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.cocina.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.cocina,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.cocina.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("NO APLICA")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Cocina Valida")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.cocina.required
                            ? _c("span", [_vm._v("La Cocina es obligatorio")])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Dormitorio:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.dormitorio_a.$error,
                              "is-valid": !_vm.$v.viviendaData.dormitorio_a
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.dormitorio_a.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.dormitorio_a,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.dormitorio_a.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("NO APLICA")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Dormitorio Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.dormitorio_a.required
                            ? _c("span", [
                                _vm._v("El Dormitorio es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Sala Comedor:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid": _vm.$v.viviendaData.sala.$error,
                              "is-valid": !_vm.$v.viviendaData.sala.$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.sala.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.sala,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.sala.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("NO APLICA")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Sala Comedor Valida")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.sala.required
                            ? _c("span", [
                                _vm._v("La Sala Comedor es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Sanitario:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.sanitario.$error,
                              "is-valid": !_vm.$v.viviendaData.sanitario
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.sanitario.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.sanitario,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.sanitario.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("NO APLICA")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Sanitario Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.sanitario.required
                            ? _c("span", [
                                _vm._v("El Sanitario es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Lavadero:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid": _vm.$v.viviendaData.lavadero.$error,
                              "is-valid": !_vm.$v.viviendaData.lavadero.$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.lavadero.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.lavadero,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.lavadero.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("NO APLICA")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Lavadero Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.lavadero.required
                            ? _c("span", [_vm._v("El Lavadero es obligatorio")])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _vm._m(16),
                  _vm._v(" "),
                  _c(
                    "div",
                    {
                      staticClass: "form-group row",
                      staticStyle: { display: "none" }
                    },
                    [
                      _c(
                        "div",
                        { staticClass: "col-lg-4" },
                        [
                          _c("label", [_vm._v("Iluminación Adecuada:")]),
                          _vm._v(" "),
                          _c(
                            "b-form-select",
                            {
                              model: {
                                value: _vm.viviendaData.iluminacion_adecuada,
                                callback: function($$v) {
                                  _vm.$set(
                                    _vm.viviendaData,
                                    "iluminacion_adecuada",
                                    typeof $$v === "string" ? $$v.trim() : $$v
                                  )
                                },
                                expression: "viviendaData.iluminacion_adecuada"
                              }
                            },
                            [
                              _c(
                                "option",
                                { attrs: { value: "", selected: "" } },
                                [_vm._v("Seleccione")]
                              ),
                              _vm._v(" "),
                              _c("option", { attrs: { value: "NA" } }, [
                                _vm._v("No Aplica")
                              ]),
                              _vm._v(" "),
                              _c("option", { attrs: { value: "SI" } }, [
                                _vm._v("SI")
                              ]),
                              _vm._v(" "),
                              _c("option", { attrs: { value: "NO" } }, [
                                _vm._v("NO")
                              ])
                            ]
                          )
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "div",
                        { staticClass: "col-lg-4" },
                        [
                          _c("label", [_vm._v("Techo Adecuado:")]),
                          _vm._v(" "),
                          _c(
                            "b-form-select",
                            {
                              model: {
                                value: _vm.viviendaData.techo_adecuado,
                                callback: function($$v) {
                                  _vm.$set(
                                    _vm.viviendaData,
                                    "techo_adecuado",
                                    typeof $$v === "string" ? $$v.trim() : $$v
                                  )
                                },
                                expression: "viviendaData.techo_adecuado"
                              }
                            },
                            [
                              _c(
                                "option",
                                { attrs: { value: "", selected: "" } },
                                [_vm._v("Seleccione")]
                              ),
                              _vm._v(" "),
                              _c("option", { attrs: { value: "NA" } }, [
                                _vm._v("No Aplica")
                              ]),
                              _vm._v(" "),
                              _c("option", { attrs: { value: "SI" } }, [
                                _vm._v("SI")
                              ]),
                              _vm._v(" "),
                              _c("option", { attrs: { value: "NO" } }, [
                                _vm._v("NO")
                              ])
                            ]
                          )
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "div",
                        { staticClass: "col-lg-4" },
                        [
                          _c("label", [_vm._v("Ventilación Adecuada:")]),
                          _vm._v(" "),
                          _c(
                            "b-form-select",
                            {
                              model: {
                                value: _vm.viviendaData.ventilacion_adecuada,
                                callback: function($$v) {
                                  _vm.$set(
                                    _vm.viviendaData,
                                    "ventilacion_adecuada",
                                    typeof $$v === "string" ? $$v.trim() : $$v
                                  )
                                },
                                expression: "viviendaData.ventilacion_adecuada"
                              }
                            },
                            [
                              _c(
                                "option",
                                { attrs: { value: "", selected: "" } },
                                [_vm._v("Seleccione")]
                              ),
                              _vm._v(" "),
                              _c("option", { attrs: { value: "NA" } }, [
                                _vm._v("No Aplica")
                              ]),
                              _vm._v(" "),
                              _c("option", { attrs: { value: "SI" } }, [
                                _vm._v("SI")
                              ]),
                              _vm._v(" "),
                              _c("option", { attrs: { value: "NO" } }, [
                                _vm._v("NO")
                              ])
                            ]
                          )
                        ],
                        1
                      )
                    ]
                  ),
                  _vm._v(" "),
                  _c(
                    "div",
                    {
                      staticClass: "form-group row",
                      staticStyle: { display: "none" }
                    },
                    [
                      _c(
                        "div",
                        { staticClass: "col-lg-4" },
                        [
                          _c("label", [_vm._v("Pisos Adecuados:")]),
                          _vm._v(" "),
                          _c(
                            "b-form-select",
                            {
                              model: {
                                value: _vm.viviendaData.pisos_adecuado,
                                callback: function($$v) {
                                  _vm.$set(
                                    _vm.viviendaData,
                                    "pisos_adecuado",
                                    typeof $$v === "string" ? $$v.trim() : $$v
                                  )
                                },
                                expression: "viviendaData.pisos_adecuado"
                              }
                            },
                            [
                              _c(
                                "option",
                                { attrs: { value: "", selected: "" } },
                                [_vm._v("Seleccione")]
                              ),
                              _vm._v(" "),
                              _c("option", { attrs: { value: "NA" } }, [
                                _vm._v("No Aplica")
                              ]),
                              _vm._v(" "),
                              _c("option", { attrs: { value: "SI" } }, [
                                _vm._v("SI")
                              ]),
                              _vm._v(" "),
                              _c("option", { attrs: { value: "NO" } }, [
                                _vm._v("NO")
                              ])
                            ]
                          )
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "div",
                        { staticClass: "col-lg-4" },
                        [
                          _c("label", [_vm._v("Paredes Adecuadas:")]),
                          _vm._v(" "),
                          _c(
                            "b-form-select",
                            {
                              model: {
                                value: _vm.viviendaData.paredes_adecuadas,
                                callback: function($$v) {
                                  _vm.$set(
                                    _vm.viviendaData,
                                    "paredes_adecuadas",
                                    typeof $$v === "string" ? $$v.trim() : $$v
                                  )
                                },
                                expression: "viviendaData.paredes_adecuadas"
                              }
                            },
                            [
                              _c(
                                "option",
                                { attrs: { value: "", selected: "" } },
                                [_vm._v("Seleccione")]
                              ),
                              _vm._v(" "),
                              _c("option", { attrs: { value: "NA" } }, [
                                _vm._v("No Aplica")
                              ]),
                              _vm._v(" "),
                              _c("option", { attrs: { value: "SI" } }, [
                                _vm._v("SI")
                              ]),
                              _vm._v(" "),
                              _c("option", { attrs: { value: "NO" } }, [
                                _vm._v("NO")
                              ])
                            ]
                          )
                        ],
                        1
                      )
                    ]
                  ),
                  _vm._v(" "),
                  _vm._m(17),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Gasolina:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid": _vm.$v.viviendaData.gasolina.$error,
                              "is-valid": !_vm.$v.viviendaData.gasolina.$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.gasolina.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.gasolina,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.gasolina.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Gasolina Valida")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.gasolina.required
                            ? _c("span", [_vm._v("La Gasolina es obligatoria")])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Plaguicidas Agricolas:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.plaguicidas.$error,
                              "is-valid": !_vm.$v.viviendaData.plaguicidas
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.plaguicidas.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.plaguicidas,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.plaguicidas.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Plaguicidas Agricolas Validas")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.plaguicidas.required
                            ? _c("span", [
                                _vm._v(
                                  "Los Plaguicidas Agricolas es obligatoria"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Detergentes/Desifectantes:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.detergentes.$error,
                              "is-valid": !_vm.$v.viviendaData.detergentes
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.detergentes.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.detergentes,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.detergentes.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Detergentes/Desifectantes Validos")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.detergentes.required
                            ? _c("span", [
                                _vm._v(
                                  "Los Detergentes/Desifectantes son obligatorios"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-3" },
                      [
                        _c("label", [_vm._v("Plaguicidas Para Insectos:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.plaguicidas_insectos.$error,
                              "is-valid": !_vm.$v.viviendaData
                                .plaguicidas_insectos.$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.plaguicidas_insectos.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.plaguicidas_insectos,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.plaguicidas_insectos.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Plaguicidas Para Insectos Validos")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.plaguicidas_insectos.required
                            ? _c("span", [
                                _vm._v(
                                  "Los Plaguicidas Para Insectos son obligatoria"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-6" },
                      [
                        _c("label", [
                          _vm._v(
                            "Uso Final Que Le Dan A Los Envases Vacios De Los Plaguicidas:"
                          )
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.envases_vacios.$error,
                              "is-valid": !_vm.$v.viviendaData.envases_vacios
                                .$invalid
                            },
                            on: {
                              change: function($event) {
                                return _vm.mostrarOtro("EV")
                              }
                            },
                            model: {
                              value: _vm.$v.viviendaData.envases_vacios.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.envases_vacios,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.envases_vacios.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("NO APLICA")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Guardar alimentos y agua")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Para varios usos en el hogar")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Los botan a la basura")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("Los entierran")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "6" } }, [
                              _vm._v("Los queman")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "7" } }, [
                              _vm._v("Otro")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v(
                            "Uso Final Que Le Dan A Los Envases Vacios De Los Plaguicidas Valida"
                          )
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.envases_vacios.required
                            ? _c("span", [
                                _vm._v(
                                  "El Uso Final Que Le Dan A Los Envases Vacios De Los Plaguicidas es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.mOEV,
                            expression: "mOEV"
                          }
                        ],
                        staticClass: "col-lg-6"
                      },
                      [
                        _c("label", [_vm._v("Cual:")]),
                        _vm._v(" "),
                        _c("input", {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model.trim",
                              value: _vm.viviendaData.otro_envases_vacios,
                              expression: "viviendaData.otro_envases_vacios",
                              modifiers: { trim: true }
                            }
                          ],
                          staticClass: "form-control text-capitalize",
                          class:
                            _vm.viviendaData.otro_envases_vacios == ""
                              ? ""
                              : "is-valid",
                          attrs: { type: "text", placeholder: "Cual" },
                          domProps: {
                            value: _vm.viviendaData.otro_envases_vacios
                          },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.$set(
                                _vm.viviendaData,
                                "otro_envases_vacios",
                                $event.target.value.trim()
                              )
                            },
                            blur: function($event) {
                              return _vm.$forceUpdate()
                            }
                          }
                        })
                      ]
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-6" },
                      [
                        _c("label", [
                          _vm._v(
                            "Con Que Tipo De Elementos Se Protegen Contra Animales,Plagas:"
                          )
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.elementos_protecion.$error,
                              "is-valid": !_vm.$v.viviendaData
                                .elementos_protecion.$invalid
                            },
                            on: {
                              change: function($event) {
                                return _vm.mostrarOtro("EP")
                              }
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.elementos_protecion.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.elementos_protecion,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.elementos_protecion.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Toldillos/mosquiteros")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Anjeos")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Fumigación con insecticidas/plaguicidas")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Raticidas")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("Otro")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "6" } }, [
                              _vm._v("Ninguna")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "7" } }, [
                              _vm._v("No aplica")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v(
                            "Con Que Tipo De Elementos Se Protegen Contra Animales,Plagas Valido"
                          )
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.elementos_protecion.required
                            ? _c("span", [
                                _vm._v(
                                  "El Tipo De Elementos Con Que Se Protegen Contra Animales,Plagas es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.mOEP,
                            expression: "mOEP"
                          }
                        ],
                        staticClass: "col-lg-6"
                      },
                      [
                        _c("label", [_vm._v("Cual:")]),
                        _vm._v(" "),
                        _c("input", {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model.trim",
                              value: _vm.viviendaData.otro_elementos_protecion,
                              expression:
                                "viviendaData.otro_elementos_protecion",
                              modifiers: { trim: true }
                            }
                          ],
                          staticClass: "form-control text-capitalize",
                          class:
                            _vm.viviendaData.otro_elementos_protecion == ""
                              ? ""
                              : "is-valid",
                          attrs: { type: "text", placeholder: "Cual" },
                          domProps: {
                            value: _vm.viviendaData.otro_elementos_protecion
                          },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.$set(
                                _vm.viviendaData,
                                "otro_elementos_protecion",
                                $event.target.value.trim()
                              )
                            },
                            blur: function($event) {
                              return _vm.$forceUpdate()
                            }
                          }
                        })
                      ]
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-6" },
                      [
                        _c("label", [
                          _vm._v("Metodo de cocción de los alimentos:")
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.metodos_coccion.$error,
                              "is-valid": !_vm.$v.viviendaData.metodos_coccion
                                .$invalid
                            },
                            on: {
                              change: function($event) {
                                return _vm.mostrarOtro("MC")
                              }
                            },
                            model: {
                              value: _vm.$v.viviendaData.metodos_coccion.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.metodos_coccion,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.metodos_coccion.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Estufa a gas")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Estufa electrica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Estufa a gasolina")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Leña")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("Carbon")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "6" } }, [
                              _vm._v("Otro")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Metodo de cocción de los alimentos Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.metodos_coccion.required
                            ? _c("span", [
                                _vm._v(
                                  "El Metodo de cocción de los alimentos es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.mOMC,
                            expression: "mOMC"
                          }
                        ],
                        staticClass: "col-lg-6"
                      },
                      [
                        _c("label", [_vm._v("Cual:")]),
                        _vm._v(" "),
                        _c("input", {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model.trim",
                              value: _vm.viviendaData.otro_metodos_coccion,
                              expression: "viviendaData.otro_metodos_coccion",
                              modifiers: { trim: true }
                            }
                          ],
                          staticClass: "form-control text-capitalize",
                          class:
                            _vm.viviendaData.otro_metodos_coccion == ""
                              ? ""
                              : "is-valid",
                          attrs: { type: "text", placeholder: "Cual" },
                          domProps: {
                            value: _vm.viviendaData.otro_metodos_coccion
                          },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.$set(
                                _vm.viviendaData,
                                "otro_metodos_coccion",
                                $event.target.value.trim()
                              )
                            },
                            blur: function($event) {
                              return _vm.$forceUpdate()
                            }
                          }
                        })
                      ]
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-6" },
                      [
                        _c("label", [
                          _vm._v(
                            "En cual de los siguientes lugares preparan los alimentos:"
                          )
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.lugares_preparan_alimentos
                                  .$error,
                              "is-valid": !_vm.$v.viviendaData
                                .lugares_preparan_alimentos.$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.lugares_preparan_alimentos
                                  .$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData
                                    .lugares_preparan_alimentos,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.lugares_preparan_alimentos.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("En un cuarto usado solo para cocinar")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("En un cuarto usado tambien para dormir")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("En una sala comedor con lavaplatos")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("En una sala comedor sin lavaplatos")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("En un patio comedor al aire libre")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "6" } }, [
                              _vm._v("En ninguna parte(no preparan alimentos)")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v(
                            "En cual de los siguientes lugares preparan los alimentos Valido"
                          )
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.lugares_preparan_alimentos
                            .required
                            ? _c("span", [
                                _vm._v(
                                  "En cual de los siguientes lugares preparan los alimentos es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-6" },
                      [
                        _c("label", [
                          _vm._v(
                            "Antes de consumir frutas y verduras las lava:"
                          )
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.lava_frutas.$error,
                              "is-valid": !_vm.$v.viviendaData.lava_frutas
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.lava_frutas.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.lava_frutas,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.lava_frutas.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v(
                            "Antes de consumir frutas y verduras las lava Valida"
                          )
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.lava_frutas.required
                            ? _c("span", [
                                _vm._v(
                                  "Antes de consumir frutas y verduras las lava es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-6" },
                      [
                        _c("label", [_vm._v("Como conserva los alimentos:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.lugares_almacenan_alimentos
                                  .$error,
                              "is-valid": !_vm.$v.viviendaData
                                .lugares_almacenan_alimentos.$invalid
                            },
                            on: {
                              change: function($event) {
                                return _vm.mostrarOtro("AA")
                              }
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.lugares_almacenan_alimentos
                                  .$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData
                                    .lugares_almacenan_alimentos,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.lugares_almacenan_alimentos.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Refrigerador")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Recipientes Abiertos")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Recipientes Cerrados")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Al aire libre dentro de la casa")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("AL aire libre fuera de la casa")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "6" } }, [
                              _vm._v("Otro")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Metodo de cocción de los alimentos Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.lugares_almacenan_alimentos
                            .required
                            ? _c("span", [
                                _vm._v(
                                  "El Metodo de cocción de los alimentos es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.mOAA,
                            expression: "mOAA"
                          }
                        ],
                        staticClass: "col-lg-6"
                      },
                      [
                        _c("label", [_vm._v("Cual:")]),
                        _vm._v(" "),
                        _c("input", {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model.trim",
                              value:
                                _vm.viviendaData
                                  .otro_lugares_almacenan_alimentos,
                              expression:
                                "viviendaData.otro_lugares_almacenan_alimentos",
                              modifiers: { trim: true }
                            }
                          ],
                          staticClass: "form-control text-capitalize",
                          class:
                            _vm.viviendaData.otro_lugares_almacenan_alimentos ==
                            ""
                              ? ""
                              : "is-valid",
                          attrs: { type: "text", placeholder: "Cual" },
                          domProps: {
                            value:
                              _vm.viviendaData.otro_lugares_almacenan_alimentos
                          },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.$set(
                                _vm.viviendaData,
                                "otro_lugares_almacenan_alimentos",
                                $event.target.value.trim()
                              )
                            },
                            blur: function($event) {
                              return _vm.$forceUpdate()
                            }
                          }
                        })
                      ]
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-6" },
                      [
                        _c("label", [
                          _vm._v(
                            "¿Qué tipo de explotación se le está dando al suelo?:"
                          )
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.tipo_explotacion.$error,
                              "is-valid": !_vm.$v.viviendaData.tipo_explotacion
                                .$invalid
                            },
                            on: {
                              change: function($event) {
                                return _vm.mostrarOtro("ES")
                              }
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.tipo_explotacion.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.tipo_explotacion,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.tipo_explotacion.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Forestal")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Ganadería")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Agricultura")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Urbanístico")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("Otro")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v(
                            "Qué tipo de explotación se le está dando al suelo Valido"
                          )
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.tipo_explotacion.required
                            ? _c("span", [
                                _vm._v(
                                  "Qué tipo de explotación se le está dando al suelo es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.mOES,
                            expression: "mOES"
                          }
                        ],
                        staticClass: "col-lg-6"
                      },
                      [
                        _c("label", [_vm._v("Cual:")]),
                        _vm._v(" "),
                        _c("input", {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model.trim",
                              value: _vm.viviendaData.otro_tipo_explotacion,
                              expression: "viviendaData.otro_tipo_explotacion",
                              modifiers: { trim: true }
                            }
                          ],
                          staticClass: "form-control text-capitalize",
                          class:
                            _vm.viviendaData.otro_tipo_explotacion == ""
                              ? ""
                              : "is-valid",
                          attrs: { type: "text", placeholder: "Cual" },
                          domProps: {
                            value: _vm.viviendaData.otro_tipo_explotacion
                          },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.$set(
                                _vm.viviendaData,
                                "otro_tipo_explotacion",
                                $event.target.value.trim()
                              )
                            },
                            blur: function($event) {
                              return _vm.$forceUpdate()
                            }
                          }
                        })
                      ]
                    )
                  ]),
                  _vm._v(" "),
                  _vm._m(18),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Residuos Aprovechables:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.residuos_aprovechables
                                  .$error,
                              "is-valid": !_vm.$v.viviendaData
                                .residuos_aprovechables.$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.residuos_aprovechables
                                  .$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.residuos_aprovechables,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.residuos_aprovechables.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Residuos Aprovechables Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.residuos_aprovechables.required
                            ? _c("span", [
                                _vm._v("Residuos Aprovechables es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Residuos Organicos:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.residuos_organicos.$error,
                              "is-valid": !_vm.$v.viviendaData
                                .residuos_organicos.$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.residuos_organicos.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.residuos_organicos,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.residuos_organicos.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Residuos Organicos Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.residuos_organicos.required
                            ? _c("span", [
                                _vm._v("Residuos Organicos es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Residuos No Aprovechables:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.residuos_no_aprovechables
                                  .$error,
                              "is-valid": !_vm.$v.viviendaData
                                .residuos_no_aprovechables.$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.residuos_no_aprovechables
                                  .$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.residuos_no_aprovechables,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.residuos_no_aprovechables.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Residuos No Aprovechables Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.residuos_no_aprovechables
                            .required
                            ? _c("span", [
                                _vm._v(
                                  "Residuos No Aprovechables es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Otros:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.otros_genera.$error,
                              "is-valid": !_vm.$v.viviendaData.otros_genera
                                .$invalid
                            },
                            on: {
                              change: function($event) {
                                return _vm.mostrarOtro("OG")
                              }
                            },
                            model: {
                              value: _vm.$v.viviendaData.otros_genera.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.otros_genera,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.otros_genera.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Otros Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.otros_genera.required
                            ? _c("span", [_vm._v("Otros es obligatorio")])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.mOOG,
                            expression: "mOOG"
                          }
                        ],
                        staticClass: "col-lg-12"
                      },
                      [
                        _c("label", [_vm._v("Cual:")]),
                        _vm._v(" "),
                        _c("input", {
                          directives: [
                            {
                              name: "model",
                              rawName: "v-model.trim",
                              value: _vm.viviendaData.cual_genera,
                              expression: "viviendaData.cual_genera",
                              modifiers: { trim: true }
                            }
                          ],
                          staticClass: "form-control text-capitalize",
                          class:
                            _vm.viviendaData.cual_genera == ""
                              ? ""
                              : "is-valid",
                          attrs: { type: "text", placeholder: "Cual" },
                          domProps: { value: _vm.viviendaData.cual_genera },
                          on: {
                            input: function($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.$set(
                                _vm.viviendaData,
                                "cual_genera",
                                $event.target.value.trim()
                              )
                            },
                            blur: function($event) {
                              return _vm.$forceUpdate()
                            }
                          }
                        })
                      ]
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", {
                    staticClass: "kt-separator kt-separator--border-dashed"
                  }),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-6" },
                      [
                        _c("label", [
                          _vm._v(
                            "¿Cuál es el tipo de combustible utilizado en su casa para cocinar?:"
                          )
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.tipo_combustible.$error,
                              "is-valid": !_vm.$v.viviendaData.tipo_combustible
                                .$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.tipo_combustible.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.tipo_combustible,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.tipo_combustible.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Luz eléctrica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Gasolina")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Leña")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Carbón")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("Gas natural")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v(
                            "Cuál es el tipo de combustible utilizado en su casa para cocinar Valido"
                          )
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.tipo_combustible.required
                            ? _c("span", [
                                _vm._v(
                                  "Cuál es el tipo de combustible utilizado en su casa para cocinar es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-5" },
                      [
                        _c("label", [
                          _vm._v(
                            "Su vivienda se encuentra en una zona de alto riesgo:"
                          )
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.zona_alto_riesgo.$error,
                              "is-valid": !_vm.$v.viviendaData.zona_alto_riesgo
                                .$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.zona_alto_riesgo.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.zona_alto_riesgo,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.zona_alto_riesgo.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "0" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Ladera")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Cuerpos de agua")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("suelo inestable, derrumbes")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v(
                            "Su vivienda se encuentra en una zona de alto riesgo Valido"
                          )
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.zona_alto_riesgo.required
                            ? _c("span", [
                                _vm._v(
                                  "Su vivienda se encuentra en una zona de alto riesgo es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-7" },
                      [
                        _c("label", [
                          _vm._v(
                            "¿Existe un lugar apto para el almacenamiento de los residuos antes de la recolección?:"
                          )
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.almacenamiento_residuos
                                  .$error,
                              "is-valid": !_vm.$v.viviendaData
                                .almacenamiento_residuos.$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.almacenamiento_residuos
                                  .$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.almacenamiento_residuos,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.almacenamiento_residuos.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v(
                            "Existe un lugar apto para el almacenamiento de los residuos antes de la recolección Valido"
                          )
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.almacenamiento_residuos.required
                            ? _c("span", [
                                _vm._v(
                                  "Existe un lugar apto para el almacenamiento de los residuos antes de la recolección es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-6" },
                      [
                        _c("label", [
                          _vm._v(
                            "¿Se presenta en tu barrio problemáticas de aguas negras?:"
                          )
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.aguas_negras.$error,
                              "is-valid": !_vm.$v.viviendaData.aguas_negras
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.aguas_negras.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.aguas_negras,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.aguas_negras.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "FRECUENTE" } }, [
                              _vm._v("FRECUENTE")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NUNCA" } }, [
                              _vm._v("NUNCA")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "OCASIONAL" } }, [
                              _vm._v("OCASIONAL")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v(
                            "Se presenta en tu barrio problemáticas de aguas negras Valida"
                          )
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.aguas_negras.required
                            ? _c("span", [
                                _vm._v(
                                  "Se presenta en tu barrio problemáticas de aguas negras es obligatoria"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-6" },
                      [
                        _c("label", [
                          _vm._v(
                            "Considera que su comunidad posee adecuadas zonas verdes como parques:"
                          )
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.zonas_verdes.$error,
                              "is-valid": !_vm.$v.viviendaData.zonas_verdes
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.zonas_verdes.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.zonas_verdes,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.zonas_verdes.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("SI HAY")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("NO HAY")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("SI HAY EN MAL ESTADO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v(
                            "Considera usted que su comunidad posee adecuadas zonas verdes como parques Valido"
                          )
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.zonas_verdes.required
                            ? _c("span", [
                                _vm._v(
                                  "Considera usted que su comunidad posee adecuadas zonas verdes como parques es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-6" },
                      [
                        _c("label", [
                          _vm._v(
                            "Cuantas veces los deslizamientos afectaron su comunidad o su vivienda:"
                          )
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.desplazamientos.$error,
                              "is-valid": !_vm.$v.viviendaData.desplazamientos
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.desplazamientos.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.desplazamientos,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.desplazamientos.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Más de 2 veces al año")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Al menos una vez al año")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Una vez cada 2 años")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Nunca")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v(
                            "Cuantas veces los deslizamientos afectaron su comunidad o su vivienda Valida"
                          )
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.desplazamientos.required
                            ? _c("span", [
                                _vm._v(
                                  "Cuantas veces los deslizamientos afectaron su comunidad o su vivienda es obligatoria"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-6" },
                      [
                        _c("label", [
                          _vm._v("¿Realiza usted rotación del cultivo? :")
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.rotacion_cultivo.$error,
                              "is-valid": !_vm.$v.viviendaData.rotacion_cultivo
                                .$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.rotacion_cultivo.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.rotacion_cultivo,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.rotacion_cultivo.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Permanentemente")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Nunca")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Ocasional")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Periódicamente")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("No aplica")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Realiza usted rotación del cultivo Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.rotacion_cultivo.required
                            ? _c("span", [
                                _vm._v(
                                  "Realiza usted rotación del cultivo es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-6" },
                      [
                        _c("label", [
                          _vm._v(
                            "Emplea fertilizantes químicos o plaguicidas en su actividad:"
                          )
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.emplea_fertilizantes.$error,
                              "is-valid": !_vm.$v.viviendaData
                                .emplea_fertilizantes.$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.emplea_fertilizantes.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.emplea_fertilizantes,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.emplea_fertilizantes.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No aplica")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v(
                            "Emplea fertilizantes químicos o plaguicidas en su actividad Valida"
                          )
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.emplea_fertilizantes.required
                            ? _c("span", [
                                _vm._v(
                                  "Emplea fertilizantes químicos o plaguicidas en su actividad es obligatoria"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-6" },
                      [
                        _c("label", [
                          _vm._v("¿Usted realiza quema de cultivo?:")
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.quema_cultivo.$error,
                              "is-valid": !_vm.$v.viviendaData.quema_cultivo
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.quema_cultivo.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.quema_cultivo,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.quema_cultivo.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Usted realiza quema de cultivo Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.quema_cultivo.required
                            ? _c("span", [
                                _vm._v(
                                  "Usted realiza quema de cultivo es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-12" },
                      [
                        _c("label", [
                          _vm._v(
                            "¿ha evidenciado usted mantenimiento preventivo a la red de alcantarillado en su comunidad?:"
                          )
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.mantenimiento_preventivo
                                  .$error,
                              "is-valid": !_vm.$v.viviendaData
                                .mantenimiento_preventivo.$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.mantenimiento_preventivo
                                  .$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.mantenimiento_preventivo,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.mantenimiento_preventivo.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Permanentemente")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Nunca")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Ocasional")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Periódicamente")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v(
                            "ha evidenciado usted mantenimiento preventivo a la red de alcantarillado en su comunidad Valida"
                          )
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.mantenimiento_preventivo.required
                            ? _c("span", [
                                _vm._v(
                                  "ha evidenciado usted mantenimiento preventivo a la red de alcantarillado en su comunidad es obligatoria"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-6" },
                      [
                        _c("label", [
                          _vm._v(
                            "Cuantas veces las inundaciones afectaron su comunidad o su vivienda:"
                          )
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.veces_inundaciones.$error,
                              "is-valid": !_vm.$v.viviendaData
                                .veces_inundaciones.$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.veces_inundaciones.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.veces_inundaciones,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.veces_inundaciones.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Más de 2 veces al año")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Al menos una vez al año")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Una vez cada 2 años")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Nunca")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v(
                            "Cuantas veces las inundaciones afectaron su comunidad o su vivienda Valida"
                          )
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.veces_inundaciones.required
                            ? _c("span", [
                                _vm._v(
                                  "Cuantas veces las inundaciones afectaron su comunidad o su vivienda es obligatoria"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Fachada de la casa:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid": _vm.$v.viviendaData.fachada.$error,
                              "is-valid": !_vm.$v.viviendaData.fachada.$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.fachada.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.fachada,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.fachada.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Pobre")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Sencilla")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Regular")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Buena")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("Lujosa")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Fachada de la casa Valida")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.fachada.required
                            ? _c("span", [
                                _vm._v("Fachada de la casa es obligatoria")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [
                          _vm._v("¿Cuantos baños de uso exclusivo tiene?:")
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.cuantos_baños.$error,
                              "is-valid": !_vm.$v.viviendaData.cuantos_baños
                                .$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.cuantos_baños.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.cuantos_baños,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.cuantos_baños.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("No posee baño de uso exclusivo")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("1 Baño")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("2 Baños")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("3 Baños ó mas")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Baños de uso exclusivo Validos")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.cuantos_baños.required
                            ? _c("span", [
                                _vm._v(
                                  "Baños de uso exclusivo son obligatorios"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [
                          _vm._v("Estado de conservacion de los baños:")
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.estado_conservacion_baños
                                  .$error,
                              "is-valid": !_vm.$v.viviendaData
                                .estado_conservacion_baños.$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.estado_conservacion_baños
                                  .$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.estado_conservacion_baños,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.estado_conservacion_baños.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Malo")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Regular")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Bueno")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Excelente")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Estado de conservacion de los baños Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.estado_conservacion_baños
                            .required
                            ? _c("span", [
                                _vm._v(
                                  "Estado de conservacion de los baños es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [
                          _vm._v("Acabados externos de los muros ó paredes:")
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.acabados_externos.$error,
                              "is-valid": !_vm.$v.viviendaData.acabados_externos
                                .$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.acabados_externos.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.acabados_externos,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.acabados_externos.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Sin cubrimiento")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Pañete ó ladrillos presado")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Estuco, Cerámica, Papel de Colgadura")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Madera Piedra Ornamental")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "5" } }, [
                              _vm._v("Marmol, lujoso")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Acabados externos de los muros Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.acabados_externos.required
                            ? _c("span", [
                                _vm._v(
                                  "Acabados externos de los muros es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [
                          _vm._v(
                            "Estado de Conservacion de las estructuras de la Vivienda:"
                          )
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData
                                  .estado_conservacion_estructuras.$error,
                              "is-valid": !_vm.$v.viviendaData
                                .estado_conservacion_estructuras.$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData
                                  .estado_conservacion_estructuras.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData
                                    .estado_conservacion_estructuras,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.estado_conservacion_estructuras.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Malo")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Regular")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Bueno")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Excelente")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v(
                            "Estado de Conservacion de las estructuras de la Vivienda Valido"
                          )
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.estado_conservacion_estructuras
                            .required
                            ? _c("span", [
                                _vm._v(
                                  "Estado de Conservacion de las estructuras de la Vivienda es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Mobiliario de la cocina:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid":
                                _vm.$v.viviendaData.mobiliario_cocina.$error,
                              "is-valid": !_vm.$v.viviendaData.mobiliario_cocina
                                .$invalid
                            },
                            model: {
                              value:
                                _vm.$v.viviendaData.mobiliario_cocina.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.mobiliario_cocina,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "$v.viviendaData.mobiliario_cocina.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("Pobre")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Sencillo")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Regular")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "4" } }, [
                              _vm._v("Excelente")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v("Mobiliario de la cocina Valido")
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.mobiliario_cocina.required
                            ? _c("span", [
                                _vm._v("Mobiliario de la cocina es obligatorio")
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [
                          _vm._v(
                            "¿Estado de los andenes y bordillo de la vivienda?:"
                          )
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class: {
                              "is-invalid": _vm.$v.viviendaData.andenes.$error,
                              "is-valid": !_vm.$v.viviendaData.andenes.$invalid
                            },
                            model: {
                              value: _vm.$v.viviendaData.andenes.$model,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.$v.viviendaData.andenes,
                                  "$model",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "$v.viviendaData.andenes.$model"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "1" } }, [
                              _vm._v("No tiene.")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "2" } }, [
                              _vm._v("Si tiene, pavimentado")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "3" } }, [
                              _vm._v("Si tiene en mal estado")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", { staticClass: "valid-feedback" }, [
                          _vm._v(
                            "Estado de los andenes y bordillo de la vivienda Valido"
                          )
                        ]),
                        _vm._v(" "),
                        _c("div", { staticClass: "invalid-feedback" }, [
                          !_vm.$v.viviendaData.andenes.required
                            ? _c("span", [
                                _vm._v(
                                  "Estado de los andenes y bordillo de la vivienda es obligatorio"
                                )
                              ])
                            : _vm._e()
                        ])
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _vm._m(19),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-6" },
                      [
                        _c("label", [_vm._v("Jefe del hogar:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.estratificacionData.id_jefe == "0"
                                ? ""
                                : "is-valid",
                            on: {
                              change: function($event) {
                                return _vm.cambiarNivel(
                                  _vm.estratificacionData.id_jefe
                                )
                              }
                            },
                            model: {
                              value: _vm.estratificacionData.id_jefe,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.estratificacionData,
                                  "id_jefe",
                                  $$v
                                )
                              },
                              expression: "estratificacionData.id_jefe"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "0", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.datosJefe, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.identificacion }
                                },
                                [
                                  _vm._v(
                                    _vm._s(item.pnom.toUpperCase()) +
                                      " " +
                                      _vm._s(item.snom.toUpperCase()) +
                                      " " +
                                      _vm._s(item.pape.toUpperCase()) +
                                      " " +
                                      _vm._s(item.sape.toUpperCase())
                                  )
                                ]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-6" },
                      [
                        _c("label", [
                          _vm._v(
                            "¿Cual es el nivel de Instrucción del jefe del Hogar?:"
                          )
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.estratificacionData.nivel_instruccion == ""
                                ? ""
                                : "is-valid",
                            model: {
                              value: _vm.estratificacionData.nivel_instruccion,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.estratificacionData,
                                  "nivel_instruccion",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "estratificacionData.nivel_instruccion"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.escolaridad_options, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [
                          _vm._v("¿Cuenta ese Hogar con Internet?:")
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.estratificacionData.cuenta_internet == ""
                                ? ""
                                : "is-valid",
                            model: {
                              value: _vm.estratificacionData.cuenta_internet,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.estratificacionData,
                                  "cuenta_internet",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "estratificacionData.cuenta_internet"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [
                          _vm._v("¿Tiene computador de Escritorío?:")
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.estratificacionData.tiene_pc_escritorio == ""
                                ? ""
                                : "is-valid",
                            model: {
                              value:
                                _vm.estratificacionData.tiene_pc_escritorio,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.estratificacionData,
                                  "tiene_pc_escritorio",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "estratificacionData.tiene_pc_escritorio"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("¿Tiene Computador Portatil?:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.estratificacionData.tiene_pc_portatil == ""
                                ? ""
                                : "is-valid",
                            model: {
                              value: _vm.estratificacionData.tiene_pc_portatil,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.estratificacionData,
                                  "tiene_pc_portatil",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "estratificacionData.tiene_pc_portatil"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [
                          _vm._v("¿Cuantos celulares en uso hay en el Hogar?:")
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.estratificacionData.cuantos_celulares == ""
                                ? ""
                                : "is-valid",
                            model: {
                              value: _vm.estratificacionData.cuantos_celulares,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.estratificacionData,
                                  "cuantos_celulares",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "estratificacionData.cuantos_celulares"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.opciones1, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Tiene Equipo de sonido:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.estratificacionData.tiene_equipo_sonido == ""
                                ? ""
                                : "is-valid",
                            model: {
                              value:
                                _vm.estratificacionData.tiene_equipo_sonido,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.estratificacionData,
                                  "tiene_equipo_sonido",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "estratificacionData.tiene_equipo_sonido"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-4" },
                      [
                        _c("label", [_vm._v("Cuantos Tv a Color:")]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.estratificacionData.cuantos_tv_color == ""
                                ? ""
                                : "is-valid",
                            model: {
                              value: _vm.estratificacionData.cuantos_tv_color,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.estratificacionData,
                                  "cuantos_tv_color",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "estratificacionData.cuantos_tv_color"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.opciones2, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-6" },
                      [
                        _c("label", [
                          _vm._v(
                            "Cuantos Vehiculos de Uso exclusivo tiene el Hogar:"
                          )
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.estratificacionData.cuantos_vehiculos == ""
                                ? ""
                                : "is-valid",
                            model: {
                              value: _vm.estratificacionData.cuantos_vehiculos,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.estratificacionData,
                                  "cuantos_vehiculos",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "estratificacionData.cuantos_vehiculos"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.opciones3, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-7" },
                      [
                        _c("label", [
                          _vm._v(
                            "¿Alguien en el Hogar posee afiliación de salud Privada o contribituva, prepagada ?:"
                          )
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.estratificacionData
                                .afiliacion_salud_privada == ""
                                ? ""
                                : "is-valid",
                            model: {
                              value:
                                _vm.estratificacionData
                                  .afiliacion_salud_privada,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.estratificacionData,
                                  "afiliacion_salud_privada",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "estratificacionData.afiliacion_salud_privada"
                            }
                          },
                          [
                            _c(
                              "option",
                              { attrs: { value: "", selected: "" } },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NA" } }, [
                              _vm._v("No Aplica")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "SI" } }, [
                              _vm._v("SI")
                            ]),
                            _vm._v(" "),
                            _c("option", { attrs: { value: "NO" } }, [
                              _vm._v("NO")
                            ])
                          ]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "col-lg-5" },
                      [
                        _c("label", [
                          _vm._v("¿Ingresos mensuales por Hogar zona rural?:")
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.estratificacionData.ingresos_zona_rural == ""
                                ? ""
                                : "is-valid",
                            model: {
                              value:
                                _vm.estratificacionData.ingresos_zona_rural,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.estratificacionData,
                                  "ingresos_zona_rural",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression:
                                "estratificacionData.ingresos_zona_rural"
                            }
                          },
                          [
                            _c(
                              "option",
                              {
                                attrs: {
                                  value: "",
                                  selected: "",
                                  disabled:
                                    _vm.hogar.id_zona == "" ||
                                    _vm.hogar.id_zona == 0 ||
                                    _vm.hogar.id_zona == 1
                                }
                              },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.opciones5, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  attrs: {
                                    disabled:
                                      _vm.hogar.id_zona == "" ||
                                      _vm.hogar.id_zona == 0 ||
                                      _vm.hogar.id_zona == 1
                                  },
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c(
                      "div",
                      { staticClass: "col-lg-5" },
                      [
                        _c("label", [
                          _vm._v(
                            "¿Ingresos mensuales por Hogar en zona urbana?:"
                          )
                        ]),
                        _vm._v(" "),
                        _c(
                          "b-form-select",
                          {
                            class:
                              _vm.estratificacionData.ingresos_ciudad == ""
                                ? ""
                                : "is-valid",
                            model: {
                              value: _vm.estratificacionData.ingresos_ciudad,
                              callback: function($$v) {
                                _vm.$set(
                                  _vm.estratificacionData,
                                  "ingresos_ciudad",
                                  typeof $$v === "string" ? $$v.trim() : $$v
                                )
                              },
                              expression: "estratificacionData.ingresos_ciudad"
                            }
                          },
                          [
                            _c(
                              "option",
                              {
                                attrs: {
                                  value: "",
                                  selected: "",
                                  disabled:
                                    _vm.hogar.id_zona == "" ||
                                    _vm.hogar.id_zona == 0 ||
                                    _vm.hogar.id_zona == 2 ||
                                    _vm.hogar.id_zona == 3
                                }
                              },
                              [_vm._v("Seleccione")]
                            ),
                            _vm._v(" "),
                            _vm._l(_vm.opciones6, function(item) {
                              return _c(
                                "option",
                                {
                                  key: item.value,
                                  attrs: {
                                    disabled:
                                      _vm.hogar.id_zona == "" ||
                                      _vm.hogar.id_zona == 0 ||
                                      _vm.hogar.id_zona == 2 ||
                                      _vm.hogar.id_zona == 3
                                  },
                                  domProps: { value: item.value }
                                },
                                [_vm._v(_vm._s(item.texto))]
                              )
                            })
                          ],
                          2
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-lg-2" }, [
                      _c("br"),
                      _vm._v(" "),
                      _c("label", [_vm._v("      ")]),
                      _vm._v(" "),
                      _c(
                        "a",
                        {
                          staticClass: "btn btn-outline-info btn-icon",
                          attrs: {
                            href: "javascript:;",
                            "data-skin": "dark",
                            "data-toggle": "kt-tooltip",
                            "data-placement": "top",
                            title: "Agregar"
                          },
                          on: {
                            click: function($event) {
                              $event.preventDefault()
                              return _vm.agregarEstratificacion($event)
                            }
                          }
                        },
                        [_c("i", { staticClass: "fa fa-plus" })]
                      ),
                      _vm._v(" \n              ")
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c("div", { staticClass: "table-responsive" }, [
                        _c(
                          "table",
                          { staticClass: "table table-sm table-hover" },
                          [
                            _vm._m(20),
                            _vm._v(" "),
                            _c(
                              "tbody",
                              _vm._l(_vm.estratificacion, function(
                                item,
                                index
                              ) {
                                return _c(
                                  "tr",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value: item.estado == "Activo",
                                        expression: "item.estado=='Activo'"
                                      }
                                    ],
                                    key: index
                                  },
                                  [
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle"
                                        }
                                      },
                                      [_vm._v(_vm._s(index + 1))]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "span",
                                          { staticClass: "text-capitalize" },
                                          [_vm._v(_vm._s(item.cuenta_internet))]
                                        )
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "span",
                                          { staticClass: "text-capitalize" },
                                          [
                                            _vm._v(
                                              _vm._s(item.tiene_pc_escritorio)
                                            )
                                          ]
                                        )
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "span",
                                          { staticClass: "text-capitalize" },
                                          [
                                            _vm._v(
                                              _vm._s(item.tiene_pc_portatil)
                                            )
                                          ]
                                        )
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "span",
                                          { staticClass: "text-capitalize" },
                                          [
                                            _vm._v(
                                              _vm._s(
                                                item.texto_cuantos_celulares
                                              )
                                            )
                                          ]
                                        )
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "span",
                                          { staticClass: "text-capitalize" },
                                          [
                                            _vm._v(
                                              _vm._s(item.tiene_equipo_sonido)
                                            )
                                          ]
                                        )
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "span",
                                          { staticClass: "text-capitalize" },
                                          [
                                            _vm._v(
                                              _vm._s(
                                                item.texto_cuantos_tv_color
                                              )
                                            )
                                          ]
                                        )
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "span",
                                          { staticClass: "text-capitalize" },
                                          [
                                            _vm._v(
                                              _vm._s(
                                                item.texto_cuantos_vehiculos
                                              )
                                            )
                                          ]
                                        )
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "span",
                                          { staticClass: "text-capitalize" },
                                          [
                                            _vm._v(
                                              _vm._s(
                                                item.texto_nivel_instruccion
                                              )
                                            )
                                          ]
                                        )
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "span",
                                          { staticClass: "text-capitalize" },
                                          [
                                            _vm._v(
                                              _vm._s(
                                                item.afiliacion_salud_privada
                                              )
                                            )
                                          ]
                                        )
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "span",
                                          { staticClass: "text-capitalize" },
                                          [
                                            _vm._v(
                                              _vm._s(
                                                item.texto_ingresos_zona_rural
                                              )
                                            )
                                          ]
                                        )
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "span",
                                          { staticClass: "text-capitalize" },
                                          [
                                            _vm._v(
                                              _vm._s(item.texto_ingresos_ciudad)
                                            )
                                          ]
                                        )
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "span",
                                          { staticClass: "text-capitalize" },
                                          [_vm._v(_vm._s(item.id_jefe))]
                                        )
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "text-align": "center",
                                          "vertical-align": "middle"
                                        }
                                      },
                                      [
                                        _c(
                                          "button",
                                          {
                                            staticClass:
                                              "btn btn-icon btn-sm btn-outline-danger",
                                            attrs: {
                                              type: "button",
                                              title: "Eliminar"
                                            },
                                            on: {
                                              click: function($event) {
                                                return _vm.eliminarItemEstratificacion(
                                                  index
                                                )
                                              }
                                            }
                                          },
                                          [
                                            _c("i", {
                                              staticClass: "fa fa-trash"
                                            })
                                          ]
                                        )
                                      ]
                                    )
                                  ]
                                )
                              }),
                              0
                            )
                          ]
                        ),
                        _vm._v(" "),
                        _c("div", {
                          staticClass:
                            "kt-separator kt-separator--border-dashed"
                        })
                      ])
                    ])
                  ])
                ]
              ),
              _vm._v(" "),
              _c(
                "div",
                {
                  staticClass: "tab-pane",
                  attrs: { id: "cartxciclo", role: "tabpanel" }
                },
                [
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-12 kt-align-right" }, [
                      _c(
                        "button",
                        {
                          staticClass: "btn btn-brand",
                          class: _vm.spinGCart,
                          attrs: { type: "button", disabled: !_vm.valGCart },
                          on: {
                            click: function($event) {
                              return _vm.cambiarTab1(
                                "adolescente",
                                "cartxciclo"
                              )
                            }
                          }
                        },
                        [
                          _c("i", { staticClass: "la la-arrow-right" }),
                          _vm._v(" "),
                          _c("span", { staticClass: "kt-hidden-mobile" }, [
                            _vm._v("Guardar")
                          ])
                        ]
                      )
                    ])
                  ]),
                  _vm._v(" "),
                  _vm._m(21),
                  _vm._v(" "),
                  _vm._m(22),
                  _vm._v(" "),
                  _c("div", {
                    staticClass: "kt-separator kt-separator--border-dashed"
                  }),
                  _vm._v(" "),
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c("div", { staticClass: "table-responsive" }, [
                        _c(
                          "table",
                          {
                            staticClass: "table table-sm table-hover",
                            staticStyle: { width: "100%" }
                          },
                          [
                            _vm._m(23),
                            _vm._v(" "),
                            _c(
                              "tbody",
                              _vm._l(_vm.Men1A, function(item, index) {
                                return _c(
                                  "tr",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value: item.estado == "Activo",
                                        expression: "item.estado=='Activo'"
                                      }
                                    ],
                                    key: index
                                  },
                                  [
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "100px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: index + 1 }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.tipo_id == ""
                                              ? ""
                                              : "is-valid",
                                          staticStyle: {
                                            width: "200px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: {
                                            value:
                                              item.tipo_id +
                                              " : " +
                                              item.identificacion
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.pnom == "" ? "" : "is-valid",
                                          staticStyle: {
                                            width: "300px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: {
                                            value:
                                              item.pnom +
                                              " " +
                                              item.snom +
                                              " " +
                                              item.pape +
                                              " " +
                                              item.sape
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.sexo == "" ? "" : "is-valid",
                                          staticStyle: {
                                            width: "150px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.sexo }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.lugar_nacimiento == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(
                                                lugar_nacimiento
                                              ) {
                                                return _vm.updateMenA1(
                                                  item,
                                                  lugar_nacimiento,
                                                  "lugar_nacimiento"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.lugar_nacimiento,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "lugar_nacimiento",
                                                  $$v
                                                )
                                              },
                                              expression:
                                                "item.lugar_nacimiento"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "HOSPITAL" } },
                                              [_vm._v("HOSPITAL")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "CASA" } },
                                              [_vm._v("CASA")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.hemoclasificacion == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(
                                                hemoclasificacion
                                              ) {
                                                return _vm.updateMenA1(
                                                  item,
                                                  hemoclasificacion,
                                                  "hemoclasificacion"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.hemoclasificacion,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "hemoclasificacion",
                                                  $$v
                                                )
                                              },
                                              expression:
                                                "item.hemoclasificacion"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.compli_parto == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "200px" },
                                            on: {
                                              input: function(compli_parto) {
                                                return _vm.updateMenA1(
                                                  item,
                                                  compli_parto,
                                                  "compli_parto"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.compli_parto,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "compli_parto",
                                                  $$v
                                                )
                                              },
                                              expression: "item.compli_parto"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.via_parto == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(via_parto) {
                                                return _vm.updateMenA1(
                                                  item,
                                                  via_parto,
                                                  "via_parto"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.via_parto,
                                              callback: function($$v) {
                                                _vm.$set(item, "via_parto", $$v)
                                              },
                                              expression: "item.via_parto"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "CESAREA" } },
                                              [_vm._v("CESAREA")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "PARTO" } },
                                              [_vm._v("PARTO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.cyc == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(cyc) {
                                                return _vm.updateMenA1(
                                                  item,
                                                  cyc,
                                                  "cyc"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.cyc,
                                              callback: function($$v) {
                                                _vm.$set(item, "cyc", $$v)
                                              },
                                              expression: "item.cyc"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.valoracion_23 == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(valoracion_23) {
                                                return _vm.updateMenA1(
                                                  item,
                                                  valoracion_23,
                                                  "valoracion_23"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.valoracion_23,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "valoracion_23",
                                                  $$v
                                                )
                                              },
                                              expression: "item.valoracion_23"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.valoracion_68 == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(valoracion_68) {
                                                return _vm.updateMenA1(
                                                  item,
                                                  valoracion_68,
                                                  "valoracion_68"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.valoracion_68,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "valoracion_68",
                                                  $$v
                                                )
                                              },
                                              expression: "item.valoracion_68"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.valoracion_911 == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(valoracion_911) {
                                                return _vm.updateMenA1(
                                                  item,
                                                  valoracion_911,
                                                  "valoracion_911"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.valoracion_911,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "valoracion_911",
                                                  $$v
                                                )
                                              },
                                              expression: "item.valoracion_911"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.lactancia == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(lactancia) {
                                                return _vm.updateMenA1(
                                                  item,
                                                  lactancia,
                                                  "lactancia"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.lactancia,
                                              callback: function($$v) {
                                                _vm.$set(item, "lactancia", $$v)
                                              },
                                              expression: "item.lactancia"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.peso_nacer,
                                              expression: "item.peso_nacer"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.peso_nacer == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text" },
                                          domProps: { value: item.peso_nacer },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "peso_nacer",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateMenA1(
                                                  item,
                                                  $event,
                                                  "peso_nacer"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.peso_actual,
                                              expression: "item.peso_actual"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.peso_actual == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.peso_actual },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "peso_actual",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateMenA1(
                                                  item,
                                                  $event,
                                                  "peso_actual"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.longitud_nacer,
                                              expression: "item.longitud_nacer"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.longitud_nacer == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text" },
                                          domProps: {
                                            value: item.longitud_nacer
                                          },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "longitud_nacer",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateMenA1(
                                                  item,
                                                  $event,
                                                  "longitud_nacer"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.longitud_actual,
                                              expression: "item.longitud_actual"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.longitud_actual == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: {
                                            value: item.longitud_actual
                                          },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "longitud_actual",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateMenA1(
                                                  item,
                                                  $event,
                                                  "longitud_actual"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.peso_long,
                                              expression: "item.peso_long"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.peso_long == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "160px" },
                                          attrs: { type: "text" },
                                          domProps: { value: item.peso_long },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "peso_long",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateMenA1(
                                                  item,
                                                  $event,
                                                  "peso_long"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.pb,
                                              expression: "item.pb"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.pb == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text" },
                                          domProps: { value: item.pb },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "pb",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateMenA1(
                                                  item,
                                                  $event,
                                                  "pb"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.cinta,
                                              expression: "item.cinta"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.cinta == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text" },
                                          domProps: { value: item.cinta },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "cinta",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateMenA1(
                                                  item,
                                                  $event,
                                                  "cinta"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.edemas == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(edemas) {
                                                return _vm.updateMenA1(
                                                  item,
                                                  edemas,
                                                  "edemas"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.edemas,
                                              callback: function($$v) {
                                                _vm.$set(item, "edemas", $$v)
                                              },
                                              expression: "item.edemas"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.lenguaje == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(lenguaje) {
                                                return _vm.updateMenA1(
                                                  item,
                                                  lenguaje,
                                                  "lenguaje"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.lenguaje,
                                              callback: function($$v) {
                                                _vm.$set(item, "lenguaje", $$v)
                                              },
                                              expression: "item.lenguaje"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.motora == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(motora) {
                                                return _vm.updateMenA1(
                                                  item,
                                                  motora,
                                                  "motora"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.motora,
                                              callback: function($$v) {
                                                _vm.$set(item, "motora", $$v)
                                              },
                                              expression: "item.motora"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.conducta == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(conducta) {
                                                return _vm.updateMenA1(
                                                  item,
                                                  conducta,
                                                  "conducta"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.conducta,
                                              callback: function($$v) {
                                                _vm.$set(item, "conducta", $$v)
                                              },
                                              expression: "item.conducta"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.visuales == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(visuales) {
                                                return _vm.updateMenA1(
                                                  item,
                                                  visuales,
                                                  "visuales"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.visuales,
                                              callback: function($$v) {
                                                _vm.$set(item, "visuales", $$v)
                                              },
                                              expression: "item.visuales"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.auditivos == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(auditivos) {
                                                return _vm.updateMenA1(
                                                  item,
                                                  auditivos,
                                                  "auditivos"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.auditivos,
                                              callback: function($$v) {
                                                _vm.$set(item, "auditivos", $$v)
                                              },
                                              expression: "item.auditivos"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.carnet == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(carnet) {
                                                return _vm.updateMenA1(
                                                  item,
                                                  carnet,
                                                  "carnet"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.carnet,
                                              callback: function($$v) {
                                                _vm.$set(item, "carnet", $$v)
                                              },
                                              expression: "item.carnet"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "DESAC" } },
                                              [_vm._v("DESAC")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.bcg == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(bcg) {
                                                return _vm.updateMenA1(
                                                  item,
                                                  bcg,
                                                  "bcg"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.bcg,
                                              callback: function($$v) {
                                                _vm.$set(item, "bcg", $$v)
                                              },
                                              expression: "item.bcg"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D1" } },
                                              [_vm._v("D1")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.hepb == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(hepb) {
                                                return _vm.updateMenA1(
                                                  item,
                                                  hepb,
                                                  "hepb"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.hepb,
                                              callback: function($$v) {
                                                _vm.$set(item, "hepb", $$v)
                                              },
                                              expression: "item.hepb"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D1" } },
                                              [_vm._v("D1")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D2" } },
                                              [_vm._v("D2")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D3" } },
                                              [_vm._v("D3")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D4" } },
                                              [_vm._v("D4")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.polio == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(polio) {
                                                return _vm.updateMenA1(
                                                  item,
                                                  polio,
                                                  "polio"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.polio,
                                              callback: function($$v) {
                                                _vm.$set(item, "polio", $$v)
                                              },
                                              expression: "item.polio"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D1" } },
                                              [_vm._v("D1")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D2" } },
                                              [_vm._v("D2")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D3" } },
                                              [_vm._v("D3")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D4" } },
                                              [_vm._v("D4")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D5" } },
                                              [_vm._v("D5")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.pentavalente == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(pentavalente) {
                                                return _vm.updateMenA1(
                                                  item,
                                                  pentavalente,
                                                  "pentavalente"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.pentavalente,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "pentavalente",
                                                  $$v
                                                )
                                              },
                                              expression: "item.pentavalente"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D1" } },
                                              [_vm._v("D1")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D2" } },
                                              [_vm._v("D2")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D3" } },
                                              [_vm._v("D3")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.maltrato == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(maltrato) {
                                                return _vm.updateMenA1(
                                                  item,
                                                  maltrato,
                                                  "maltrato"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.maltrato,
                                              callback: function($$v) {
                                                _vm.$set(item, "maltrato", $$v)
                                              },
                                              expression: "item.maltrato"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.morbilidad == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(morbilidad) {
                                                return _vm.updateMenA1(
                                                  item,
                                                  morbilidad,
                                                  "morbilidad"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.morbilidad,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "morbilidad",
                                                  $$v
                                                )
                                              },
                                              expression: "item.morbilidad"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _vm._l(
                                              _vm.morbilidadNacer_options,
                                              function(item) {
                                                return _c(
                                                  "option",
                                                  {
                                                    key: item.value,
                                                    domProps: {
                                                      value: item.value
                                                    }
                                                  },
                                                  [_vm._v(_vm._s(item.texto))]
                                                )
                                              }
                                            )
                                          ],
                                          2
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.tsh == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(tsh) {
                                                return _vm.updateMenA1(
                                                  item,
                                                  tsh,
                                                  "tsh"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.tsh,
                                              callback: function($$v) {
                                                _vm.$set(item, "tsh", $$v)
                                              },
                                              expression: "item.tsh"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "1" } },
                                              [_vm._v("SI-NORMAL")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "2" } },
                                              [_vm._v("SI-ANORMAL")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "3" } },
                                              [
                                                _vm._v(
                                                  "SI-NO SABE EL RESULTADO"
                                                )
                                              ]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "4" } },
                                              [_vm._v("NO SE TOMO EL EXAMEN")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    )
                                  ]
                                )
                              }),
                              0
                            )
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c("div", {
                        staticClass: "kt-separator kt-separator--border-dashed"
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", {
                    staticClass: "kt-separator kt-separator--border-dashed"
                  }),
                  _vm._v(" "),
                  _vm._m(24),
                  _vm._v(" "),
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c("div", { staticClass: "table-responsive" }, [
                        _c(
                          "table",
                          { staticClass: "table table-sm table-hover" },
                          [
                            _vm._m(25),
                            _vm._v(" "),
                            _c(
                              "tbody",
                              _vm._l(_vm.De1A5, function(item, index) {
                                return _c(
                                  "tr",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value: item.estado == "Activo",
                                        expression: "item.estado=='Activo'"
                                      }
                                    ],
                                    key: index
                                  },
                                  [
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "100px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: index + 1 }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "200px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: {
                                            value:
                                              item.tipo_id +
                                              " : " +
                                              item.identificacion
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "300px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: {
                                            value:
                                              item.pnom +
                                              " " +
                                              item.snom +
                                              " " +
                                              item.pape +
                                              " " +
                                              item.sape
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "150px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.sexo }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "100px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.edad }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.beneficiario == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(beneficiario) {
                                                return _vm.updateDe1A5(
                                                  item,
                                                  beneficiario,
                                                  "beneficiario"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.beneficiario,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "beneficiario",
                                                  $$v
                                                )
                                              },
                                              expression: "item.beneficiario"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "1" } },
                                              [_vm._v("Hogares Comunitarios")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "2" } },
                                              [_vm._v("ICBF")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "3" } },
                                              [_vm._v("Desayuno Escolar")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "4" } },
                                              [_vm._v("Jardin Social - CDI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "5" } },
                                              [_vm._v("Otro")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.cyc == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(cyc) {
                                                return _vm.updateDe1A5(
                                                  item,
                                                  cyc,
                                                  "cyc"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.cyc,
                                              callback: function($$v) {
                                                _vm.$set(item, "cyc", $$v)
                                              },
                                              expression: "item.cyc"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.valoracion_1823 == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(valoracion_1823) {
                                                return _vm.updateDe1A5(
                                                  item,
                                                  valoracion_1823,
                                                  "valoracion_1823"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.valoracion_1823,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "valoracion_1823",
                                                  $$v
                                                )
                                              },
                                              expression: "item.valoracion_1823"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.valoracion_3035 == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(valoracion_3035) {
                                                return _vm.updateDe1A5(
                                                  item,
                                                  valoracion_3035,
                                                  "valoracion_3035"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.valoracion_3035,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "valoracion_3035",
                                                  $$v
                                                )
                                              },
                                              expression: "item.valoracion_3035"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.valoracion_4 == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(valoracion_4) {
                                                return _vm.updateDe1A5(
                                                  item,
                                                  valoracion_4,
                                                  "valoracion_4"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.valoracion_4,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "valoracion_4",
                                                  $$v
                                                )
                                              },
                                              expression: "item.valoracion_4"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.peso,
                                              expression: "item.peso"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.peso == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.peso },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "peso",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateDe1A5(
                                                  item,
                                                  $event,
                                                  "peso"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.talla,
                                              expression: "item.talla"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.talla == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.talla },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "talla",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateDe1A5(
                                                  item,
                                                  $event,
                                                  "talla"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.imc,
                                              expression: "item.imc"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.imc == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.imc },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "imc",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateDe1A5(
                                                  item,
                                                  $event,
                                                  "imc"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.pb,
                                              expression: "item.pb"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.pb == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text" },
                                          domProps: { value: item.pb },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "pb",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateDe1A5(
                                                  item,
                                                  $event,
                                                  "pb"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.pt,
                                              expression: "item.pt"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.pt == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text" },
                                          domProps: { value: item.pt },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "pt",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateDe1A5(
                                                  item,
                                                  $event,
                                                  "pt"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.te,
                                              expression: "item.te"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.te == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text" },
                                          domProps: { value: item.te },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "te",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateDe1A5(
                                                  item,
                                                  $event,
                                                  "te"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.pcefalico,
                                              expression: "item.pcefalico"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.pcefalico == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text" },
                                          domProps: { value: item.pcefalico },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "pcefalico",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateDe1A5(
                                                  item,
                                                  $event,
                                                  "pcefalico"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.lenguaje == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(lenguaje) {
                                                return _vm.updateDe1A5(
                                                  item,
                                                  lenguaje,
                                                  "lenguaje"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.lenguaje,
                                              callback: function($$v) {
                                                _vm.$set(item, "lenguaje", $$v)
                                              },
                                              expression: "item.lenguaje"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.motora == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(motora) {
                                                return _vm.updateDe1A5(
                                                  item,
                                                  motora,
                                                  "motora"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.motora,
                                              callback: function($$v) {
                                                _vm.$set(item, "motora", $$v)
                                              },
                                              expression: "item.motora"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.conducta == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(conducta) {
                                                return _vm.updateDe1A5(
                                                  item,
                                                  conducta,
                                                  "conducta"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.conducta,
                                              callback: function($$v) {
                                                _vm.$set(item, "conducta", $$v)
                                              },
                                              expression: "item.conducta"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.visuales == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(visuales) {
                                                return _vm.updateDe1A5(
                                                  item,
                                                  visuales,
                                                  "visuales"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.visuales,
                                              callback: function($$v) {
                                                _vm.$set(item, "visuales", $$v)
                                              },
                                              expression: "item.visuales"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.auditivos == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(auditivos) {
                                                return _vm.updateDe1A5(
                                                  item,
                                                  auditivos,
                                                  "auditivos"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.auditivos,
                                              callback: function($$v) {
                                                _vm.$set(item, "auditivos", $$v)
                                              },
                                              expression: "item.auditivos"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.caries == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(caries) {
                                                return _vm.updateDe1A5(
                                                  item,
                                                  caries,
                                                  "caries"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.caries,
                                              callback: function($$v) {
                                                _vm.$set(item, "caries", $$v)
                                              },
                                              expression: "item.caries"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.nocepillado,
                                              expression: "item.nocepillado"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.nocepillado == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text" },
                                          domProps: { value: item.nocepillado },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "nocepillado",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateDe1A5(
                                                  item,
                                                  $event,
                                                  "nocepillado"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.consultaodon == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(consultaodon) {
                                                return _vm.updateDe1A5(
                                                  item,
                                                  consultaodon,
                                                  "consultaodon"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.consultaodon,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "consultaodon",
                                                  $$v
                                                )
                                              },
                                              expression: "item.consultaodon"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.carnet == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(carnet) {
                                                return _vm.updateDe1A5(
                                                  item,
                                                  carnet,
                                                  "carnet"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.carnet,
                                              callback: function($$v) {
                                                _vm.$set(item, "carnet", $$v)
                                              },
                                              expression: "item.carnet"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "DESACTUALIZADO"
                                                }
                                              },
                                              [_vm._v("DESACTUALIZADO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.bcg == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(bcg) {
                                                return _vm.updateDe1A5(
                                                  item,
                                                  bcg,
                                                  "bcg"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.bcg,
                                              callback: function($$v) {
                                                _vm.$set(item, "bcg", $$v)
                                              },
                                              expression: "item.bcg"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.polio == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(polio) {
                                                return _vm.updateDe1A5(
                                                  item,
                                                  polio,
                                                  "polio"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.polio,
                                              callback: function($$v) {
                                                _vm.$set(item, "polio", $$v)
                                              },
                                              expression: "item.polio"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D1" } },
                                              [_vm._v("D1")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D2" } },
                                              [_vm._v("D2")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D3" } },
                                              [_vm._v("D3")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D4" } },
                                              [_vm._v("D4")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D5" } },
                                              [_vm._v("D5")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.dpt == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(dpt) {
                                                return _vm.updateDe1A5(
                                                  item,
                                                  dpt,
                                                  "dpt"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.dpt,
                                              callback: function($$v) {
                                                _vm.$set(item, "dpt", $$v)
                                              },
                                              expression: "item.dpt"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D1" } },
                                              [_vm._v("D1")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D2" } },
                                              [_vm._v("D2")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D3" } },
                                              [_vm._v("D3")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D4" } },
                                              [_vm._v("D4")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D5" } },
                                              [_vm._v("D5")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.fiebrea == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(fiebrea) {
                                                return _vm.updateDe1A5(
                                                  item,
                                                  fiebrea,
                                                  "fiebrea"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.fiebrea,
                                              callback: function($$v) {
                                                _vm.$set(item, "fiebrea", $$v)
                                              },
                                              expression: "item.fiebrea"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.tripleviral == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(tripleviral) {
                                                return _vm.updateDe1A5(
                                                  item,
                                                  tripleviral,
                                                  "tripleviral"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.tripleviral,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "tripleviral",
                                                  $$v
                                                )
                                              },
                                              expression: "item.tripleviral"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D1" } },
                                              [_vm._v("D1")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D2" } },
                                              [_vm._v("D2")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.pentavalente == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(pentavalente) {
                                                return _vm.updateDe1A5(
                                                  item,
                                                  pentavalente,
                                                  "pentavalente"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.pentavalente,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "pentavalente",
                                                  $$v
                                                )
                                              },
                                              expression: "item.pentavalente"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D1" } },
                                              [_vm._v("D1")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D2" } },
                                              [_vm._v("D2")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D3" } },
                                              [_vm._v("D3")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.otras,
                                              expression: "item.otras"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.otras == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text" },
                                          domProps: { value: item.otras },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "otras",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateDe1A5(
                                                  item,
                                                  $event,
                                                  "otras"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.desparacitado == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(desparacitado) {
                                                return _vm.updateDe1A5(
                                                  item,
                                                  desparacitado,
                                                  "desparacitado"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.desparacitado,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "desparacitado",
                                                  $$v
                                                )
                                              },
                                              expression: "item.desparacitado"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.maltrato == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(maltrato) {
                                                return _vm.updateDe1A5(
                                                  item,
                                                  maltrato,
                                                  "maltrato"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.maltrato,
                                              callback: function($$v) {
                                                _vm.$set(item, "maltrato", $$v)
                                              },
                                              expression: "item.maltrato"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.enfermedad == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(enfermedad) {
                                                return _vm.updateDe1A5(
                                                  item,
                                                  enfermedad,
                                                  "enfermedad"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.enfermedad,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "enfermedad",
                                                  $$v
                                                )
                                              },
                                              expression: "item.enfermedad"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.medicamento == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(medicamento) {
                                                return _vm.updateDe1A5(
                                                  item,
                                                  medicamento,
                                                  "medicamento"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.medicamento,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "medicamento",
                                                  $$v
                                                )
                                              },
                                              expression: "item.medicamento"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    )
                                  ]
                                )
                              }),
                              0
                            )
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c("div", {
                        staticClass: "kt-separator kt-separator--border-dashed"
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", {
                    staticClass: "kt-separator kt-separator--border-dashed"
                  }),
                  _vm._v(" "),
                  _vm._m(26),
                  _vm._v(" "),
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c("div", { staticClass: "table-responsive" }, [
                        _c(
                          "table",
                          { staticClass: "table table-sm table-hover" },
                          [
                            _vm._m(27),
                            _vm._v(" "),
                            _c(
                              "tbody",
                              _vm._l(_vm.De6A11, function(item, index) {
                                return _c(
                                  "tr",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value: item.estado == "Activo",
                                        expression: "item.estado=='Activo'"
                                      }
                                    ],
                                    key: index
                                  },
                                  [
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "100px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: index + 1 }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "200px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: {
                                            value:
                                              item.tipo_id +
                                              " : " +
                                              item.identificacion
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "300px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: {
                                            value:
                                              item.pnom +
                                              " " +
                                              item.snom +
                                              " " +
                                              item.pape +
                                              " " +
                                              item.sape
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "150px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.sexo }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "100px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.edad }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.cyc == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(cyc) {
                                                return _vm.updateDe6A11(
                                                  item,
                                                  cyc,
                                                  "cyc"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.cyc,
                                              callback: function($$v) {
                                                _vm.$set(item, "cyc", $$v)
                                              },
                                              expression: "item.cyc"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.atencion == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(atencion) {
                                                return _vm.updateDe6A11(
                                                  item,
                                                  atencion,
                                                  "atencion"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.atencion,
                                              callback: function($$v) {
                                                _vm.$set(item, "atencion", $$v)
                                              },
                                              expression: "item.atencion"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.peso,
                                              expression: "item.peso"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.peso == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.peso },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "peso",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateDe6A11(
                                                  item,
                                                  $event,
                                                  "peso"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.talla,
                                              expression: "item.talla"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.talla == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.talla },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "talla",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateDe6A11(
                                                  item,
                                                  $event,
                                                  "talla"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.imc,
                                              expression: "item.imc"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.imc == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.imc },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "imc",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateDe6A11(
                                                  item,
                                                  $event,
                                                  "imc"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.te,
                                              expression: "item.te"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.te == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text" },
                                          domProps: { value: item.te },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "te",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateDe6A11(
                                                  item,
                                                  $event,
                                                  "te"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.conducta == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(conducta) {
                                                return _vm.updateDe6A11(
                                                  item,
                                                  conducta,
                                                  "conducta"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.conducta,
                                              callback: function($$v) {
                                                _vm.$set(item, "conducta", $$v)
                                              },
                                              expression: "item.conducta"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.visuales == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(visuales) {
                                                return _vm.updateDe6A11(
                                                  item,
                                                  visuales,
                                                  "visuales"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.visuales,
                                              callback: function($$v) {
                                                _vm.$set(item, "visuales", $$v)
                                              },
                                              expression: "item.visuales"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.auditivos == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(auditivos) {
                                                return _vm.updateDe6A11(
                                                  item,
                                                  auditivos,
                                                  "auditivos"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.auditivos,
                                              callback: function($$v) {
                                                _vm.$set(item, "auditivos", $$v)
                                              },
                                              expression: "item.auditivos"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.dientes_sanos == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(dientes_sanos) {
                                                return _vm.updateDe6A11(
                                                  item,
                                                  dientes_sanos,
                                                  "dientes_sanos"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.dientes_sanos,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "dientes_sanos",
                                                  $$v
                                                )
                                              },
                                              expression: "item.dientes_sanos"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.consultaodon == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(consultaodon) {
                                                return _vm.updateDe6A11(
                                                  item,
                                                  consultaodon,
                                                  "consultaodon"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.consultaodon,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "consultaodon",
                                                  $$v
                                                )
                                              },
                                              expression: "item.consultaodon"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.nofluor == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(nofluor) {
                                                return _vm.updateDe6A11(
                                                  item,
                                                  nofluor,
                                                  "nofluor"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.nofluor,
                                              callback: function($$v) {
                                                _vm.$set(item, "nofluor", $$v)
                                              },
                                              expression: "item.nofluor"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("NO APLICA")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D1" } },
                                              [_vm._v("D1")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D2" } },
                                              [_vm._v("D2")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D3" } },
                                              [_vm._v("D3")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NI" } },
                                              [_vm._v("NINGUNO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.nocepillado,
                                              expression: "item.nocepillado"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.nocepillado == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text" },
                                          domProps: { value: item.nocepillado },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "nocepillado",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateDe6A11(
                                                  item,
                                                  $event,
                                                  "nocepillado"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.maltrato == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(maltrato) {
                                                return _vm.updateDe6A11(
                                                  item,
                                                  maltrato,
                                                  "maltrato"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.maltrato,
                                              callback: function($$v) {
                                                _vm.$set(item, "maltrato", $$v)
                                              },
                                              expression: "item.maltrato"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.sustanciaspsico == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(sustanciaspsico) {
                                                return _vm.updateDe6A11(
                                                  item,
                                                  sustanciaspsico,
                                                  "sustanciaspsico"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.sustanciaspsico,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "sustanciaspsico",
                                                  $$v
                                                )
                                              },
                                              expression: "item.sustanciaspsico"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.desparacitado == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(desparacitado) {
                                                return _vm.updateDe6A11(
                                                  item,
                                                  desparacitado,
                                                  "desparacitado"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.desparacitado,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "desparacitado",
                                                  $$v
                                                )
                                              },
                                              expression: "item.desparacitado"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.enfermedad == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(enfermedad) {
                                                return _vm.updateDe6A11(
                                                  item,
                                                  enfermedad,
                                                  "enfermedad"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.enfermedad,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "enfermedad",
                                                  $$v
                                                )
                                              },
                                              expression: "item.enfermedad"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.medicamento == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(medicamento) {
                                                return _vm.updateDe6A11(
                                                  item,
                                                  medicamento,
                                                  "medicamento"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.medicamento,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "medicamento",
                                                  $$v
                                                )
                                              },
                                              expression: "item.medicamento"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.padre == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(padre) {
                                                return _vm.updateDe6A11(
                                                  item,
                                                  padre,
                                                  "padre"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.padre,
                                              callback: function($$v) {
                                                _vm.$set(item, "padre", $$v)
                                              },
                                              expression: "item.padre"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "1" } },
                                              [_vm._v("BUENA")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "2" } },
                                              [_vm._v("MUY BUENA")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "3" } },
                                              [_vm._v("REGULAR")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "4" } },
                                              [_vm._v("MALA")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.madre == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(madre) {
                                                return _vm.updateDe6A11(
                                                  item,
                                                  madre,
                                                  "madre"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.madre,
                                              callback: function($$v) {
                                                _vm.$set(item, "madre", $$v)
                                              },
                                              expression: "item.madre"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "1" } },
                                              [_vm._v("BUENA")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "2" } },
                                              [_vm._v("MUY BUENA")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "3" } },
                                              [_vm._v("REGULAR")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "4" } },
                                              [_vm._v("MALA")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.hermanos == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(hermanos) {
                                                return _vm.updateDe6A11(
                                                  item,
                                                  hermanos,
                                                  "hermanos"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.hermanos,
                                              callback: function($$v) {
                                                _vm.$set(item, "hermanos", $$v)
                                              },
                                              expression: "item.hermanos"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "1" } },
                                              [_vm._v("BUENA")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "2" } },
                                              [_vm._v("MUY BUENA")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "3" } },
                                              [_vm._v("REGULAR")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "4" } },
                                              [_vm._v("MALA")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.conyuge == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(conyuge) {
                                                return _vm.updateDe6A11(
                                                  item,
                                                  conyuge,
                                                  "conyuge"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.conyuge,
                                              callback: function($$v) {
                                                _vm.$set(item, "conyuge", $$v)
                                              },
                                              expression: "item.conyuge"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "1" } },
                                              [_vm._v("BUENA")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "2" } },
                                              [_vm._v("MUY BUENA")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "3" } },
                                              [_vm._v("REGULAR")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "4" } },
                                              [_vm._v("MALA")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    )
                                  ]
                                )
                              }),
                              0
                            )
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c("div", {
                        staticClass: "kt-separator kt-separator--border-dashed"
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", {
                    staticClass: "kt-separator kt-separator--border-dashed"
                  }),
                  _vm._v(" "),
                  _vm._m(28),
                  _vm._v(" "),
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c("div", { staticClass: "table-responsive" }, [
                        _c(
                          "table",
                          { staticClass: "table table-sm table-hover" },
                          [
                            _vm._m(29),
                            _vm._v(" "),
                            _c(
                              "tbody",
                              _vm._l(_vm.De10A59, function(item, index) {
                                return _c(
                                  "tr",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value: item.estado == "Activo",
                                        expression: "item.estado=='Activo'"
                                      }
                                    ],
                                    key: index
                                  },
                                  [
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "100px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: index + 1 }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "200px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: {
                                            value:
                                              item.tipo_id +
                                              " : " +
                                              item.identificacion
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "300px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: {
                                            value:
                                              item.pnom +
                                              " " +
                                              item.snom +
                                              " " +
                                              item.pape +
                                              " " +
                                              item.sape
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "150px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.sexo },
                                          on: {
                                            input: function(sexo) {
                                              return _vm.updateDe10A59(
                                                item,
                                                sexo,
                                                "sexo"
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "100px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.edad }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.primera_mes == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: {
                                              width: "150px",
                                              "background-color": "white"
                                            },
                                            attrs: {
                                              disabled: item.sexo == "MASCULINO"
                                            },
                                            on: {
                                              input: function(primera_mes) {
                                                return _vm.updateDe10A59(
                                                  item,
                                                  primera_mes,
                                                  "primera_mes"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.primera_mes,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "primera_mes",
                                                  $$v
                                                )
                                              },
                                              expression: "item.primera_mes"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "1" } },
                                              [_vm._v("Menor de 10 años")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "2" } },
                                              [_vm._v("Entre 10 y 12 años")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "3" } },
                                              [_vm._v("Entre 12 y 14 años")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "4" } },
                                              [_vm._v("Mas de 15 años")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "5" } },
                                              [_vm._v("Ninguna")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.flujo_vaginal == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: {
                                              width: "150px",
                                              "background-color": "white"
                                            },
                                            attrs: {
                                              disabled: item.sexo == "MASCULINO"
                                            },
                                            on: {
                                              input: function(flujo_vaginal) {
                                                return _vm.updateDe10A59(
                                                  item,
                                                  flujo_vaginal,
                                                  "flujo_vaginal"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.flujo_vaginal,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "flujo_vaginal",
                                                  $$v
                                                )
                                              },
                                              expression: "item.flujo_vaginal"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.flujo_uretral == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(flujo_uretral) {
                                                return _vm.updateDe10A59(
                                                  item,
                                                  flujo_uretral,
                                                  "flujo_uretral"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.flujo_uretral,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "flujo_uretral",
                                                  $$v
                                                )
                                              },
                                              expression: "item.flujo_uretral"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.relaciones_sexuales == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(
                                                relaciones_sexuales
                                              ) {
                                                return _vm.updateDe10A59(
                                                  item,
                                                  relaciones_sexuales,
                                                  "relaciones_sexuales"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.relaciones_sexuales,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "relaciones_sexuales",
                                                  $$v
                                                )
                                              },
                                              expression:
                                                "item.relaciones_sexuales"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.compa_sexuales == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: {
                                              width: "150px",
                                              "background-color": "white"
                                            },
                                            on: {
                                              input: function(compa_sexuales) {
                                                return _vm.updateDe10A59(
                                                  item,
                                                  compa_sexuales,
                                                  "compa_sexuales"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.compa_sexuales,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "compa_sexuales",
                                                  $$v
                                                )
                                              },
                                              expression: "item.compa_sexuales"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "1" } },
                                              [_vm._v("1 Compañero")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "2" } },
                                              [_vm._v("Entre 2 y 3")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "3" } },
                                              [_vm._v("Entre 4 y 6")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "4" } },
                                              [_vm._v("Entre 7 y 9")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "5" } },
                                              [_vm._v("Mas de 10")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "6" } },
                                              [_vm._v("Ninguna")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.usa_condon == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(usa_condon) {
                                                return _vm.updateDe10A59(
                                                  item,
                                                  usa_condon,
                                                  "usa_condon"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.usa_condon,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "usa_condon",
                                                  $$v
                                                )
                                              },
                                              expression: "item.usa_condon"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.abortos_seis == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: {
                                              width: "150px",
                                              "background-color": "white"
                                            },
                                            attrs: {
                                              disabled: item.sexo == "MASCULINO"
                                            },
                                            on: {
                                              input: function(abortos_seis) {
                                                return _vm.updateDe10A59(
                                                  item,
                                                  abortos_seis,
                                                  "abortos_seis"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.abortos_seis,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "abortos_seis",
                                                  $$v
                                                )
                                              },
                                              expression: "item.abortos_seis"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.embarazo_adolecentes == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: {
                                              width: "150px",
                                              "background-color": "white"
                                            },
                                            attrs: {
                                              disabled: item.sexo == "MASCULINO"
                                            },
                                            on: {
                                              input: function(
                                                embarazo_adolecentes
                                              ) {
                                                return _vm.updateDe10A59(
                                                  item,
                                                  embarazo_adolecentes,
                                                  "embarazo_adolecentes"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.embarazo_adolecentes,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "embarazo_adolecentes",
                                                  $$v
                                                )
                                              },
                                              expression:
                                                "item.embarazo_adolecentes"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.metodo == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(metodo) {
                                                return _vm.updateDe10A59(
                                                  item,
                                                  metodo,
                                                  "metodo"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.metodo,
                                              callback: function($$v) {
                                                _vm.$set(item, "metodo", $$v)
                                              },
                                              expression: "item.metodo"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _vm._l(
                                              _vm.metodos_options,
                                              function(item) {
                                                return _c(
                                                  "option",
                                                  {
                                                    key: item.value,
                                                    domProps: {
                                                      value: item.value
                                                    }
                                                  },
                                                  [_vm._v(_vm._s(item.texto))]
                                                )
                                              }
                                            )
                                          ],
                                          2
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.tiempo_metodo == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(tiempo_metodo) {
                                                return _vm.updateDe10A59(
                                                  item,
                                                  tiempo_metodo,
                                                  "tiempo_metodo"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.tiempo_metodo,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "tiempo_metodo",
                                                  $$v
                                                )
                                              },
                                              expression: "item.tiempo_metodo"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "1" } },
                                              [_vm._v("Menos de 6 meses")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "2" } },
                                              [_vm._v("Menos de 1 año")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "3" } },
                                              [_vm._v("Mas de 1 año")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.controles == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(controles) {
                                                return _vm.updateDe10A59(
                                                  item,
                                                  controles,
                                                  "controles"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.controles,
                                              callback: function($$v) {
                                                _vm.$set(item, "controles", $$v)
                                              },
                                              expression: "item.controles"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.motivo == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(motivo) {
                                                return _vm.updateDe10A59(
                                                  item,
                                                  motivo,
                                                  "motivo"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.motivo,
                                              callback: function($$v) {
                                                _vm.$set(item, "motivo", $$v)
                                              },
                                              expression: "item.motivo"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _vm._l(
                                              _vm.motivos_options,
                                              function(item) {
                                                return _c(
                                                  "option",
                                                  {
                                                    key: item.value,
                                                    domProps: {
                                                      value: item.value
                                                    }
                                                  },
                                                  [_vm._v(_vm._s(item.texto))]
                                                )
                                              }
                                            )
                                          ],
                                          2
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.citologia == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: {
                                              width: "150px",
                                              "background-color": "white"
                                            },
                                            attrs: {
                                              disabled: item.sexo == "MASCULINO"
                                            },
                                            on: {
                                              input: function(citologia) {
                                                return _vm.updateDe10A59(
                                                  item,
                                                  citologia,
                                                  "citologia"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.citologia,
                                              callback: function($$v) {
                                                _vm.$set(item, "citologia", $$v)
                                              },
                                              expression: "item.citologia"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SIN" } },
                                              [_vm._v("SI NORMAL")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SIA" } },
                                              [_vm._v("SI ANORMAL")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.colposcopia == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: {
                                              width: "150px",
                                              "background-color": "white"
                                            },
                                            attrs: {
                                              disabled: item.sexo == "MASCULINO"
                                            },
                                            on: {
                                              input: function(colposcopia) {
                                                return _vm.updateDe10A59(
                                                  item,
                                                  colposcopia,
                                                  "colposcopia"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.colposcopia,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "colposcopia",
                                                  $$v
                                                )
                                              },
                                              expression: "item.colposcopia"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SIN" } },
                                              [_vm._v("SI NORMAL")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SIA" } },
                                              [_vm._v("SI ANORMAL")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.examen_seno == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: {
                                              width: "150px",
                                              "background-color": "white"
                                            },
                                            attrs: {
                                              disabled: item.sexo == "MASCULINO"
                                            },
                                            on: {
                                              input: function(examen_seno) {
                                                return _vm.updateDe10A59(
                                                  item,
                                                  examen_seno,
                                                  "examen_seno"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.examen_seno,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "examen_seno",
                                                  $$v
                                                )
                                              },
                                              expression: "item.examen_seno"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SIN" } },
                                              [_vm._v("SI NORMAL")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SIA" } },
                                              [_vm._v("SI ANORMAL")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.violencia == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(violencia) {
                                                return _vm.updateDe10A59(
                                                  item,
                                                  violencia,
                                                  "violencia"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.violencia,
                                              callback: function($$v) {
                                                _vm.$set(item, "violencia", $$v)
                                              },
                                              expression: "item.violencia"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.tdit == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: {
                                              width: "150px",
                                              "background-color": "white"
                                            },
                                            attrs: {
                                              disabled: item.sexo == "MASCULINO"
                                            },
                                            on: {
                                              input: function(tdit) {
                                                return _vm.updateDe10A59(
                                                  item,
                                                  tdit,
                                                  "tdit"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.tdit,
                                              callback: function($$v) {
                                                _vm.$set(item, "tdit", $$v)
                                              },
                                              expression: "item.tdit"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D1" } },
                                              [_vm._v("D1")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D2" } },
                                              [_vm._v("D2")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D3" } },
                                              [_vm._v("D3")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D4" } },
                                              [_vm._v("D4")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D5" } },
                                              [_vm._v("D5")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.tripleviral == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: {
                                              width: "150px",
                                              "background-color": "white"
                                            },
                                            attrs: {
                                              disabled: item.sexo == "MASCULINO"
                                            },
                                            on: {
                                              input: function(tripleviral) {
                                                return _vm.updateDe10A59(
                                                  item,
                                                  tripleviral,
                                                  "tripleviral"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.tripleviral,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "tripleviral",
                                                  $$v
                                                )
                                              },
                                              expression: "item.tripleviral"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D1" } },
                                              [_vm._v("D1")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D1" } },
                                              [_vm._v("D2")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.nacidos_vivos == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: {
                                              width: "150px",
                                              "background-color": "white"
                                            },
                                            attrs: {
                                              disabled: item.sexo == "MASCULINO"
                                            },
                                            on: {
                                              input: function(nacidos_vivos) {
                                                return _vm.updateDe10A59(
                                                  item,
                                                  nacidos_vivos,
                                                  "nacidos_vivos"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.nacidos_vivos,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "nacidos_vivos",
                                                  $$v
                                                )
                                              },
                                              expression: "item.nacidos_vivos"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "1" } },
                                              [_vm._v("1 Hijo")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "2" } },
                                              [_vm._v("Entre 2 y 3")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "3" } },
                                              [_vm._v("Entre 4 y 6")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "4" } },
                                              [_vm._v("Mas de 7")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "5" } },
                                              [_vm._v("Ninguna")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.abortos == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: {
                                              width: "150px",
                                              "background-color": "white"
                                            },
                                            attrs: {
                                              disabled: item.sexo == "MASCULINO"
                                            },
                                            on: {
                                              input: function(abortos) {
                                                return _vm.updateDe10A59(
                                                  item,
                                                  abortos,
                                                  "abortos"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.abortos,
                                              callback: function($$v) {
                                                _vm.$set(item, "abortos", $$v)
                                              },
                                              expression: "item.abortos"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.examen_prostata == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: {
                                              width: "150px",
                                              "background-color": "white"
                                            },
                                            attrs: {
                                              disabled: item.sexo == "FEMENINO"
                                            },
                                            on: {
                                              input: function(examen_prostata) {
                                                return _vm.updateDe10A59(
                                                  item,
                                                  examen_prostata,
                                                  "examen_prostata"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.examen_prostata,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "examen_prostata",
                                                  $$v
                                                )
                                              },
                                              expression: "item.examen_prostata"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SIN" } },
                                              [_vm._v("SI NORMAL")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SIA" } },
                                              [_vm._v("SI ANORMAL")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.biposia_prostata == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: {
                                              width: "150px",
                                              "background-color": "white"
                                            },
                                            attrs: {
                                              disabled: item.sexo == "FEMENINO"
                                            },
                                            on: {
                                              input: function(
                                                biposia_prostata
                                              ) {
                                                return _vm.updateDe10A59(
                                                  item,
                                                  biposia_prostata,
                                                  "biposia_prostata"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.biposia_prostata,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "biposia_prostata",
                                                  $$v
                                                )
                                              },
                                              expression:
                                                "item.biposia_prostata"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SIN" } },
                                              [_vm._v("SI NORMAL")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SIA" } },
                                              [_vm._v("SI ANORMAL")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    )
                                  ]
                                )
                              }),
                              0
                            )
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c("div", {
                        staticClass: "kt-separator kt-separator--border-dashed"
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", {
                    staticClass: "kt-separator kt-separator--border-dashed"
                  }),
                  _vm._v(" "),
                  _vm._m(30),
                  _vm._v(" "),
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c("div", { staticClass: "table-responsive" }, [
                        _c(
                          "table",
                          { staticClass: "table table-sm table-hover" },
                          [
                            _vm._m(31),
                            _vm._v(" "),
                            _c(
                              "tbody",
                              _vm._l(_vm.ParPost, function(item, index) {
                                return _c(
                                  "tr",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value: item.estado == "Activo",
                                        expression: "item.estado=='Activo'"
                                      }
                                    ],
                                    key: index
                                  },
                                  [
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "100px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: index + 1 }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "200px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: {
                                            value:
                                              item.tipo_id +
                                              " : " +
                                              item.identificacion
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "300px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: {
                                            value:
                                              item.pnom +
                                              " " +
                                              item.snom +
                                              " " +
                                              item.pape +
                                              " " +
                                              item.sape
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "150px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.sexo }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "100px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.edad }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.aceptacion == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(aceptacion) {
                                                return _vm.updatePosparto(
                                                  item,
                                                  aceptacion,
                                                  "aceptacion"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.aceptacion,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "aceptacion",
                                                  $$v
                                                )
                                              },
                                              expression: "item.aceptacion"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.control_prenatal == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(
                                                control_prenatal
                                              ) {
                                                return _vm.updatePosparto(
                                                  item,
                                                  control_prenatal,
                                                  "control_prenatal"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.control_prenatal,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "control_prenatal",
                                                  $$v
                                                )
                                              },
                                              expression:
                                                "item.control_prenatal"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.atencion_parto == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(atencion_parto) {
                                                return _vm.updatePosparto(
                                                  item,
                                                  atencion_parto,
                                                  "atencion_parto"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.atencion_parto,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "atencion_parto",
                                                  $$v
                                                )
                                              },
                                              expression: "item.atencion_parto"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SICASA" } },
                                              [_vm._v("SI EN CASA")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              {
                                                attrs: { value: "SIHOSPITAL" }
                                              },
                                              [_vm._v("SI EN HOSPITAL")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.carnet == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(carnet) {
                                                return _vm.updatePosparto(
                                                  item,
                                                  carnet,
                                                  "carnet"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.carnet,
                                              callback: function($$v) {
                                                _vm.$set(item, "carnet", $$v)
                                              },
                                              expression: "item.carnet"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.fecha_ultima,
                                              expression: "item.fecha_ultima"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.fecha_ultima == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          attrs: {
                                            id: "date",
                                            type: "date",
                                            max: _vm._f("moment")(_vm.hoy)
                                          },
                                          domProps: {
                                            value: item.fecha_ultima
                                          },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "fecha_ultima",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdatePosparto(
                                                  item,
                                                  $event,
                                                  "fecha_ultima"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.fecha_probable,
                                              expression: "item.fecha_probable"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.fecha_probable == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          attrs: { id: "date", type: "date" },
                                          domProps: {
                                            value: item.fecha_probable
                                          },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "fecha_probable",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdatePosparto(
                                                  item,
                                                  $event,
                                                  "fecha_probable"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.peso,
                                              expression: "item.peso"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.peso == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.peso },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "peso",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdatePosparto(
                                                  item,
                                                  $event,
                                                  "peso"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.talla,
                                              expression: "item.talla"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.talla == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.talla },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "talla",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdatePosparto(
                                                  item,
                                                  $event,
                                                  "talla"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.imc,
                                              expression: "item.imc"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.imc == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.imc },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "imc",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdatePosparto(
                                                  item,
                                                  $event,
                                                  "imc"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.semanas_ges,
                                              expression: "item.semanas_ges"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.semanas_ges == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "250px" },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.semanas_ges },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "semanas_ges",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdatePosparto(
                                                  item,
                                                  $event,
                                                  "semanas_ges"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.num_controles == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(num_controles) {
                                                return _vm.updatePosparto(
                                                  item,
                                                  num_controles,
                                                  "num_controles"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.num_controles,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "num_controles",
                                                  $$v
                                                )
                                              },
                                              expression: "item.num_controles"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "1" } },
                                              [_vm._v("1")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "2" } },
                                              [_vm._v("2")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "3" } },
                                              [_vm._v("3")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.vih == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(vih) {
                                                return _vm.updatePosparto(
                                                  item,
                                                  vih,
                                                  "vih"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.vih,
                                              callback: function($$v) {
                                                _vm.$set(item, "vih", $$v)
                                              },
                                              expression: "item.vih"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SIP" } },
                                              [_vm._v("SI POSITIVO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SIN" } },
                                              [_vm._v("SI NEGATIVO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.toxoplasma == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(toxoplasma) {
                                                return _vm.updatePosparto(
                                                  item,
                                                  toxoplasma,
                                                  "toxoplasma"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.toxoplasma,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "toxoplasma",
                                                  $$v
                                                )
                                              },
                                              expression: "item.toxoplasma"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SIP" } },
                                              [_vm._v("SI POSITIVO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SIN" } },
                                              [_vm._v("SI NEGATIVO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.vdrl == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(vdrl) {
                                                return _vm.updatePosparto(
                                                  item,
                                                  vdrl,
                                                  "vdrl"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.vdrl,
                                              callback: function($$v) {
                                                _vm.$set(item, "vdrl", $$v)
                                              },
                                              expression: "item.vdrl"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SIP" } },
                                              [_vm._v("SI POSITIVO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SIN" } },
                                              [_vm._v("SI NEGATIVO")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.odontologia == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(odontologia) {
                                                return _vm.updatePosparto(
                                                  item,
                                                  odontologia,
                                                  "odontologia"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.odontologia,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "odontologia",
                                                  $$v
                                                )
                                              },
                                              expression: "item.odontologia"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.vacunaciontdit == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(vacunaciontdit) {
                                                return _vm.updatePosparto(
                                                  item,
                                                  vacunaciontdit,
                                                  "vacunaciontdit"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.vacunaciontdit,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "vacunaciontdit",
                                                  $$v
                                                )
                                              },
                                              expression: "item.vacunaciontdit"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D1" } },
                                              [_vm._v("D1")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D2" } },
                                              [_vm._v("D2")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D3" } },
                                              [_vm._v("D3")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D4" } },
                                              [_vm._v("D4")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "D5" } },
                                              [_vm._v("D5")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.fecha_ultimo_parto,
                                              expression:
                                                "item.fecha_ultimo_parto"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.fecha_ultimo_parto == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          attrs: { id: "date", type: "date" },
                                          domProps: {
                                            value: item.fecha_ultimo_parto
                                          },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "fecha_ultimo_parto",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdatePosparto(
                                                  item,
                                                  $event,
                                                  "fecha_ultimo_parto"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.suplementacion == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(suplementacion) {
                                                return _vm.updatePosparto(
                                                  item,
                                                  suplementacion,
                                                  "suplementacion"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.suplementacion,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "suplementacion",
                                                  $$v
                                                )
                                              },
                                              expression: "item.suplementacion"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.enfermedades_cronicas == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(
                                                enfermedades_cronicas
                                              ) {
                                                return _vm.updatePosparto(
                                                  item,
                                                  enfermedades_cronicas,
                                                  "enfermedades_cronicas"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.enfermedades_cronicas,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "enfermedades_cronicas",
                                                  $$v
                                                )
                                              },
                                              expression:
                                                "item.enfermedades_cronicas"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.sedentarismo == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(sedentarismo) {
                                                return _vm.updatePosparto(
                                                  item,
                                                  sedentarismo,
                                                  "sedentarismo"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.sedentarismo,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "sedentarismo",
                                                  $$v
                                                )
                                              },
                                              expression: "item.sedentarismo"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.fuma == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(fuma) {
                                                return _vm.updatePosparto(
                                                  item,
                                                  fuma,
                                                  "fuma"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.fuma,
                                              callback: function($$v) {
                                                _vm.$set(item, "fuma", $$v)
                                              },
                                              expression: "item.fuma"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.consumo == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(consumo) {
                                                return _vm.updatePosparto(
                                                  item,
                                                  consumo,
                                                  "consumo"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.consumo,
                                              callback: function($$v) {
                                                _vm.$set(item, "consumo", $$v)
                                              },
                                              expression: "item.consumo"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.bebidas == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(bebidas) {
                                                return _vm.updatePosparto(
                                                  item,
                                                  bebidas,
                                                  "bebidas"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.bebidas,
                                              callback: function($$v) {
                                                _vm.$set(item, "bebidas", $$v)
                                              },
                                              expression: "item.bebidas"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.tipo_parto == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(tipo_parto) {
                                                return _vm.updatePosparto(
                                                  item,
                                                  tipo_parto,
                                                  "tipo_parto"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.tipo_parto,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "tipo_parto",
                                                  $$v
                                                )
                                              },
                                              expression: "item.tipo_parto"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "VAGINAL" } },
                                              [_vm._v("VAGINAL")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "CESAREA" } },
                                              [_vm._v("CESAREA")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.atencion_institucional == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(
                                                atencion_institucional
                                              ) {
                                                return _vm.updatePosparto(
                                                  item,
                                                  atencion_institucional,
                                                  "atencion_institucional"
                                                )
                                              }
                                            },
                                            model: {
                                              value:
                                                item.atencion_institucional,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "atencion_institucional",
                                                  $$v
                                                )
                                              },
                                              expression:
                                                "item.atencion_institucional"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.morgestacion == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(morgestacion) {
                                                return _vm.updatePosparto(
                                                  item,
                                                  morgestacion,
                                                  "morgestacion"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.morgestacion,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "morgestacion",
                                                  $$v
                                                )
                                              },
                                              expression: "item.morgestacion"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _vm._l(
                                              _vm.morbilidad_options,
                                              function(item) {
                                                return _c(
                                                  "option",
                                                  {
                                                    key: item.value,
                                                    domProps: {
                                                      value: item.value
                                                    }
                                                  },
                                                  [_vm._v(_vm._s(item.texto))]
                                                )
                                              }
                                            )
                                          ],
                                          2
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.morparto == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(morparto) {
                                                return _vm.updatePosparto(
                                                  item,
                                                  morparto,
                                                  "morparto"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.morparto,
                                              callback: function($$v) {
                                                _vm.$set(item, "morparto", $$v)
                                              },
                                              expression: "item.morparto"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _vm._l(
                                              _vm.morbilidad_options,
                                              function(item) {
                                                return _c(
                                                  "option",
                                                  {
                                                    key: item.value,
                                                    domProps: {
                                                      value: item.value
                                                    }
                                                  },
                                                  [_vm._v(_vm._s(item.texto))]
                                                )
                                              }
                                            )
                                          ],
                                          2
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.morposparto == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(morposparto) {
                                                return _vm.updatePosparto(
                                                  item,
                                                  morposparto,
                                                  "morposparto"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.morposparto,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "morposparto",
                                                  $$v
                                                )
                                              },
                                              expression: "item.morposparto"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _vm._l(
                                              _vm.morbilidad_options,
                                              function(item) {
                                                return _c(
                                                  "option",
                                                  {
                                                    key: item.value,
                                                    domProps: {
                                                      value: item.value
                                                    }
                                                  },
                                                  [_vm._v(_vm._s(item.texto))]
                                                )
                                              }
                                            )
                                          ],
                                          2
                                        )
                                      ],
                                      1
                                    )
                                  ]
                                )
                              }),
                              0
                            )
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c("div", {
                        staticClass: "kt-separator kt-separator--border-dashed"
                      })
                    ])
                  ])
                ]
              ),
              _vm._v(" "),
              _c(
                "div",
                {
                  staticClass: "tab-pane",
                  attrs: { id: "adolescente", role: "tabpanel" }
                },
                [
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-12 kt-align-right" }, [
                      _c(
                        "button",
                        {
                          staticClass: "btn btn-brand",
                          class: _vm.spinGAdole,
                          attrs: { type: "button", disabled: !_vm.valGAdole },
                          on: {
                            click: function($event) {
                              return _vm.cambiarTab1(
                                "adultomayor",
                                "adolescente"
                              )
                            }
                          }
                        },
                        [
                          _c("i", { staticClass: "la la-arrow-right" }),
                          _vm._v(" "),
                          _c("span", { staticClass: "kt-hidden-mobile" }, [
                            _vm._v("Guardar")
                          ])
                        ]
                      )
                    ])
                  ]),
                  _vm._v(" "),
                  _vm._m(32),
                  _vm._v(" "),
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c("div", { staticClass: "table-responsive" }, [
                        _c(
                          "table",
                          { staticClass: "table table-sm table-hover" },
                          [
                            _vm._m(33),
                            _vm._v(" "),
                            _c(
                              "tbody",
                              _vm._l(_vm.De12A17, function(item, index) {
                                return _c(
                                  "tr",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value: item.estado == "Activo",
                                        expression: "item.estado=='Activo'"
                                      }
                                    ],
                                    key: index
                                  },
                                  [
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "100px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: index + 1 }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "200px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: {
                                            value:
                                              item.tipo_id +
                                              " : " +
                                              item.identificacion
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "300px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: {
                                            value:
                                              item.pnom +
                                              " " +
                                              item.snom +
                                              " " +
                                              item.pape +
                                              " " +
                                              item.sape
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "150px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.sexo }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "100px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.edad }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.peso,
                                              expression: "item.peso"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.peso == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.peso },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "peso",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateDe12A17(
                                                  item,
                                                  $event,
                                                  "peso"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.talla,
                                              expression: "item.talla"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.talla == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.talla },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "talla",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateDe12A17(
                                                  item,
                                                  $event,
                                                  "talla"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.imc,
                                              expression: "item.imc"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.imc == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.imc },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "imc",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateDe12A17(
                                                  item,
                                                  $event,
                                                  "imc"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.visuales == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(visuales) {
                                                return _vm.updateDe12A17(
                                                  item,
                                                  visuales,
                                                  "visuales"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.visuales,
                                              callback: function($$v) {
                                                _vm.$set(item, "visuales", $$v)
                                              },
                                              expression: "item.visuales"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.auditivos == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(auditivos) {
                                                return _vm.updateDe12A17(
                                                  item,
                                                  auditivos,
                                                  "auditivos"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.auditivos,
                                              callback: function($$v) {
                                                _vm.$set(item, "auditivos", $$v)
                                              },
                                              expression: "item.auditivos"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.conducta == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(conducta) {
                                                return _vm.updateDe12A17(
                                                  item,
                                                  conducta,
                                                  "conducta"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.conducta,
                                              callback: function($$v) {
                                                _vm.$set(item, "conducta", $$v)
                                              },
                                              expression: "item.conducta"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.enfermedades_cronicas == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(
                                                enfermedades_cronicas
                                              ) {
                                                return _vm.updateDe12A17(
                                                  item,
                                                  enfermedades_cronicas,
                                                  "enfermedades_cronicas"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.enfermedades_cronicas,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "enfermedades_cronicas",
                                                  $$v
                                                )
                                              },
                                              expression:
                                                "item.enfermedades_cronicas"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.dientes_sanos == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(dientes_sanos) {
                                                return _vm.updateDe12A17(
                                                  item,
                                                  dientes_sanos,
                                                  "dientes_sanos"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.dientes_sanos,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "dientes_sanos",
                                                  $$v
                                                )
                                              },
                                              expression: "item.dientes_sanos"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.consultaodon == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(consultaodon) {
                                                return _vm.updateDe12A17(
                                                  item,
                                                  consultaodon,
                                                  "consultaodon"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.consultaodon,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "consultaodon",
                                                  $$v
                                                )
                                              },
                                              expression: "item.consultaodon"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.nocepillado,
                                              expression: "item.nocepillado"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.nocepillado == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text" },
                                          domProps: { value: item.nocepillado },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "nocepillado",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateDe12A17(
                                                  item,
                                                  $event,
                                                  "nocepillado"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.maltrato == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(maltrato) {
                                                return _vm.updateDe12A17(
                                                  item,
                                                  maltrato,
                                                  "maltrato"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.maltrato,
                                              callback: function($$v) {
                                                _vm.$set(item, "maltrato", $$v)
                                              },
                                              expression: "item.maltrato"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.alcohol == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(alcohol) {
                                                return _vm.updateDe12A17(
                                                  item,
                                                  alcohol,
                                                  "alcohol"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.alcohol,
                                              callback: function($$v) {
                                                _vm.$set(item, "alcohol", $$v)
                                              },
                                              expression: "item.alcohol"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.fuma == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(fuma) {
                                                return _vm.updateDe12A17(
                                                  item,
                                                  fuma,
                                                  "fuma"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.fuma,
                                              callback: function($$v) {
                                                _vm.$set(item, "fuma", $$v)
                                              },
                                              expression: "item.fuma"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.spa == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(spa) {
                                                return _vm.updateDe12A17(
                                                  item,
                                                  spa,
                                                  "spa"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.spa,
                                              callback: function($$v) {
                                                _vm.$set(item, "spa", $$v)
                                              },
                                              expression: "item.spa"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.desparacitado == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(desparacitado) {
                                                return _vm.updateDe12A17(
                                                  item,
                                                  desparacitado,
                                                  "desparacitado"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.desparacitado,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "desparacitado",
                                                  $$v
                                                )
                                              },
                                              expression: "item.desparacitado"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.empleo == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(empleo) {
                                                return _vm.updateDe12A17(
                                                  item,
                                                  empleo,
                                                  "empleo"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.empleo,
                                              callback: function($$v) {
                                                _vm.$set(item, "empleo", $$v)
                                              },
                                              expression: "item.empleo"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.religion == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(religion) {
                                                return _vm.updateDe12A17(
                                                  item,
                                                  religion,
                                                  "religion"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.religion,
                                              callback: function($$v) {
                                                _vm.$set(item, "religion", $$v)
                                              },
                                              expression: "item.religion"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _vm._l(
                                              _vm.religion_options,
                                              function(item) {
                                                return _c(
                                                  "option",
                                                  {
                                                    key: item.value,
                                                    domProps: {
                                                      value: item.value
                                                    }
                                                  },
                                                  [_vm._v(_vm._s(item.texto))]
                                                )
                                              }
                                            )
                                          ],
                                          2
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.queesvih == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(queesvih) {
                                                return _vm.updateDe12A17(
                                                  item,
                                                  queesvih,
                                                  "queesvih"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.queesvih,
                                              callback: function($$v) {
                                                _vm.$set(item, "queesvih", $$v)
                                              },
                                              expression: "item.queesvih"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.queescancerutero == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(
                                                queescancerutero
                                              ) {
                                                return _vm.updateDe12A17(
                                                  item,
                                                  queescancerutero,
                                                  "queescancerutero"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.queescancerutero,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "queescancerutero",
                                                  $$v
                                                )
                                              },
                                              expression:
                                                "item.queescancerutero"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.queespapiloma == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(queespapiloma) {
                                                return _vm.updateDe12A17(
                                                  item,
                                                  queespapiloma,
                                                  "queespapiloma"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.queespapiloma,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "queespapiloma",
                                                  $$v
                                                )
                                              },
                                              expression: "item.queespapiloma"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.queescancerseno == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(queescancerseno) {
                                                return _vm.updateDe12A17(
                                                  item,
                                                  queescancerseno,
                                                  "queescancerseno"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.queescancerseno,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "queescancerseno",
                                                  $$v
                                                )
                                              },
                                              expression: "item.queescancerseno"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.padre == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(padre) {
                                                return _vm.updateDe12A17(
                                                  item,
                                                  padre,
                                                  "padre"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.padre,
                                              callback: function($$v) {
                                                _vm.$set(item, "padre", $$v)
                                              },
                                              expression: "item.padre"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "1" } },
                                              [_vm._v("BUENA")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "2" } },
                                              [_vm._v("MUY BUENA")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "3" } },
                                              [_vm._v("REGULAR")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "4" } },
                                              [_vm._v("MALA")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.madre == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(madre) {
                                                return _vm.updateDe12A17(
                                                  item,
                                                  madre,
                                                  "madre"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.madre,
                                              callback: function($$v) {
                                                _vm.$set(item, "madre", $$v)
                                              },
                                              expression: "item.madre"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "1" } },
                                              [_vm._v("BUENA")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "2" } },
                                              [_vm._v("MUY BUENA")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "3" } },
                                              [_vm._v("REGULAR")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "4" } },
                                              [_vm._v("MALA")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.hermanos == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(hermanos) {
                                                return _vm.updateDe12A17(
                                                  item,
                                                  hermanos,
                                                  "hermanos"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.hermanos,
                                              callback: function($$v) {
                                                _vm.$set(item, "hermanos", $$v)
                                              },
                                              expression: "item.hermanos"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "1" } },
                                              [_vm._v("BUENA")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "2" } },
                                              [_vm._v("MUY BUENA")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "3" } },
                                              [_vm._v("REGULAR")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "4" } },
                                              [_vm._v("MALA")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.conyuge == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(conyuge) {
                                                return _vm.updateDe12A17(
                                                  item,
                                                  conyuge,
                                                  "conyuge"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.conyuge,
                                              callback: function($$v) {
                                                _vm.$set(item, "conyuge", $$v)
                                              },
                                              expression: "item.conyuge"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "1" } },
                                              [_vm._v("BUENA")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "2" } },
                                              [_vm._v("MUY BUENA")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "3" } },
                                              [_vm._v("REGULAR")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "4" } },
                                              [_vm._v("MALA")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    )
                                  ]
                                )
                              }),
                              0
                            )
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c("div", {
                        staticClass: "kt-separator kt-separator--border-dashed"
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", {
                    staticClass: "kt-separator kt-separator--border-dashed"
                  }),
                  _vm._v(" "),
                  _vm._m(34),
                  _vm._v(" "),
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c("div", { staticClass: "table-responsive" }, [
                        _c(
                          "table",
                          { staticClass: "table table-sm table-hover" },
                          [
                            _vm._m(35),
                            _vm._v(" "),
                            _c(
                              "tbody",
                              _vm._l(_vm.De18A28, function(item, index) {
                                return _c(
                                  "tr",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value: item.estado == "Activo",
                                        expression: "item.estado=='Activo'"
                                      }
                                    ],
                                    key: index
                                  },
                                  [
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "100px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: index + 1 }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "200px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: {
                                            value:
                                              item.tipo_id +
                                              " : " +
                                              item.identificacion
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "300px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: {
                                            value:
                                              item.pnom +
                                              " " +
                                              item.snom +
                                              " " +
                                              item.pape +
                                              " " +
                                              item.sape
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "150px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.sexo }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "100px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.edad }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.peso,
                                              expression: "item.peso"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.peso == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.peso },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "peso",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateDe18A28(
                                                  item,
                                                  $event,
                                                  "peso"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.talla,
                                              expression: "item.talla"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.talla == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.talla },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "talla",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateDe18A28(
                                                  item,
                                                  $event,
                                                  "talla"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.imc,
                                              expression: "item.imc"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.imc == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.imc },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "imc",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateDe18A28(
                                                  item,
                                                  $event,
                                                  "imc"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.pcintura,
                                              expression: "item.pcintura"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.pcintura == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text" },
                                          domProps: { value: item.pcintura },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "pcintura",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateDe18A28(
                                                  item,
                                                  $event,
                                                  "pcintura"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.visuales == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(visuales) {
                                                return _vm.updateDe18A28(
                                                  item,
                                                  visuales,
                                                  "visuales"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.visuales,
                                              callback: function($$v) {
                                                _vm.$set(item, "visuales", $$v)
                                              },
                                              expression: "item.visuales"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.auditivos == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(auditivos) {
                                                return _vm.updateDe18A28(
                                                  item,
                                                  auditivos,
                                                  "auditivos"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.auditivos,
                                              callback: function($$v) {
                                                _vm.$set(item, "auditivos", $$v)
                                              },
                                              expression: "item.auditivos"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.conducta == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(conducta) {
                                                return _vm.updateDe18A28(
                                                  item,
                                                  conducta,
                                                  "conducta"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.conducta,
                                              callback: function($$v) {
                                                _vm.$set(item, "conducta", $$v)
                                              },
                                              expression: "item.conducta"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.enfermedades_cronicas == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(
                                                enfermedades_cronicas
                                              ) {
                                                return _vm.updateDe18A28(
                                                  item,
                                                  enfermedades_cronicas,
                                                  "enfermedades_cronicas"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.enfermedades_cronicas,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "enfermedades_cronicas",
                                                  $$v
                                                )
                                              },
                                              expression:
                                                "item.enfermedades_cronicas"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.dientes_sanos == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(dientes_sanos) {
                                                return _vm.updateDe18A28(
                                                  item,
                                                  dientes_sanos,
                                                  "dientes_sanos"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.dientes_sanos,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "dientes_sanos",
                                                  $$v
                                                )
                                              },
                                              expression: "item.dientes_sanos"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.consultaodon == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(consultaodon) {
                                                return _vm.updateDe18A28(
                                                  item,
                                                  consultaodon,
                                                  "consultaodon"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.consultaodon,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "consultaodon",
                                                  $$v
                                                )
                                              },
                                              expression: "item.consultaodon"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.nocepillado,
                                              expression: "item.nocepillado"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.nocepillado == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text" },
                                          domProps: { value: item.nocepillado },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "nocepillado",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateDe18A28(
                                                  item,
                                                  $event,
                                                  "nocepillado"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.maltrato == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(maltrato) {
                                                return _vm.updateDe18A28(
                                                  item,
                                                  maltrato,
                                                  "maltrato"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.maltrato,
                                              callback: function($$v) {
                                                _vm.$set(item, "maltrato", $$v)
                                              },
                                              expression: "item.maltrato"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.alcohol == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(alcohol) {
                                                return _vm.updateDe18A28(
                                                  item,
                                                  alcohol,
                                                  "alcohol"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.alcohol,
                                              callback: function($$v) {
                                                _vm.$set(item, "alcohol", $$v)
                                              },
                                              expression: "item.alcohol"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.fuma == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(fuma) {
                                                return _vm.updateDe18A28(
                                                  item,
                                                  fuma,
                                                  "fuma"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.fuma,
                                              callback: function($$v) {
                                                _vm.$set(item, "fuma", $$v)
                                              },
                                              expression: "item.fuma"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.spa == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(spa) {
                                                return _vm.updateDe18A28(
                                                  item,
                                                  spa,
                                                  "spa"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.spa,
                                              callback: function($$v) {
                                                _vm.$set(item, "spa", $$v)
                                              },
                                              expression: "item.spa"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.desparacitado == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(desparacitado) {
                                                return _vm.updateDe18A28(
                                                  item,
                                                  desparacitado,
                                                  "desparacitado"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.desparacitado,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "desparacitado",
                                                  $$v
                                                )
                                              },
                                              expression: "item.desparacitado"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.empleo == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(empleo) {
                                                return _vm.updateDe18A28(
                                                  item,
                                                  empleo,
                                                  "empleo"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.empleo,
                                              callback: function($$v) {
                                                _vm.$set(item, "empleo", $$v)
                                              },
                                              expression: "item.empleo"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.religion == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(religion) {
                                                return _vm.updateDe18A28(
                                                  item,
                                                  religion,
                                                  "religion"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.religion,
                                              callback: function($$v) {
                                                _vm.$set(item, "religion", $$v)
                                              },
                                              expression: "item.religion"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _vm._l(
                                              _vm.religion_options,
                                              function(item) {
                                                return _c(
                                                  "option",
                                                  {
                                                    key: item.value,
                                                    domProps: {
                                                      value: item.value
                                                    }
                                                  },
                                                  [_vm._v(_vm._s(item.texto))]
                                                )
                                              }
                                            )
                                          ],
                                          2
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.queesvih == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(queesvih) {
                                                return _vm.updateDe18A28(
                                                  item,
                                                  queesvih,
                                                  "queesvih"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.queesvih,
                                              callback: function($$v) {
                                                _vm.$set(item, "queesvih", $$v)
                                              },
                                              expression: "item.queesvih"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.queescancerutero == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(
                                                queescancerutero
                                              ) {
                                                return _vm.updateDe18A28(
                                                  item,
                                                  queescancerutero,
                                                  "queescancerutero"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.queescancerutero,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "queescancerutero",
                                                  $$v
                                                )
                                              },
                                              expression:
                                                "item.queescancerutero"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.queespapiloma == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(queespapiloma) {
                                                return _vm.updateDe18A28(
                                                  item,
                                                  queespapiloma,
                                                  "queespapiloma"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.queespapiloma,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "queespapiloma",
                                                  $$v
                                                )
                                              },
                                              expression: "item.queespapiloma"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    )
                                  ]
                                )
                              }),
                              0
                            )
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c("div", {
                        staticClass: "kt-separator kt-separator--border-dashed"
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", {
                    staticClass: "kt-separator kt-separator--border-dashed"
                  }),
                  _vm._v(" "),
                  _vm._m(36),
                  _vm._v(" "),
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c("div", { staticClass: "table-responsive" }, [
                        _c(
                          "table",
                          { staticClass: "table table-sm table-hover" },
                          [
                            _vm._m(37),
                            _vm._v(" "),
                            _c(
                              "tbody",
                              _vm._l(_vm.De29A59, function(item, index) {
                                return _c(
                                  "tr",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value: item.estado == "Activo",
                                        expression: "item.estado=='Activo'"
                                      }
                                    ],
                                    key: index
                                  },
                                  [
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "100px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: index + 1 }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "200px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: {
                                            value:
                                              item.tipo_id +
                                              " : " +
                                              item.identificacion
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "300px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: {
                                            value:
                                              item.pnom +
                                              " " +
                                              item.snom +
                                              " " +
                                              item.pape +
                                              " " +
                                              item.sape
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "150px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.sexo }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "100px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.edad }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.peso,
                                              expression: "item.peso"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.peso == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.peso },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "peso",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateDe29A59(
                                                  item,
                                                  $event,
                                                  "peso"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.talla,
                                              expression: "item.talla"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.talla == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.talla },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "talla",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateDe29A59(
                                                  item,
                                                  $event,
                                                  "talla"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.imc,
                                              expression: "item.imc"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.imc == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.imc },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "imc",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateDe29A59(
                                                  item,
                                                  $event,
                                                  "imc"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.pcintura,
                                              expression: "item.pcintura"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.pcintura == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text" },
                                          domProps: { value: item.pcintura },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "pcintura",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateDe29A59(
                                                  item,
                                                  $event,
                                                  "pcintura"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.visuales == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(visuales) {
                                                return _vm.updateDe29A59(
                                                  item,
                                                  visuales,
                                                  "visuales"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.visuales,
                                              callback: function($$v) {
                                                _vm.$set(item, "visuales", $$v)
                                              },
                                              expression: "item.visuales"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.auditivos == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(auditivos) {
                                                return _vm.updateDe29A59(
                                                  item,
                                                  auditivos,
                                                  "auditivos"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.auditivos,
                                              callback: function($$v) {
                                                _vm.$set(item, "auditivos", $$v)
                                              },
                                              expression: "item.auditivos"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.conducta == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(conducta) {
                                                return _vm.updateDe29A59(
                                                  item,
                                                  conducta,
                                                  "conducta"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.conducta,
                                              callback: function($$v) {
                                                _vm.$set(item, "conducta", $$v)
                                              },
                                              expression: "item.conducta"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.enfermedades_cronicas == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(
                                                enfermedades_cronicas
                                              ) {
                                                return _vm.updateDe29A59(
                                                  item,
                                                  enfermedades_cronicas,
                                                  "enfermedades_cronicas"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.enfermedades_cronicas,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "enfermedades_cronicas",
                                                  $$v
                                                )
                                              },
                                              expression:
                                                "item.enfermedades_cronicas"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.dientes_sanos == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(dientes_sanos) {
                                                return _vm.updateDe29A59(
                                                  item,
                                                  dientes_sanos,
                                                  "dientes_sanos"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.dientes_sanos,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "dientes_sanos",
                                                  $$v
                                                )
                                              },
                                              expression: "item.dientes_sanos"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.consultaodon == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(consultaodon) {
                                                return _vm.updateDe29A59(
                                                  item,
                                                  consultaodon,
                                                  "consultaodon"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.consultaodon,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "consultaodon",
                                                  $$v
                                                )
                                              },
                                              expression: "item.consultaodon"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.nocepillado,
                                              expression: "item.nocepillado"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.nocepillado == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text" },
                                          domProps: { value: item.nocepillado },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "nocepillado",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateDe29A59(
                                                  item,
                                                  $event,
                                                  "nocepillado"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.maltrato == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(maltrato) {
                                                return _vm.updateDe29A59(
                                                  item,
                                                  maltrato,
                                                  "maltrato"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.maltrato,
                                              callback: function($$v) {
                                                _vm.$set(item, "maltrato", $$v)
                                              },
                                              expression: "item.maltrato"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.alcohol == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(alcohol) {
                                                return _vm.updateDe29A59(
                                                  item,
                                                  alcohol,
                                                  "alcohol"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.alcohol,
                                              callback: function($$v) {
                                                _vm.$set(item, "alcohol", $$v)
                                              },
                                              expression: "item.alcohol"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.fuma == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(fuma) {
                                                return _vm.updateDe29A59(
                                                  item,
                                                  fuma,
                                                  "fuma"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.fuma,
                                              callback: function($$v) {
                                                _vm.$set(item, "fuma", $$v)
                                              },
                                              expression: "item.fuma"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.spa == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(spa) {
                                                return _vm.updateDe29A59(
                                                  item,
                                                  spa,
                                                  "spa"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.spa,
                                              callback: function($$v) {
                                                _vm.$set(item, "spa", $$v)
                                              },
                                              expression: "item.spa"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.desparacitado == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(desparacitado) {
                                                return _vm.updateDe29A59(
                                                  item,
                                                  desparacitado,
                                                  "desparacitado"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.desparacitado,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "desparacitado",
                                                  $$v
                                                )
                                              },
                                              expression: "item.desparacitado"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.empleo == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(empleo) {
                                                return _vm.updateDe29A59(
                                                  item,
                                                  empleo,
                                                  "empleo"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.empleo,
                                              callback: function($$v) {
                                                _vm.$set(item, "empleo", $$v)
                                              },
                                              expression: "item.empleo"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.religion == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(religion) {
                                                return _vm.updateDe29A59(
                                                  item,
                                                  religion,
                                                  "religion"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.religion,
                                              callback: function($$v) {
                                                _vm.$set(item, "religion", $$v)
                                              },
                                              expression: "item.religion"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _vm._l(
                                              _vm.religion_options,
                                              function(item) {
                                                return _c(
                                                  "option",
                                                  {
                                                    key: item.value,
                                                    domProps: {
                                                      value: item.value
                                                    }
                                                  },
                                                  [_vm._v(_vm._s(item.texto))]
                                                )
                                              }
                                            )
                                          ],
                                          2
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.queesvih == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(queesvih) {
                                                return _vm.updateDe29A59(
                                                  item,
                                                  queesvih,
                                                  "queesvih"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.queesvih,
                                              callback: function($$v) {
                                                _vm.$set(item, "queesvih", $$v)
                                              },
                                              expression: "item.queesvih"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.queescancerutero == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(
                                                queescancerutero
                                              ) {
                                                return _vm.updateDe29A59(
                                                  item,
                                                  queescancerutero,
                                                  "queescancerutero"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.queescancerutero,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "queescancerutero",
                                                  $$v
                                                )
                                              },
                                              expression:
                                                "item.queescancerutero"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.queespapiloma == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(queespapiloma) {
                                                return _vm.updateDe29A59(
                                                  item,
                                                  queespapiloma,
                                                  "queespapiloma"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.queespapiloma,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "queespapiloma",
                                                  $$v
                                                )
                                              },
                                              expression: "item.queespapiloma"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    )
                                  ]
                                )
                              }),
                              0
                            )
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c("div", {
                        staticClass: "kt-separator kt-separator--border-dashed"
                      })
                    ])
                  ])
                ]
              ),
              _vm._v(" "),
              _c(
                "div",
                {
                  staticClass: "tab-pane",
                  attrs: { id: "adultomayor", role: "tabpanel" }
                },
                [
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-12 kt-align-right" }, [
                      _c(
                        "button",
                        {
                          staticClass: "btn btn-brand",
                          class: _vm.spinGAdul,
                          attrs: { type: "button", disabled: !_vm.valGAdul },
                          on: {
                            click: function($event) {
                              return _vm.cambiarTab1("migrante", "adultomayor")
                            }
                          }
                        },
                        [
                          _c("i", { staticClass: "la la-arrow-right" }),
                          _vm._v(" "),
                          _c("span", { staticClass: "kt-hidden-mobile" }, [
                            _vm._v("Guardar")
                          ])
                        ]
                      )
                    ])
                  ]),
                  _vm._v(" "),
                  _vm._m(38),
                  _vm._v(" "),
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c("div", { staticClass: "table-responsive" }, [
                        _c(
                          "table",
                          { staticClass: "table table-sm table-hover" },
                          [
                            _vm._m(39),
                            _vm._v(" "),
                            _c(
                              "tbody",
                              _vm._l(_vm.De60, function(item, index) {
                                return _c(
                                  "tr",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value: item.estado == "Activo",
                                        expression: "item.estado=='Activo'"
                                      }
                                    ],
                                    key: index
                                  },
                                  [
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "100px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: index + 1 }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "200px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: {
                                            value:
                                              item.tipo_id +
                                              " : " +
                                              item.identificacion
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "300px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: {
                                            value:
                                              item.pnom +
                                              " " +
                                              item.snom +
                                              " " +
                                              item.pape +
                                              " " +
                                              item.sape
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "150px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.sexo }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "100px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.edad }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.grupo_ayudas == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(grupo_ayudas) {
                                                return _vm.updateDe60(
                                                  item,
                                                  grupo_ayudas,
                                                  "grupo_ayudas"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.grupo_ayudas,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "grupo_ayudas",
                                                  $$v
                                                )
                                              },
                                              expression: "item.grupo_ayudas"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _vm._l(_vm.grupos_options, function(
                                              item
                                            ) {
                                              return _c(
                                                "option",
                                                {
                                                  key: item.value,
                                                  domProps: {
                                                    value: item.value
                                                  }
                                                },
                                                [_vm._v(_vm._s(item.texto))]
                                              )
                                            })
                                          ],
                                          2
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.peso,
                                              expression: "item.peso"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.peso == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.peso },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "peso",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateDe60(
                                                  item,
                                                  $event,
                                                  "peso"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.talla,
                                              expression: "item.talla"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.talla == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.talla },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "talla",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateDe60(
                                                  item,
                                                  $event,
                                                  "talla"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.imc,
                                              expression: "item.imc"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.imc == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.imc },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "imc",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateDe60(
                                                  item,
                                                  $event,
                                                  "imc"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.pa,
                                              expression: "item.pa"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.pa == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text" },
                                          domProps: { value: item.pa },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "pa",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateDe60(
                                                  item,
                                                  $event,
                                                  "pa"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.cigarrillo == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(cigarrillo) {
                                                return _vm.updateDe60(
                                                  item,
                                                  cigarrillo,
                                                  "cigarrillo"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.cigarrillo,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "cigarrillo",
                                                  $$v
                                                )
                                              },
                                              expression: "item.cigarrillo"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.alcohol == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(alcohol) {
                                                return _vm.updateDe60(
                                                  item,
                                                  alcohol,
                                                  "alcohol"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.alcohol,
                                              callback: function($$v) {
                                                _vm.$set(item, "alcohol", $$v)
                                              },
                                              expression: "item.alcohol"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.actividad_fisica == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(
                                                actividad_fisica
                                              ) {
                                                return _vm.updateDe60(
                                                  item,
                                                  actividad_fisica,
                                                  "actividad_fisica"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.actividad_fisica,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "actividad_fisica",
                                                  $$v
                                                )
                                              },
                                              expression:
                                                "item.actividad_fisica"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.sintomatico == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(sintomatico) {
                                                return _vm.updateDe60(
                                                  item,
                                                  sintomatico,
                                                  "sintomatico"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.sintomatico,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "sintomatico",
                                                  $$v
                                                )
                                              },
                                              expression: "item.sintomatico"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.examen_seno == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(examen_seno) {
                                                return _vm.updateDe60(
                                                  item,
                                                  examen_seno,
                                                  "examen_seno"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.examen_seno,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "examen_seno",
                                                  $$v
                                                )
                                              },
                                              expression: "item.examen_seno"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SIN" } },
                                              [_vm._v("SI NORMAL")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SIA" } },
                                              [_vm._v("SI ANORMAL")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.citologia == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(citologia) {
                                                return _vm.updateDe60(
                                                  item,
                                                  citologia,
                                                  "citologia"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.citologia,
                                              callback: function($$v) {
                                                _vm.$set(item, "citologia", $$v)
                                              },
                                              expression: "item.citologia"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SIN" } },
                                              [_vm._v("SI NORMAL")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SIA" } },
                                              [_vm._v("SI ANORMAL")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.colposcopia == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(colposcopia) {
                                                return _vm.updateDe60(
                                                  item,
                                                  colposcopia,
                                                  "colposcopia"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.colposcopia,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "colposcopia",
                                                  $$v
                                                )
                                              },
                                              expression: "item.colposcopia"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SIN" } },
                                              [_vm._v("SI NORMAL")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SIA" } },
                                              [_vm._v("SI ANORMAL")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.examen_prostata == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(examen_prostata) {
                                                return _vm.updateDe60(
                                                  item,
                                                  examen_prostata,
                                                  "examen_prostata"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.examen_prostata,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "examen_prostata",
                                                  $$v
                                                )
                                              },
                                              expression: "item.examen_prostata"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SIN" } },
                                              [_vm._v("SI NORMAL")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SIA" } },
                                              [_vm._v("SI ANORMAL")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.biposia_prostata == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(
                                                biposia_prostata
                                              ) {
                                                return _vm.updateDe60(
                                                  item,
                                                  biposia_prostata,
                                                  "biposia_prostata"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.biposia_prostata,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "biposia_prostata",
                                                  $$v
                                                )
                                              },
                                              expression:
                                                "item.biposia_prostata"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SIN" } },
                                              [_vm._v("SI NORMAL")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SIA" } },
                                              [_vm._v("SI ANORMAL")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.agudeza_visual == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(agudeza_visual) {
                                                return _vm.updateDe60(
                                                  item,
                                                  agudeza_visual,
                                                  "agudeza_visual"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.agudeza_visual,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "agudeza_visual",
                                                  $$v
                                                )
                                              },
                                              expression: "item.agudeza_visual"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NA" } },
                                              [_vm._v("No Aplica")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SIN" } },
                                              [_vm._v("SI NORMAL")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SIA" } },
                                              [_vm._v("SI ANORMAL")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.subsidio == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(subsidio) {
                                                return _vm.updateDe60(
                                                  item,
                                                  subsidio,
                                                  "subsidio"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.subsidio,
                                              callback: function($$v) {
                                                _vm.$set(item, "subsidio", $$v)
                                              },
                                              expression: "item.subsidio"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.enfermedades_cronicas == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(
                                                enfermedades_cronicas
                                              ) {
                                                return _vm.updateDe60(
                                                  item,
                                                  enfermedades_cronicas,
                                                  "enfermedades_cronicas"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.enfermedades_cronicas,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "enfermedades_cronicas",
                                                  $$v
                                                )
                                              },
                                              expression:
                                                "item.enfermedades_cronicas"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.enfermedades_infecciosas ==
                                              ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(
                                                enfermedades_infecciosas
                                              ) {
                                                return _vm.updateDe60(
                                                  item,
                                                  enfermedades_infecciosas,
                                                  "enfermedades_infecciosas"
                                                )
                                              }
                                            },
                                            model: {
                                              value:
                                                item.enfermedades_infecciosas,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "enfermedades_infecciosas",
                                                  $$v
                                                )
                                              },
                                              expression:
                                                "item.enfermedades_infecciosas"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.empleo == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(empleo) {
                                                return _vm.updateDe60(
                                                  item,
                                                  empleo,
                                                  "empleo"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.empleo,
                                              callback: function($$v) {
                                                _vm.$set(item, "empleo", $$v)
                                              },
                                              expression: "item.empleo"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    )
                                  ]
                                )
                              }),
                              0
                            )
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c("div", {
                        staticClass: "kt-separator kt-separator--border-dashed"
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _vm._m(40),
                  _vm._v(" "),
                  _vm._m(41),
                  _vm._v(" "),
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c("div", { staticClass: "table-responsive" }, [
                        _c(
                          "table",
                          { staticClass: "table table-sm table-hover" },
                          [
                            _vm._m(42),
                            _vm._v(" "),
                            _c(
                              "tbody",
                              _vm._l(_vm.EnCro, function(item, index) {
                                return _c(
                                  "tr",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value: item.estado == "Activo",
                                        expression: "item.estado=='Activo'"
                                      }
                                    ],
                                    key: index
                                  },
                                  [
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "100px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: index + 1 }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "200px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: {
                                            value:
                                              item.tipo_id +
                                              " : " +
                                              item.identificacion
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "300px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: {
                                            value:
                                              item.pnom +
                                              " " +
                                              item.snom +
                                              " " +
                                              item.pape +
                                              " " +
                                              item.sape
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "150px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.sexo }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.enfermedad == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(enfermedad) {
                                                return _vm.updateEnCro(
                                                  item,
                                                  enfermedad,
                                                  "enfermedad"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.enfermedad,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "enfermedad",
                                                  $$v
                                                )
                                              },
                                              expression: "item.enfermedad"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _vm._l(_vm.enfcro_options, function(
                                              item
                                            ) {
                                              return _c(
                                                "option",
                                                {
                                                  key: item.value,
                                                  domProps: {
                                                    value: item.value
                                                  }
                                                },
                                                [_vm._v(_vm._s(item.texto))]
                                              )
                                            })
                                          ],
                                          2
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.tiempo == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(tiempo) {
                                                return _vm.updateEnCro(
                                                  item,
                                                  tiempo,
                                                  "tiempo"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.tiempo,
                                              callback: function($$v) {
                                                _vm.$set(item, "tiempo", $$v)
                                              },
                                              expression: "item.tiempo"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "1" } },
                                              [_vm._v("Reciente")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "2" } },
                                              [_vm._v("3 Meses")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "3" } },
                                              [_vm._v("Entre 3 y 6 meses")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "4" } },
                                              [_vm._v("Mas de 1 año")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.tratamiento == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(tratamiento) {
                                                return _vm.updateEnCro(
                                                  item,
                                                  tratamiento,
                                                  "tratamiento"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.tratamiento,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "tratamiento",
                                                  $$v
                                                )
                                              },
                                              expression: "item.tratamiento"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    )
                                  ]
                                )
                              }),
                              0
                            )
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c("div", {
                        staticClass: "kt-separator kt-separator--border-dashed"
                      })
                    ])
                  ]),
                  _vm._v(" "),
                  _vm._m(43),
                  _vm._v(" "),
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c("div", { staticClass: "table-responsive" }, [
                        _c(
                          "table",
                          { staticClass: "table table-sm table-hover" },
                          [
                            _vm._m(44),
                            _vm._v(" "),
                            _c(
                              "tbody",
                              _vm._l(_vm.EnInf, function(item, index) {
                                return _c(
                                  "tr",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value: item.estado == "Activo",
                                        expression: "item.estado=='Activo'"
                                      }
                                    ],
                                    key: index
                                  },
                                  [
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "100px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: index + 1 }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "200px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: {
                                            value:
                                              item.tipo_id +
                                              " : " +
                                              item.identificacion
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "300px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: {
                                            value:
                                              item.pnom +
                                              " " +
                                              item.snom +
                                              " " +
                                              item.pape +
                                              " " +
                                              item.sape
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "150px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.sexo }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.enfermedad == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(enfermedad) {
                                                return _vm.updateEnInf(
                                                  item,
                                                  enfermedad,
                                                  "enfermedad"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.enfermedad,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "enfermedad",
                                                  $$v
                                                )
                                              },
                                              expression: "item.enfermedad"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _vm._l(_vm.enfinf_options, function(
                                              item
                                            ) {
                                              return _c(
                                                "option",
                                                {
                                                  key: item.value,
                                                  domProps: {
                                                    value: item.value
                                                  }
                                                },
                                                [_vm._v(_vm._s(item.texto))]
                                              )
                                            })
                                          ],
                                          2
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.tiempo == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(tiempo) {
                                                return _vm.updateEnInf(
                                                  item,
                                                  tiempo,
                                                  "tiempo"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.tiempo,
                                              callback: function($$v) {
                                                _vm.$set(item, "tiempo", $$v)
                                              },
                                              expression: "item.tiempo"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "1" } },
                                              [_vm._v("Menos de 6 Meses")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "2" } },
                                              [_vm._v("Menos de 1 Años")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "3" } },
                                              [_vm._v("Menos de 5 Años")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "4" } },
                                              [_vm._v("Mas de 5 Años")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            class:
                                              item.tratamiento == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(tratamiento) {
                                                return _vm.updateEnInf(
                                                  item,
                                                  tratamiento,
                                                  "tratamiento"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.tratamiento,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "tratamiento",
                                                  $$v
                                                )
                                              },
                                              expression: "item.tratamiento"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              {
                                                attrs: {
                                                  value: "",
                                                  selected: ""
                                                }
                                              },
                                              [_vm._v("Seleccione")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    )
                                  ]
                                )
                              }),
                              0
                            )
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c("div", {
                        staticClass: "kt-separator kt-separator--border-dashed"
                      })
                    ])
                  ])
                ]
              ),
              _vm._v(" "),
              _c(
                "div",
                {
                  staticClass: "tab-pane",
                  attrs: { id: "migrante", role: "tabpanel" }
                },
                [
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-12 kt-align-right" }, [
                      _c(
                        "button",
                        {
                          staticClass: "btn btn-brand",
                          class: _vm.spinGMig,
                          attrs: { type: "button", disabled: !_vm.valGMig },
                          on: {
                            click: function($event) {
                              return _vm.cambiarTab1("guardar", "migrante")
                            }
                          }
                        },
                        [
                          _c("i", { staticClass: "la la-check" }),
                          _vm._v(" "),
                          _c("span", { staticClass: "kt-hidden-mobile" }, [
                            _vm._v("Guardar")
                          ])
                        ]
                      )
                    ])
                  ]),
                  _vm._v(" "),
                  _vm._m(45),
                  _vm._v(" "),
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c("div", { staticClass: "table-responsive" }, [
                        _c(
                          "table",
                          { staticClass: "table table-sm table-hover" },
                          [
                            _vm._m(46),
                            _vm._v(" "),
                            _c(
                              "tbody",
                              _vm._l(_vm.Migra, function(item, index) {
                                return _c(
                                  "tr",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value: item.estado == "Activo",
                                        expression: "item.estado=='Activo'"
                                      }
                                    ],
                                    key: index
                                  },
                                  [
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "100px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: index + 1 }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "200px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: {
                                            value:
                                              item.tipo_id +
                                              " : " +
                                              item.identificacion
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "300px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: {
                                            value:
                                              item.pnom +
                                              " " +
                                              item.snom +
                                              " " +
                                              item.pape +
                                              " " +
                                              item.sape
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "150px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.sexo }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          staticClass:
                                            "form-control text-capitalize is-valid",
                                          staticStyle: {
                                            width: "100px",
                                            "background-color": "white"
                                          },
                                          attrs: { type: "text", readonly: "" },
                                          domProps: { value: item.edad }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.pais,
                                              expression: "item.pais"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.pais == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text" },
                                          domProps: { value: item.pais },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "pais",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateMigra(
                                                  item,
                                                  $event,
                                                  "pais"
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            staticClass:
                                              "form-control text-capitalize",
                                            class:
                                              item.registrado == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(registrado) {
                                                return _vm.updateMigra(
                                                  item,
                                                  registrado,
                                                  "registrado"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.registrado,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "registrado",
                                                  $$v
                                                )
                                              },
                                              expression: "item.registrado"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            staticClass:
                                              "form-control text-capitalize",
                                            class:
                                              item.cuantollego == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(cuantollego) {
                                                return _vm.updateMigra(
                                                  item,
                                                  cuantollego,
                                                  "cuantollego"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.cuantollego,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  item,
                                                  "cuantollego",
                                                  $$v
                                                )
                                              },
                                              expression: "item.cuantollego"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              { attrs: { value: "1" } },
                                              [_vm._v("Menos de 3 meses")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "2" } },
                                              [_vm._v("6 meses a 12 meses")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "3" } },
                                              [_vm._v("12 meses a 24 meses")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "4" } },
                                              [_vm._v("Más de 24 meses")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            staticClass:
                                              "form-control text-capitalize",
                                            class:
                                              item.futuro == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(futuro) {
                                                return _vm.updateMigra(
                                                  item,
                                                  futuro,
                                                  "futuro"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.futuro,
                                              callback: function($$v) {
                                                _vm.$set(item, "futuro", $$v)
                                              },
                                              expression: "item.futuro"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              { attrs: { value: "1" } },
                                              [
                                                _vm._v(
                                                  "Volver al Pais de Origen"
                                                )
                                              ]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "2" } },
                                              [_vm._v("Radicarse en este pais")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "3" } },
                                              [_vm._v("Irse a otro Pais")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            staticClass:
                                              "form-control text-capitalize",
                                            class:
                                              item.recibido == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(recibido) {
                                                return _vm.updateMigra(
                                                  item,
                                                  recibido,
                                                  "recibido"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.recibido,
                                              callback: function($$v) {
                                                _vm.$set(item, "recibido", $$v)
                                              },
                                              expression: "item.recibido"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              { attrs: { value: "SI" } },
                                              [_vm._v("SI")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "NO" } },
                                              [_vm._v("NO")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            staticClass:
                                              "form-control text-capitalize",
                                            class:
                                              item.necesidad == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(necesidad) {
                                                return _vm.updateMigra(
                                                  item,
                                                  necesidad,
                                                  "necesidad"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.necesidad,
                                              callback: function($$v) {
                                                _vm.$set(item, "necesidad", $$v)
                                              },
                                              expression: "item.necesidad"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              { attrs: { value: "1" } },
                                              [_vm._v("Hospedaje")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "2" } },
                                              [_vm._v("Alimentación")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "3" } },
                                              [_vm._v("Transporte")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "4" } },
                                              [_vm._v("Salud")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "5" } },
                                              [_vm._v("Trabajo")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "6" } },
                                              [_vm._v("Ropa")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: item.dependen,
                                              expression: "item.dependen"
                                            }
                                          ],
                                          staticClass:
                                            "form-control text-capitalize",
                                          class:
                                            item.dependen == ""
                                              ? "is-invalid"
                                              : "is-valid",
                                          staticStyle: { width: "150px" },
                                          attrs: { type: "text" },
                                          domProps: { value: item.dependen },
                                          on: {
                                            input: [
                                              function($event) {
                                                if ($event.target.composing) {
                                                  return
                                                }
                                                _vm.$set(
                                                  item,
                                                  "dependen",
                                                  $event.target.value
                                                )
                                              },
                                              function($event) {
                                                return _vm.changeupdateMigra(
                                                  item,
                                                  $event,
                                                  "dependen",
                                                  index
                                                )
                                              }
                                            ]
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "b-form-select",
                                          {
                                            staticClass:
                                              "form-control text-capitalize",
                                            class:
                                              item.ingreso == ""
                                                ? "is-invalid"
                                                : "is-valid",
                                            staticStyle: { width: "150px" },
                                            on: {
                                              input: function(ingreso) {
                                                return _vm.updateMigra(
                                                  item,
                                                  ingreso,
                                                  "ingreso"
                                                )
                                              }
                                            },
                                            model: {
                                              value: item.ingreso,
                                              callback: function($$v) {
                                                _vm.$set(item, "ingreso", $$v)
                                              },
                                              expression: "item.ingreso"
                                            }
                                          },
                                          [
                                            _c(
                                              "option",
                                              { attrs: { value: "1" } },
                                              [_vm._v("menos de 500.000")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "2" } },
                                              [_vm._v("500.000 a 800.0000")]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "option",
                                              { attrs: { value: "3" } },
                                              [_vm._v("mas de 800.000")]
                                            )
                                          ]
                                        )
                                      ],
                                      1
                                    )
                                  ]
                                )
                              }),
                              0
                            )
                          ]
                        )
                      ]),
                      _vm._v(" "),
                      _c("div", {
                        staticClass: "kt-separator kt-separator--border-dashed"
                      })
                    ])
                  ])
                ]
              )
            ])
          ]),
          _vm._v(" "),
          _c(
            "b-modal",
            {
              ref: "modalOcupaciones",
              attrs: {
                "hide-footer": "",
                title: "Ocupaciones",
                size: "xl",
                centered: "",
                "header-bg-variant": "danger",
                "header-text-variant": "light",
                "no-close-on-backdrop": true
              }
            },
            [
              _c("div", { staticClass: "d-block" }, [
                _c("form", [
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-6 col-lg-6" }),
                    _vm._v(" "),
                    _c("div", { staticClass: "col-md-6 col-lg-6" }, [
                      _c("form", { staticClass: "kt-form" }, [
                        _c("div", { staticClass: "form-group" }, [
                          _c("div", { staticClass: "input-group" }, [
                            _c("input", {
                              directives: [
                                {
                                  name: "model",
                                  rawName: "v-model",
                                  value: _vm.txtbusqueda,
                                  expression: "txtbusqueda"
                                }
                              ],
                              staticClass: "form-control",
                              attrs: { type: "text", placeholder: "Busqueda" },
                              domProps: { value: _vm.txtbusqueda },
                              on: {
                                input: function($event) {
                                  if ($event.target.composing) {
                                    return
                                  }
                                  _vm.txtbusqueda = $event.target.value
                                }
                              }
                            }),
                            _vm._v(" "),
                            _c("div", { staticClass: "input-group-append" }, [
                              _c(
                                "button",
                                {
                                  staticClass: "btn btn-primary btn-icon",
                                  attrs: { type: "button" },
                                  on: {
                                    click: function($event) {
                                      return _vm.consultarOcupaciones(1)
                                    }
                                  }
                                },
                                [_c("i", { staticClass: "fa fa-search" })]
                              )
                            ])
                          ])
                        ])
                      ])
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c(
                        "div",
                        {
                          staticClass: "table-responsive",
                          staticStyle: { height: "350px" }
                        },
                        [
                          _c(
                            "table",
                            { staticClass: "table table-sm table-hover" },
                            [
                              _c("thead", {}, [
                                _c("tr", { staticClass: "kt-bg-fill-brand" }, [
                                  _c("th", [_vm._v("No.")]),
                                  _vm._v(" "),
                                  _c("th", [_vm._v("Ocupación")]),
                                  _vm._v(" "),
                                  _c("td", { staticClass: "text-center" }, [
                                    _vm._v("Opciones")
                                  ])
                                ])
                              ]),
                              _vm._v(" "),
                              _c(
                                "tbody",
                                _vm._l(_vm.ocupacionesVector, function(
                                  item,
                                  index
                                ) {
                                  return _c("tr", { key: index }, [
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle"
                                        }
                                      },
                                      [_vm._v(_vm._s(index + 1))]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "span",
                                          { staticClass: "text-capitalize" },
                                          [_vm._v(_vm._s(item.descripcion))]
                                        )
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "text-align": "center",
                                          "vertical-align": "middle"
                                        }
                                      },
                                      [
                                        _c(
                                          "button",
                                          {
                                            staticClass:
                                              "btn btn-icon btn-sm btn-outline-success",
                                            attrs: {
                                              type: "button",
                                              title: "Seleccionar"
                                            },
                                            on: {
                                              click: function($event) {
                                                return _vm.seleccionarOcupaciones(
                                                  item
                                                )
                                              }
                                            }
                                          },
                                          [
                                            _c(
                                              "svg",
                                              {
                                                staticClass: "kt-svg-icon",
                                                attrs: {
                                                  xmlns:
                                                    "http://www.w3.org/2000/svg",
                                                  "xmlns:xlink":
                                                    "http://www.w3.org/1999/xlink",
                                                  width: "24px",
                                                  height: "24px",
                                                  viewBox: "0 0 24 24",
                                                  version: "1.1"
                                                }
                                              },
                                              [
                                                _c(
                                                  "g",
                                                  {
                                                    attrs: {
                                                      stroke: "none",
                                                      "stroke-width": "1",
                                                      fill: "none",
                                                      "fill-rule": "evenodd"
                                                    }
                                                  },
                                                  [
                                                    _c("polygon", {
                                                      attrs: {
                                                        id: "Shape",
                                                        points:
                                                          "0 0 24 0 24 24 0 24"
                                                      }
                                                    }),
                                                    _vm._v(" "),
                                                    _c("path", {
                                                      attrs: {
                                                        d:
                                                          "M6.26193932,17.6476484 C5.90425297,18.0684559 5.27315905,18.1196257 4.85235158,17.7619393 C4.43154411,17.404253 4.38037434,16.773159 4.73806068,16.3523516 L13.2380607,6.35235158 C13.6013618,5.92493855 14.2451015,5.87991302 14.6643638,6.25259068 L19.1643638,10.2525907 C19.5771466,10.6195087 19.6143273,11.2515811 19.2474093,11.6643638 C18.8804913,12.0771466 18.2484189,12.1143273 17.8356362,11.7474093 L14.0997854,8.42665306 L6.26193932,17.6476484 Z",
                                                        id: "Path-94",
                                                        fill: "#000000",
                                                        "fill-rule": "nonzero",
                                                        transform:
                                                          "translate(11.999995, 12.000002) rotate(-180.000000) translate(-11.999995, -12.000002) "
                                                      }
                                                    })
                                                  ]
                                                )
                                              ]
                                            )
                                          ]
                                        )
                                      ]
                                    )
                                  ])
                                }),
                                0
                              )
                            ]
                          )
                        ]
                      )
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "text-right" }, [
                    _c(
                      "button",
                      {
                        staticClass: "btn btn-warning",
                        attrs: { type: "button" },
                        on: { click: _vm.cerrarModal }
                      },
                      [
                        _c("i", { staticClass: "fa fa-window-close" }),
                        _vm._v(" Cerrar\n              ")
                      ]
                    )
                  ])
                ])
              ])
            ]
          ),
          _vm._v(" "),
          _c(
            "b-modal",
            {
              ref: "modalActividad",
              attrs: {
                "hide-footer": "",
                title: "Actividades Economicas",
                size: "xl",
                centered: "",
                "header-bg-variant": "danger",
                "header-text-variant": "light",
                "no-close-on-backdrop": true
              }
            },
            [
              _c("div", { staticClass: "d-block" }, [
                _c("form", [
                  _c("div", { staticClass: "row" }, [
                    _c("div", { staticClass: "col-md-6 col-lg-6" }, [
                      _c("form", { staticClass: "kt-form" }, [
                        _c("div", { staticClass: "form-group" }, [
                          _c("div", { staticClass: "input-group" }, [
                            _c("input", {
                              directives: [
                                {
                                  name: "model",
                                  rawName: "v-model",
                                  value: _vm.txtbusquedaAct,
                                  expression: "txtbusquedaAct"
                                }
                              ],
                              staticClass: "form-control",
                              attrs: { type: "text", placeholder: "Busqueda" },
                              domProps: { value: _vm.txtbusquedaAct },
                              on: {
                                input: function($event) {
                                  if ($event.target.composing) {
                                    return
                                  }
                                  _vm.txtbusquedaAct = $event.target.value
                                }
                              }
                            }),
                            _vm._v(" "),
                            _c("div", { staticClass: "input-group-append" }, [
                              _c(
                                "button",
                                {
                                  staticClass: "btn btn-primary btn-icon",
                                  attrs: { type: "button" },
                                  on: {
                                    click: function($event) {
                                      return _vm.consultarActividades(1)
                                    }
                                  }
                                },
                                [_c("i", { staticClass: "fa fa-search" })]
                              )
                            ])
                          ])
                        ])
                      ])
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "form-group row" }, [
                    _c("div", { staticClass: "col-md-12" }, [
                      _c(
                        "div",
                        {
                          staticClass: "table-responsive",
                          staticStyle: { height: "350px" }
                        },
                        [
                          _c(
                            "table",
                            { staticClass: "table table-sm table-hover" },
                            [
                              _c("thead", {}, [
                                _c("tr", { staticClass: "kt-bg-fill-brand" }, [
                                  _c("th", [_vm._v("No.")]),
                                  _vm._v(" "),
                                  _c("th", [_vm._v("Actividad Economica")]),
                                  _vm._v(" "),
                                  _c("td", { staticClass: "text-center" }, [
                                    _vm._v("Opciones")
                                  ])
                                ])
                              ]),
                              _vm._v(" "),
                              _c(
                                "tbody",
                                _vm._l(_vm.actividadesVector, function(
                                  item,
                                  index
                                ) {
                                  return _c("tr", { key: index }, [
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle"
                                        }
                                      },
                                      [_vm._v(_vm._s(index + 1))]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "font-weight": "normal",
                                          "vertical-align": "middle",
                                          "text-align": "left",
                                          "text-transform": "capitalize"
                                        }
                                      },
                                      [
                                        _c(
                                          "span",
                                          { staticClass: "text-capitalize" },
                                          [_vm._v(_vm._s(item.descripcion))]
                                        )
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "td",
                                      {
                                        staticStyle: {
                                          "text-align": "center",
                                          "vertical-align": "middle"
                                        }
                                      },
                                      [
                                        _c(
                                          "button",
                                          {
                                            staticClass:
                                              "btn btn-icon btn-sm btn-outline-success",
                                            attrs: {
                                              type: "button",
                                              title: "Seleccionar"
                                            },
                                            on: {
                                              click: function($event) {
                                                return _vm.seleccionarActividades(
                                                  item
                                                )
                                              }
                                            }
                                          },
                                          [
                                            _c(
                                              "svg",
                                              {
                                                staticClass: "kt-svg-icon",
                                                attrs: {
                                                  xmlns:
                                                    "http://www.w3.org/2000/svg",
                                                  "xmlns:xlink":
                                                    "http://www.w3.org/1999/xlink",
                                                  width: "24px",
                                                  height: "24px",
                                                  viewBox: "0 0 24 24",
                                                  version: "1.1"
                                                }
                                              },
                                              [
                                                _c(
                                                  "g",
                                                  {
                                                    attrs: {
                                                      stroke: "none",
                                                      "stroke-width": "1",
                                                      fill: "none",
                                                      "fill-rule": "evenodd"
                                                    }
                                                  },
                                                  [
                                                    _c("polygon", {
                                                      attrs: {
                                                        id: "Shape",
                                                        points:
                                                          "0 0 24 0 24 24 0 24"
                                                      }
                                                    }),
                                                    _vm._v(" "),
                                                    _c("path", {
                                                      attrs: {
                                                        d:
                                                          "M6.26193932,17.6476484 C5.90425297,18.0684559 5.27315905,18.1196257 4.85235158,17.7619393 C4.43154411,17.404253 4.38037434,16.773159 4.73806068,16.3523516 L13.2380607,6.35235158 C13.6013618,5.92493855 14.2451015,5.87991302 14.6643638,6.25259068 L19.1643638,10.2525907 C19.5771466,10.6195087 19.6143273,11.2515811 19.2474093,11.6643638 C18.8804913,12.0771466 18.2484189,12.1143273 17.8356362,11.7474093 L14.0997854,8.42665306 L6.26193932,17.6476484 Z",
                                                        id: "Path-94",
                                                        fill: "#000000",
                                                        "fill-rule": "nonzero",
                                                        transform:
                                                          "translate(11.999995, 12.000002) rotate(-180.000000) translate(-11.999995, -12.000002) "
                                                      }
                                                    })
                                                  ]
                                                )
                                              ]
                                            )
                                          ]
                                        )
                                      ]
                                    )
                                  ])
                                }),
                                0
                              )
                            ]
                          )
                        ]
                      )
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "text-right" }, [
                    _c(
                      "button",
                      {
                        staticClass: "btn btn-warning",
                        attrs: { type: "button" },
                        on: { click: _vm.cerrarModal }
                      },
                      [
                        _c("i", { staticClass: "fa fa-window-close" }),
                        _vm._v(" Cerrar\n              ")
                      ]
                    )
                  ])
                ])
              ])
            ]
          )
        ],
        1
      )
    ])
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "kt-portlet__head-label" }, [
      _c("h3", { staticClass: "kt-portlet__head-title" }, [
        _c("span", { staticClass: "kt-widget20__number kt-font-danger" }, [
          _vm._v("CARACTERIZACIÓN")
        ])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "18px" }
        },
        [_vm._v("A.Ficha Del Hogar")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "15px" }
        },
        [_vm._v("Jefe del Hogar")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", {}, [
      _c("tr", { staticClass: "kt-bg-fill-brand" }, [
        _c("th", [_vm._v("No.")]),
        _vm._v(" "),
        _c("th", [_vm._v("Tipo de Documento")]),
        _vm._v(" "),
        _c("th", [_vm._v("Documento")]),
        _vm._v(" "),
        _c("th", [_vm._v("Primer Nombre")]),
        _vm._v(" "),
        _c("th", [_vm._v("Segundo Nombre")]),
        _vm._v(" "),
        _c("th", [_vm._v("Primer Apellido")]),
        _vm._v(" "),
        _c("th", [_vm._v("Segundo Apellido")]),
        _vm._v(" "),
        _c("th", [_vm._v("Sexo")]),
        _vm._v(" "),
        _c("th", [_vm._v("Orientación Sexual")]),
        _vm._v(" "),
        _c("th", [_vm._v("Identidad de Genero")]),
        _vm._v(" "),
        _c("th", [_vm._v("Parentesco")]),
        _vm._v(" "),
        _c("th", [_vm._v("Telefono")]),
        _vm._v(" "),
        _c("th", [_vm._v("Estado Civil")]),
        _vm._v(" "),
        _c("th", [_vm._v("Nacimiento")]),
        _vm._v(" "),
        _c("th", [_vm._v("Edad")]),
        _vm._v(" "),
        _c("th", [_vm._v("Puntaje Sisben")]),
        _vm._v(" "),
        _c("th", [_vm._v("Eps")]),
        _vm._v(" "),
        _c("th", [_vm._v("Cual Eps")]),
        _vm._v(" "),
        _c("th", [_vm._v("Tipo Afiliación")]),
        _vm._v(" "),
        _c("th", [_vm._v("Embarazo")]),
        _vm._v(" "),
        _c("th", [_vm._v("Embarazo Multiple")]),
        _vm._v(" "),
        _c("th", [_vm._v("Discapacidad")]),
        _vm._v(" "),
        _c("th", [_vm._v("Nivel de Escolaridad")]),
        _vm._v(" "),
        _c("th", [_vm._v("Ocupación")]),
        _vm._v(" "),
        _c("th", [_vm._v("Colegio")]),
        _vm._v(" "),
        _c("th", [_vm._v("Grado")]),
        _vm._v(" "),
        _c("th", [_vm._v("Etnia")]),
        _vm._v(" "),
        _c("th", [_vm._v("Clasificación de la Etnia")]),
        _vm._v(" "),
        _c("th", [_vm._v("Perdida de Peso")]),
        _vm._v(" "),
        _c("th", [_vm._v("Entiende Español")]),
        _vm._v(" "),
        _c("th", [_vm._v("PYP")]),
        _vm._v(" "),
        _c("th", [_vm._v("Migrante")]),
        _vm._v(" "),
        _c("th", [_vm._v("Salario")]),
        _vm._v(" "),
        _c("th", [_vm._v("Programa ICBF")]),
        _vm._v(" "),
        _c("th", [_vm._v("Enfermedad Infecciosa")]),
        _vm._v(" "),
        _c("th", [_vm._v("Enfermedad Cronica")]),
        _vm._v(" "),
        _c("th", [_vm._v("Peso")]),
        _vm._v(" "),
        _c("th", [_vm._v("Talla")]),
        _vm._v(" "),
        _c("th", { staticClass: "text-center" }, [_vm._v("Opciones")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "18px" }
        },
        [_vm._v("B.Integrantes de la familia")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", {}, [
      _c("tr", { staticClass: "kt-bg-fill-brand" }, [
        _c("th", [_vm._v("No.")]),
        _vm._v(" "),
        _c("th", [_vm._v("Tipo de Documento")]),
        _vm._v(" "),
        _c("th", [_vm._v("Documento")]),
        _vm._v(" "),
        _c("th", [_vm._v("Primer Nombre")]),
        _vm._v(" "),
        _c("th", [_vm._v("Segundo Nombre")]),
        _vm._v(" "),
        _c("th", [_vm._v("Primer Apellido")]),
        _vm._v(" "),
        _c("th", [_vm._v("Segundo Apellido")]),
        _vm._v(" "),
        _c("th", [_vm._v("Sexo")]),
        _vm._v(" "),
        _c("th", [_vm._v("Orientación Sexual")]),
        _vm._v(" "),
        _c("th", [_vm._v("Identidad de Genero")]),
        _vm._v(" "),
        _c("th", [_vm._v("Parentesco")]),
        _vm._v(" "),
        _c("th", [_vm._v("Telefono")]),
        _vm._v(" "),
        _c("th", [_vm._v("Estado Civil")]),
        _vm._v(" "),
        _c("th", [_vm._v("Nacimiento")]),
        _vm._v(" "),
        _c("th", [_vm._v("Edad")]),
        _vm._v(" "),
        _c("th", [_vm._v("Puntaje Sisben")]),
        _vm._v(" "),
        _c("th", [_vm._v("Eps")]),
        _vm._v(" "),
        _c("th", [_vm._v("Cual Eps")]),
        _vm._v(" "),
        _c("th", [_vm._v("Tipo Afiliación")]),
        _vm._v(" "),
        _c("th", [_vm._v("Embarazo")]),
        _vm._v(" "),
        _c("th", [_vm._v("Embarazo Multiple")]),
        _vm._v(" "),
        _c("th", [_vm._v("Discapacidad")]),
        _vm._v(" "),
        _c("th", [_vm._v("Nivel de Escolaridad")]),
        _vm._v(" "),
        _c("th", [_vm._v("Ocupación")]),
        _vm._v(" "),
        _c("th", [_vm._v("Colegio")]),
        _vm._v(" "),
        _c("th", [_vm._v("Grado")]),
        _vm._v(" "),
        _c("th", [_vm._v("Etnia")]),
        _vm._v(" "),
        _c("th", [_vm._v("Clasificación de la Etnia")]),
        _vm._v(" "),
        _c("th", [_vm._v("Perdida de Peso")]),
        _vm._v(" "),
        _c("th", [_vm._v("Entiende Español")]),
        _vm._v(" "),
        _c("th", [_vm._v("PYP")]),
        _vm._v(" "),
        _c("th", [_vm._v("Migrante")]),
        _vm._v(" "),
        _c("th", [_vm._v("Programa ICBF")]),
        _vm._v(" "),
        _c("th", [_vm._v("Jefe de Hogar")]),
        _vm._v(" "),
        _c("th", [_vm._v("Excepciones")]),
        _vm._v(" "),
        _c("th", [_vm._v("Enfermedad Infecciosa")]),
        _vm._v(" "),
        _c("th", [_vm._v("Enfermedad Cronica")]),
        _vm._v(" "),
        _c("th", [_vm._v("Peso")]),
        _vm._v(" "),
        _c("th", [_vm._v("Talla")]),
        _vm._v(" "),
        _c("th", { staticClass: "text-center" }, [_vm._v("Opciones")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "14px" }
        },
        [_vm._v("FACTORES DE RIESGO Y PROTECTORES DE LA FAMILIA")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("tr", [
        _c("th", {
          staticClass: "kt-bg-fill-success",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "5" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "4" }
          },
          [_vm._v("Como Corrige Usted a Sus Hijos")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-warning",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "4" }
          },
          [_vm._v("Adicciones")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-brand",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "4" }
          },
          [_vm._v("Violencia Intrafamiliar")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-dark",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "2" }
          },
          [_vm._v("Estilos de Vida Saludables")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "4" }
          },
          [_vm._v("Partiicipa en Grupos Organizados")]
        )
      ]),
      _vm._v(" "),
      _c("tr", { staticClass: "kt-bg-fill-warning" }, [
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("No.")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Documento")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Nombre")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Sexo")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Edad")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Dialogos")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Sanción ó Supresión")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Castigo Verbal")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Castigo Fisico")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Alcohol")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Tabaco")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Sustancias Psicoactivas")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Apuestas")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-brand" }, [
          _vm._v("Violencia Fisica")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-brand" }, [
          _vm._v("Violencia Psicologica")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-brand" }, [
          _vm._v("Violencia Economica")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-brand" }, [_vm._v("Abuso Sexual")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [
          _vm._v("Actividad Fisica")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [
          _vm._v("Consumo de Frutas y Verduras")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Religiosos")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Sociales")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Culturales")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Recreativos")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "14px" }
        },
        [_vm._v("AFECTACIÓN CONTINGENCIA COVID-19")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("tr", { staticClass: "kt-bg-fill-warning" }, [
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("No.")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Documento")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Nombre")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Sexo")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Edad")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Ha presentado sintomas de Covid-19")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Se realizó alguna vez la prueba de covid-19")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Se ha sentido afectado por el cofinanciamiento")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Nivel de afectación")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Porcentaje de reducción de ingresos")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Perdida de familiares")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Como sobrelleva la situación economica")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Como percibe la calidad de la educación virtual")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Principal carga economica")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("En cuanto tiempo se puede recuperar")
        ])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "18px" }
        },
        [_vm._v("Vivienda")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "18px" }
        },
        [_vm._v("Acceso a servicios públicos")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "18px" }
        },
        [_vm._v("Observe si cerca de la vivienda hay")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "18px" }
        },
        [_vm._v("Animales dentro de la Vivienda")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", {}, [
      _c("tr", { staticClass: "kt-bg-fill-brand" }, [
        _c("th", [_vm._v("No.")]),
        _vm._v(" "),
        _c("th", [_vm._v("Animal")]),
        _vm._v(" "),
        _c("th", [_vm._v("Cuantos")]),
        _vm._v(" "),
        _c("th", [_vm._v("Vacunado")]),
        _vm._v(" "),
        _c("td", { staticClass: "text-center" }, [_vm._v("Opciones")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "18px" }
        },
        [_vm._v("La vivienda Tiene los Siguientes Ambientes Separados")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "18px", display: "none" }
        },
        [_vm._v("Observe Si Hay")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "18px" }
        },
        [
          _vm._v(
            "Almacena Junto A Los Alimentos Y/O Agua De Consumo Alguno De Los Siguientes Productos"
          )
        ]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "18px" }
        },
        [_vm._v("¿Cuáles son los tipos de residuos que se genera en su casa?")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "18px" }
        },
        [_vm._v("Estratificación")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", {}, [
      _c("tr", { staticClass: "kt-bg-fill-brand" }, [
        _c("th", [_vm._v("No.")]),
        _vm._v(" "),
        _c("th", [_vm._v("¿Cuenta ese Hogar con Internet?")]),
        _vm._v(" "),
        _c("th", [_vm._v("¿Tiene computador de Escritorío?")]),
        _vm._v(" "),
        _c("th", [_vm._v("¿Tiene Computador Portatil?")]),
        _vm._v(" "),
        _c("th", [_vm._v("¿Cuantos celular en uso hay en el Hogar?")]),
        _vm._v(" "),
        _c("th", [_vm._v("Tiene Equipo de sonido")]),
        _vm._v(" "),
        _c("th", [_vm._v("Cuantos Tv a Color")]),
        _vm._v(" "),
        _c("th", [_vm._v("Cuantos Vehiculos de Uso exclusivo tiene el Hogar")]),
        _vm._v(" "),
        _c("th", [
          _vm._v("¿Cual es el nivel de Instrucción del jefe del Hogar?")
        ]),
        _vm._v(" "),
        _c("th", [
          _vm._v(
            "¿Alguien en el Hogar posee afiliación de salud Privada o contribituva, prepagada ?"
          )
        ]),
        _vm._v(" "),
        _c("th", [_vm._v("¿Ingresos mensuales por Hogar zona rural?")]),
        _vm._v(" "),
        _c("th", [_vm._v("¿Ingresos mensuales por Hogar en Ciudad?")]),
        _vm._v(" "),
        _c("th", [_vm._v("Jefe del hogar")]),
        _vm._v(" "),
        _c("td", { staticClass: "text-center" }, [_vm._v("Opciones")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "18px" }
        },
        [_vm._v("IV CARACTERIZACIÓN POR CICLO VITAL")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "14px" }
        },
        [_vm._v("A. PRIMERA INFANCIA NIÑOS(AS) MENORES DE UN AÑO")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("tr", [
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-success",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "26" }
          },
          [_vm._v("Crecimiento y Desarrollo")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-dark",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "8" }
          },
          [_vm._v("Vacunación")]
        )
      ]),
      _vm._v(" "),
      _c("tr", [
        _c("th", {
          staticClass: "kt-bg-fill-success",
          attrs: { colspan: "9" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-dark",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Valoración Integral")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "9" }
          },
          [_vm._v("Valoración Nutricional")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-info",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Valoración del Desarrollo")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-warning",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "2" }
          },
          [_vm._v("Problemas")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-dark",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "8" }
        })
      ]),
      _vm._v(" "),
      _c("tr", { staticClass: "kt-bg-fill-success" }, [
        _c("th", [_vm._v("No.")]),
        _vm._v(" "),
        _c("th", [_vm._v("Documento")]),
        _vm._v(" "),
        _c("th", [_vm._v("Nombre")]),
        _vm._v(" "),
        _c("th", [_vm._v("Sexo")]),
        _vm._v(" "),
        _c("th", [_vm._v("Lugar de Nacimiento")]),
        _vm._v(" "),
        _c("th", [_vm._v("Hemoclasificación")]),
        _vm._v(" "),
        _c("th", [_vm._v("Complicaciones en el parto")]),
        _vm._v(" "),
        _c("th", [_vm._v("Via de Parto")]),
        _vm._v(" "),
        _c("th", [_vm._v("Control de CyC")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-dark" }, [_vm._v("2-3 meses")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-dark" }, [_vm._v("6-8 meses")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-dark" }, [_vm._v("9-11 meses")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Lactancia Exclusiva")
        ]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Peso al Nacer (Kgs)")
        ]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Peso Actual (Kgs)")
        ]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Longitud al Nacer (cm)")
        ]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Longitud Actual (cm)")
        ]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Peso/Longitud")
        ]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-danger" }, [_vm._v("PB.")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-danger" }, [_vm._v("P.Cefalico")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Edemas")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-info" }, [_vm._v("Lenguaje")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-info" }, [_vm._v("Motora")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-info" }, [_vm._v("Conducta")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Visuales")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Auditivos")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-dark" }, [_vm._v("Carnet (PAI)")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-dark" }, [_vm._v("BCG")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-dark" }, [_vm._v("HEP-B")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-dark" }, [_vm._v("POLIO")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-dark" }, [_vm._v("PENTAVALENTE")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-dark" }, [_vm._v("Maltrato")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-dark" }, [_vm._v("Morbilidad")]),
        _vm._v(" "),
        _c("th", { staticClass: "kt-bg-fill-dark" }, [_vm._v("TSH")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "14px" }
        },
        [_vm._v("B.PRIMERA INFANCIA NIÑOS(AS) DE 1 A 5 AÑOS (12 a 60 Meses)")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("tr", [
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-success",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "22" }
          },
          [_vm._v("Crecimiento y Desarrollo")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Salud Oral")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-info",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "8" }
          },
          [_vm._v("Vacunación")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-dark",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "4" }
        })
      ]),
      _vm._v(" "),
      _c("tr", [
        _c("th", {
          staticClass: "kt-bg-fill-success",
          attrs: { colspan: "7" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-dark",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Valoración Integral")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "7" }
          },
          [_vm._v("Valoración Nutricional")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-info",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Problemas")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-warning",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "2" }
          },
          [_vm._v("Problemas")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-danger",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "3" }
        }),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-info",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "8" }
        }),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-dark",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "4" }
        })
      ]),
      _vm._v(" "),
      _c("tr", { staticClass: "kt-bg-fill-primary" }, [
        _c("td", [_vm._v("No.")]),
        _vm._v(" "),
        _c("td", [_vm._v("Documento")]),
        _vm._v(" "),
        _c("td", [_vm._v("Nombre")]),
        _vm._v(" "),
        _c("td", [_vm._v("Sexo")]),
        _vm._v(" "),
        _c("td", [_vm._v("Edad")]),
        _vm._v(" "),
        _c("td", [_vm._v("Beneficiario de un Programa")]),
        _vm._v(" "),
        _c("td", [_vm._v("Control de CyC")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [_vm._v("18-23 meses")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [_vm._v("30-35 meses")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [_vm._v("4 años")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Peso(Kgs)")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Talla(cm)")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("IMC")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("P.B")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("P/T")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("T/E")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Perimetro Cefálico")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Lenguaje")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Motora")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Conducta")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Visuales")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Auditivos")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Caries")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("No. Cepillado Dia")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Consulta Odontologica (ultimos 6 meses)")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Carnet (PAI)")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("BCG")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("POLIO")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("DPT")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [
          _vm._v("Fiebre Amarilla")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Triple Viral")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Pentavalente")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Otras")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [_vm._v("Desparasitado")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [
          _vm._v("Señales de Maltrato")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [_vm._v("Enfermedad")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [_vm._v("Medicamento")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "14px" }
        },
        [_vm._v("C.INFANCIA NIÑOS(AS) DE 6 A 11 AÑOS")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("tr", [
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-success",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "14" }
          },
          [_vm._v("Crecimiento y Desarrollo")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "4" }
          },
          [_vm._v("Salud Oral")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-info",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "5" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-dark",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "4" }
          },
          [_vm._v("Relación Familiar")]
        )
      ]),
      _vm._v(" "),
      _c("tr", [
        _c("th", {
          staticClass: "kt-bg-fill-success",
          attrs: { colspan: "6" }
        }),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-success",
          attrs: { colspan: "1" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "4" }
          },
          [_vm._v("Valoración Nutricional")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-warning",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Problemas")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-danger",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "4" }
        }),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-info",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "5" }
        }),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-dark",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "4" }
        })
      ]),
      _vm._v(" "),
      _c("tr", { staticClass: "kt-bg-fill-primary" }, [
        _c("td", [_vm._v("No.")]),
        _vm._v(" "),
        _c("td", [_vm._v("Documento")]),
        _vm._v(" "),
        _c("td", [_vm._v("Nombre")]),
        _vm._v(" "),
        _c("td", [_vm._v("Sexo")]),
        _vm._v(" "),
        _c("td", [_vm._v("Edad")]),
        _vm._v(" "),
        _c("td", [_vm._v("Control de CyC")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [
          _vm._v("Valoración Integral")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Peso(Kgs)")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Talla(cm)")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("IMC/E")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("T/E")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Conducta")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Visuales")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Auditivos")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Dientes Sanos")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Consulta Odontologica (ultimos 6 meses)")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("No. Aplicacion Fluor")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("No. Cepillado Dia")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [
          _vm._v("Señales Maltrato ó Abuso")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [
          _vm._v("Sustancias Psicoactivas")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Desparasitado")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Enfermedad")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Medicamento")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [_vm._v("Padre")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [_vm._v("Madre")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [_vm._v("Hermanos")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [_vm._v("Conyuge")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "14px" }
        },
        [_vm._v("D.SALUD SEXUAL Y REPRODUCTIVA DE 10 A 59 AÑOS")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("tr", [
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-success",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "17" }
          },
          [_vm._v("Planificación Familiar(Hombres y Mujeres de 10 a 59 años)")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "8" }
          },
          [_vm._v("Mujer")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-dark",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "2" }
          },
          [_vm._v("Hombre")]
        )
      ]),
      _vm._v(" "),
      _c("tr", [
        _c("th", {
          staticClass: "kt-bg-fill-success",
          attrs: { colspan: "13" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Planifica")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-warning",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "1" }
          },
          [_vm._v("No Planifica")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-danger",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "4" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-info",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "2" }
          },
          [_vm._v("Vacunas")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-danger",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "2" }
        }),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-dark",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "2" }
        })
      ]),
      _vm._v(" "),
      _c("tr", { staticClass: "kt-bg-fill-primary" }, [
        _c("td", [_vm._v("No.")]),
        _vm._v(" "),
        _c("td", [_vm._v("Documento")]),
        _vm._v(" "),
        _c("td", [_vm._v("Nombre")]),
        _vm._v(" "),
        _c("td", [_vm._v("Sexo")]),
        _vm._v(" "),
        _c("td", [_vm._v("Edad")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [
          _vm._v("Edad Primera Mestruación")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [
          _vm._v("Flujo Vaginal")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [
          _vm._v("Flujo Uretral")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [
          _vm._v("Relaciones Sexuales")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [
          _vm._v("No. Compañeros Sexuales")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Usa Condon")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [
          _vm._v("Abortos Antes de 6 Meses")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [
          _vm._v("Embarazo en Adolecentes")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Metodo")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Tiempo de Metodo")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Controles Ultimo Año")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Motivo")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Citologia Cervico Vaginal")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Colposcopia")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Examen de seno")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Violencia Intrafamiliar")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("TD/IT")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Triple Viral")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Hijos Nacidos Vivos")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Abortos")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [
          _vm._v("Examen de Prostata")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [
          _vm._v("Biposia de Prostata")
        ])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "14px" }
        },
        [_vm._v("GESTACIÓN PARTO Y POSTPARTO")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("tr", [
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-success",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "28" }
          },
          [_vm._v("Gestión")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "2" }
          },
          [_vm._v("Parto")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-info",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Morbilidad")]
        )
      ]),
      _vm._v(" "),
      _c("tr", [
        _c("th", {
          staticClass: "kt-bg-fill-success",
          attrs: { colspan: "6" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "2" }
          },
          [_vm._v("Riesgo Materno")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-info",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "3" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-warning",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "4" }
          },
          [_vm._v("Valoración Nutricional")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-info",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "1" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Examen")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-dark",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "5" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-success",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "4" }
          },
          [_vm._v("Habitos")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-danger",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "2" }
        }),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-info",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "3" }
        })
      ]),
      _vm._v(" "),
      _c("tr", { staticClass: "kt-bg-fill-info" }, [
        _c("td", [_vm._v("No.")]),
        _vm._v(" "),
        _c("td", [_vm._v("Documento")]),
        _vm._v(" "),
        _c("td", [_vm._v("Nombre")]),
        _vm._v(" "),
        _c("td", [_vm._v("Sexo")]),
        _vm._v(" "),
        _c("td", [_vm._v("Edad")]),
        _vm._v(" "),
        _c("td", [_vm._v("Aceptación del Embarazo")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Control Prenatal")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Atención del Parto")
        ]),
        _vm._v(" "),
        _c("td", [_vm._v("Carnet de Control Prenatal")]),
        _vm._v(" "),
        _c("td", [_vm._v("Fecha Ultima Mestruación")]),
        _vm._v(" "),
        _c("td", [_vm._v("Fecha Probable Parto")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Peso(Kgs)")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Talla(cm)")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("IMC/EG")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Gestación (Sem)")
        ]),
        _vm._v(" "),
        _c("td", [_vm._v("No. Controles Prenatales")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Vih")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Toxoplasma")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("V.D.R.L")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [_vm._v("Odontologia")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [
          _vm._v("Vacunación TD/IT")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [
          _vm._v("Fecha Ultimo Parto")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [
          _vm._v("Suplementación con Hierro")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [
          _vm._v("Enfermedades Cronicas")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [
          _vm._v("Sedentarismo")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Fuma")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [
          _vm._v("Consumo SPA")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [
          _vm._v("Consume Bebidas Alcoholicas")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Tipo de Parto")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Atención Institucional")
        ]),
        _vm._v(" "),
        _c("td", [_vm._v("Gestación")]),
        _vm._v(" "),
        _c("td", [_vm._v("Parto")]),
        _vm._v(" "),
        _c("td", [_vm._v("Postparto")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "14px" }
        },
        [_vm._v("ADOLESCENTES DE 12 A 17 AÑOS")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("tr", [
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-success",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "11" }
          },
          [_vm._v("Crecimiento y Desarrollo")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-danger",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "1" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-dark",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Salud Oral")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-warning",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "11" }
        }),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-danger",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "4" }
        })
      ]),
      _vm._v(" "),
      _c("tr", { staticClass: "kt-bg-fill-warning" }, [
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("No.")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Documento")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Nombre")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Sexo")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Edad")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Peso(Kgs)")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Talla(m)")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("IMC")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Visuales")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Auditivos")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [
          _vm._v("De Conducta")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Enfermedad Cronica")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [_vm._v("Dientes Sanos")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [
          _vm._v("Consulta Odontologica (ultimos 6 meses)")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-dark" }, [
          _vm._v("No. Cepillado Dia")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Señales de Maltrato")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Alcohol")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Fuma")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("SPA")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Desparasitado")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Empleo")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Religión")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Sabe que es VIH")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Sabe que es Cancer de Utero")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Sabe que es el Papiloma")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Sabe que es el Cancer de Seno")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Padre")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Madre")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Hermanos")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Conyuge")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "14px" }
        },
        [_vm._v("JUVENTUD, JOVENES DE 18 A 28 AÑOS")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("tr", [
        _c("th", {
          staticClass: "kt-bg-fill-success",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "13" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Salud Oral")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-info",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "1" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-warning",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Consumo Sustancias Psicoactivas")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-success",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "6" }
        })
      ]),
      _vm._v(" "),
      _c("tr", [
        _c("th", {
          staticClass: "kt-bg-fill-success",
          attrs: { colspan: "5" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "4" }
          },
          [_vm._v("Valoración Nutricional")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-info",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Problemas")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-success",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "1" }
        }),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-danger",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "3" }
        }),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-info",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "1" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-warning",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Habitos")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-success",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "6" }
        })
      ]),
      _vm._v(" "),
      _c("tr", { staticClass: "kt-bg-fill-success" }, [
        _c("td", [_vm._v("No.")]),
        _vm._v(" "),
        _c("td", [_vm._v("Documento")]),
        _vm._v(" "),
        _c("td", [_vm._v("Nombre")]),
        _vm._v(" "),
        _c("td", [_vm._v("Sexo")]),
        _vm._v(" "),
        _c("td", [_vm._v("Edad")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Peso(Kgs)")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Talla(m)")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("IMC")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("P. Cintura")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Visuales")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Auditivos")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("De Conducta")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [
          _vm._v("Enfermedad Cronica")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Dientes Sanos")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Consulta Odontologica (ultimos 6 meses)")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("No. Cepillado Dia")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [
          _vm._v("Señales de Maltrato")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Alcohol")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Fuma")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("SPA")]),
        _vm._v(" "),
        _c("td", [_vm._v("Desparasitado")]),
        _vm._v(" "),
        _c("td", [_vm._v("Empleo")]),
        _vm._v(" "),
        _c("td", [_vm._v("Religión")]),
        _vm._v(" "),
        _c("td", [_vm._v("Sabe que es VIH")]),
        _vm._v(" "),
        _c("td", [_vm._v("Sabe que es Cancer de Utero")]),
        _vm._v(" "),
        _c("td", [_vm._v("Sabe que es el Papiloma")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "14px" }
        },
        [_vm._v("HOMBRES Y MUJERES DE 29 AÑOS A 59 AÑOS")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("tr", [
        _c("th", {
          staticClass: "kt-bg-fill-success",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "13" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Salud Oral")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-info",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "1" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-warning",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Consumo Sustancias Psicoactivas")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-success",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "2" }
        }),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-success",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "6" }
        })
      ]),
      _vm._v(" "),
      _c("tr", [
        _c("th", {
          staticClass: "kt-bg-fill-success",
          attrs: { colspan: "5" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "4" }
          },
          [_vm._v("Valoración Nutricional")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-info",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Problemas")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-success",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "1" }
        }),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-danger",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "3" }
        }),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-info",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "1" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-warning",
            staticStyle: {
              padding: "0",
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "3" }
          },
          [_vm._v("Habitos")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-success",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "2" }
        }),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-dark",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "3" }
        }),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-success",
          staticStyle: {
            padding: "0",
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "4" }
        })
      ]),
      _vm._v(" "),
      _c("tr", { staticClass: "kt-bg-fill-success" }, [
        _c("td", [_vm._v("No.")]),
        _vm._v(" "),
        _c("td", [_vm._v("Documento")]),
        _vm._v(" "),
        _c("td", [_vm._v("Nombre")]),
        _vm._v(" "),
        _c("td", [_vm._v("Sexo")]),
        _vm._v(" "),
        _c("td", [_vm._v("Edad")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Peso(Kgs)")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Talla(m)")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("IMC")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("P. Cintura")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Visuales")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Auditivos")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("De Conducta")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [
          _vm._v("Enfermedad Cronica")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Dientes Sanos")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Consulta Odontologica (ultimos 6 meses)")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("No. Cepillado Dia")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [
          _vm._v("Señales de Maltrato")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Alcohol")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Fuma")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("SPA")]),
        _vm._v(" "),
        _c("td", [_vm._v("Desparasitado")]),
        _vm._v(" "),
        _c("td", [_vm._v("Empleo")]),
        _vm._v(" "),
        _c("td", [_vm._v("Religión")]),
        _vm._v(" "),
        _c("td", [_vm._v("Sabe que es VIH")]),
        _vm._v(" "),
        _c("td", [_vm._v("Sabe que es Cancer de Utero")]),
        _vm._v(" "),
        _c("td", [_vm._v("Sabe que es el Papiloma")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "14px" }
        },
        [_vm._v("E. ADULTO MAYOR (HOMBRES Y MUJERES DE 60 AÑOS Y MAS)")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("tr", [
        _c("th", {
          staticClass: "kt-bg-fill-success",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "6" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "4" }
          },
          [_vm._v("Valoración Nutricional")]
        ),
        _vm._v(" "),
        _c("th", {
          staticClass: "kt-bg-fill-warning",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "15" }
        })
      ]),
      _vm._v(" "),
      _c("tr", { staticClass: "kt-bg-fill-warning" }, [
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("No.")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Documento")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Nombre")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Sexo")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Edad")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [
          _vm._v("Grupo de Ayudas")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Peso(Kgs)")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("Talla(m)")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("IMC")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [_vm._v("P.Cintura")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Cigarrillo ó Tabaco")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Consumo de Alcohol")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Actividad Fisica Recreativa")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Sintomático Respiratorio")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Examen de Seno")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Citologia Cervico Vaginal")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Colposcopia")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Examen de Prostata")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Biposia de Prostata")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Examen de Agudeza Visual")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Subsidio de Entidad del Estado")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Enfermedades Cronicas")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [
          _vm._v("Enfermedades Infecciosas")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-warning" }, [_vm._v("Empleo")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "14px" }
        },
        [_vm._v("V. MORBILIDAD GENERAL")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "10px" }
        },
        [_vm._v("ENFERMEDAD CRONICA")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("tr", [
        _c("th", {
          staticClass: "kt-bg-fill-success",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "4" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "4" }
          },
          [_vm._v("Enfermedad Cronica")]
        )
      ]),
      _vm._v(" "),
      _c("tr", { staticClass: "kt-bg-fill-warning" }, [
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("No.")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Documento")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Nombre")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Sexo")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Nombre de la Enfermedad")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Diagnosticado Hace cuanto tiempo")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Está en Tratamiento")
        ])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "10px" }
        },
        [_vm._v("ENFERMEDADES INFECCIOSAS")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("tr", [
        _c("th", {
          staticClass: "kt-bg-fill-success",
          staticStyle: {
            "font-weight": "normal",
            "vertical-align": "middle",
            "text-align": "center",
            "text-transform": "capitalize"
          },
          attrs: { colspan: "4" }
        }),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-brand",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "4" }
          },
          [_vm._v("Enfermedad Infecciosas")]
        )
      ]),
      _vm._v(" "),
      _c("tr", { staticClass: "kt-bg-fill-warning" }, [
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("No.")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Documento")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Nombre")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-success" }, [_vm._v("Sexo")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-brand" }, [
          _vm._v("Nombre de la Enfermedad")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-brand" }, [
          _vm._v("Diagnosticado Hace cuanto tiempo")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-brand" }, [
          _vm._v("Está en Tratamiento")
        ])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _c(
        "span",
        {
          staticClass: "kt-font-boldest",
          staticStyle: { "font-size": "14px" }
        },
        [_vm._v("MIGRANTE")]
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("thead", [
      _c("tr", [
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-success",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "14" }
          },
          [_vm._v("Migrante")]
        )
      ]),
      _vm._v(" "),
      _c("tr", [
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-info",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "6" }
          },
          [_vm._v("Identificación")]
        ),
        _vm._v(" "),
        _c(
          "th",
          {
            staticClass: "kt-bg-fill-danger",
            staticStyle: {
              "font-weight": "normal",
              "vertical-align": "middle",
              "text-align": "center",
              "text-transform": "capitalize"
            },
            attrs: { colspan: "7" }
          },
          [_vm._v("Condicciones")]
        )
      ]),
      _vm._v(" "),
      _c("tr", { staticClass: "kt-bg-fill-warning" }, [
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("No.")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Documento")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Nombre")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Sexo")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [_vm._v("Edad")]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-info" }, [
          _vm._v("Pais de Origen")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Registrado Como Migrante")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Hace Cuanto Llego Al Pais")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("¿En el Futuro Usted Piensa?")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("¿Usted a Recibido Ayudas del Gobierno?")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Principal Necesidad en Estos Momnetos")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Personas Que Dependen de Usted")
        ]),
        _vm._v(" "),
        _c("td", { staticClass: "kt-bg-fill-danger" }, [
          _vm._v("Ingreso Mensual Actualmente")
        ])
      ])
    ])
  }
]
render._withStripped = true



/***/ }),

/***/ "./resources/js/Servicios/actividad_servicios.js":
/*!*******************************************************!*\
  !*** ./resources/js/Servicios/actividad_servicios.js ***!
  \*******************************************************/
/*! exports provided: listar, guardar, eliminar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listar", function() { return listar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "guardar", function() { return guardar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eliminar", function() { return eliminar; });
/* harmony import */ var _http_services__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./http_services */ "./resources/js/Servicios/http_services.js");

function listar($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/actividad', $data);
}
function guardar($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/actividad/guardar', $data);
}
function eliminar($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/actividad/eliminar', $data);
}

/***/ }),

/***/ "./resources/js/Servicios/barrios_servicios.js":
/*!*****************************************************!*\
  !*** ./resources/js/Servicios/barrios_servicios.js ***!
  \*****************************************************/
/*! exports provided: listarBarrios, guardarBarrios, eliminarBarrios, comboBarrios */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listarBarrios", function() { return listarBarrios; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "guardarBarrios", function() { return guardarBarrios; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eliminarBarrios", function() { return eliminarBarrios; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "comboBarrios", function() { return comboBarrios; });
/* harmony import */ var _http_services__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./http_services */ "./resources/js/Servicios/http_services.js");

function listarBarrios($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/barrios', $data);
}
function guardarBarrios($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/barrios/guardar', $data);
}
function eliminarBarrios($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/barrios/eliminar', $data);
}
function comboBarrios($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/barrios/combo', $data);
}

/***/ }),

/***/ "./resources/js/Servicios/caracterizacion_servicios.js":
/*!*************************************************************!*\
  !*** ./resources/js/Servicios/caracterizacion_servicios.js ***!
  \*************************************************************/
/*! exports provided: listarCaracterizacion, nuevaCaracterizacion, guardar, validar, eliminarCaracterizacion, exportarCaracterizacion, exportarCaracterizacion2, validarJefe, actualizar, editarCaracterizacion, eliminar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listarCaracterizacion", function() { return listarCaracterizacion; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nuevaCaracterizacion", function() { return nuevaCaracterizacion; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "guardar", function() { return guardar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "validar", function() { return validar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eliminarCaracterizacion", function() { return eliminarCaracterizacion; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exportarCaracterizacion", function() { return exportarCaracterizacion; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exportarCaracterizacion2", function() { return exportarCaracterizacion2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "validarJefe", function() { return validarJefe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "actualizar", function() { return actualizar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "editarCaracterizacion", function() { return editarCaracterizacion; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eliminar", function() { return eliminar; });
/* harmony import */ var _http_services__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./http_services */ "./resources/js/Servicios/http_services.js");

function listarCaracterizacion($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/caracterizacion', $data);
}
function nuevaCaracterizacion($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/caracterizacion/nuevo', $data);
}
function guardar($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/caracterizacion/guardar', $data);
}
function validar($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/caracterizacion/validar', $data);
}
function eliminarCaracterizacion($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/caracterizacion/eliminar', $data);
}
function exportarCaracterizacion($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/caracterizacion/exportar', $data);
}
function exportarCaracterizacion2($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/caracterizacion/exportar2', $data);
}
function validarJefe($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/caracterizacion/validarJefe', $data);
}
function actualizar($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/caracterizacion/actualizar', $data);
}
function editarCaracterizacion($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/caracterizacion/editar', $data);
}
function eliminar($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/caracterizacion/eliminar', $data);
}

/***/ }),

/***/ "./resources/js/Servicios/colegios_servicios.js":
/*!******************************************************!*\
  !*** ./resources/js/Servicios/colegios_servicios.js ***!
  \******************************************************/
/*! exports provided: listar, guardar, eliminar, combo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listar", function() { return listar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "guardar", function() { return guardar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eliminar", function() { return eliminar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "combo", function() { return combo; });
/* harmony import */ var _http_services__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./http_services */ "./resources/js/Servicios/http_services.js");

function listar($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/colegios', $data);
}
function guardar($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/colegios/guardar', $data);
}
function eliminar($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/colegios/eliminar', $data);
}
function combo($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/colegios/combo', $data);
}

/***/ }),

/***/ "./resources/js/Servicios/ocupaciones_servicios.js":
/*!*********************************************************!*\
  !*** ./resources/js/Servicios/ocupaciones_servicios.js ***!
  \*********************************************************/
/*! exports provided: listarOcupaciones, guardarOcupaciones, eliminarOcupaciones */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listarOcupaciones", function() { return listarOcupaciones; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "guardarOcupaciones", function() { return guardarOcupaciones; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eliminarOcupaciones", function() { return eliminarOcupaciones; });
/* harmony import */ var _http_services__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./http_services */ "./resources/js/Servicios/http_services.js");

function listarOcupaciones($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/ocupaciones', $data);
}
function guardarOcupaciones($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/ocupaciones/guardar', $data);
}
function eliminarOcupaciones($data) {
  return Object(_http_services__WEBPACK_IMPORTED_MODULE_0__["http"])().post('/ocupaciones/eliminar', $data);
}

/***/ }),

/***/ "./resources/js/Vistas/Caracterizacion/Editar.vue":
/*!********************************************************!*\
  !*** ./resources/js/Vistas/Caracterizacion/Editar.vue ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Editar_vue_vue_type_template_id_8bf6b44a___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Editar.vue?vue&type=template&id=8bf6b44a& */ "./resources/js/Vistas/Caracterizacion/Editar.vue?vue&type=template&id=8bf6b44a&");
/* harmony import */ var _Editar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Editar.vue?vue&type=script&lang=js& */ "./resources/js/Vistas/Caracterizacion/Editar.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _Editar_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Editar.vue?vue&type=style&index=0&lang=css& */ "./resources/js/Vistas/Caracterizacion/Editar.vue?vue&type=style&index=0&lang=css&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");






/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__["default"])(
  _Editar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _Editar_vue_vue_type_template_id_8bf6b44a___WEBPACK_IMPORTED_MODULE_0__["render"],
  _Editar_vue_vue_type_template_id_8bf6b44a___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/Vistas/Caracterizacion/Editar.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/Vistas/Caracterizacion/Editar.vue?vue&type=script&lang=js&":
/*!*********************************************************************************!*\
  !*** ./resources/js/Vistas/Caracterizacion/Editar.vue?vue&type=script&lang=js& ***!
  \*********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Editar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./Editar.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/Vistas/Caracterizacion/Editar.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Editar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/Vistas/Caracterizacion/Editar.vue?vue&type=style&index=0&lang=css&":
/*!*****************************************************************************************!*\
  !*** ./resources/js/Vistas/Caracterizacion/Editar.vue?vue&type=style&index=0&lang=css& ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_style_loader_index_js_node_modules_css_loader_index_js_ref_5_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_2_node_modules_vue_loader_lib_index_js_vue_loader_options_Editar_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/style-loader!../../../../node_modules/css-loader??ref--5-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src??ref--5-2!../../../../node_modules/vue-loader/lib??vue-loader-options!./Editar.vue?vue&type=style&index=0&lang=css& */ "./node_modules/style-loader/index.js!./node_modules/css-loader/index.js?!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/Vistas/Caracterizacion/Editar.vue?vue&type=style&index=0&lang=css&");
/* harmony import */ var _node_modules_style_loader_index_js_node_modules_css_loader_index_js_ref_5_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_2_node_modules_vue_loader_lib_index_js_vue_loader_options_Editar_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_index_js_node_modules_css_loader_index_js_ref_5_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_2_node_modules_vue_loader_lib_index_js_vue_loader_options_Editar_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_style_loader_index_js_node_modules_css_loader_index_js_ref_5_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_2_node_modules_vue_loader_lib_index_js_vue_loader_options_Editar_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_style_loader_index_js_node_modules_css_loader_index_js_ref_5_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_2_node_modules_vue_loader_lib_index_js_vue_loader_options_Editar_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
 /* harmony default export */ __webpack_exports__["default"] = (_node_modules_style_loader_index_js_node_modules_css_loader_index_js_ref_5_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_2_node_modules_vue_loader_lib_index_js_vue_loader_options_Editar_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),

/***/ "./resources/js/Vistas/Caracterizacion/Editar.vue?vue&type=template&id=8bf6b44a&":
/*!***************************************************************************************!*\
  !*** ./resources/js/Vistas/Caracterizacion/Editar.vue?vue&type=template&id=8bf6b44a& ***!
  \***************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Editar_vue_vue_type_template_id_8bf6b44a___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./Editar.vue?vue&type=template&id=8bf6b44a& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/Vistas/Caracterizacion/Editar.vue?vue&type=template&id=8bf6b44a&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Editar_vue_vue_type_template_id_8bf6b44a___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Editar_vue_vue_type_template_id_8bf6b44a___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ })

}]);